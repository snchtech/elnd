DECLARE
    -- Step 1: Create a collection from existing rows with test data, including each row ID
    CURSOR c_existing_rows IS
        SELECT row_id, column1, column2
        FROM your_table;
    
    TYPE t_existing_rows IS TABLE OF c_existing_rows%ROWTYPE;
    l_existing_rows t_existing_rows;
    
    -- Step 2: User modifies the list of data (add or delete rows or change sort column)
    -- ... (Assuming the modified data is stored in a collection called 'l_modified_data')
    
    -- Code for submit button:
    -- Code for checking and deleting items from the Apex collection and the database
    PROCEDURE delete_items(p_row_ids IN t_existing_rows) IS
    BEGIN
        FOR i IN 1..p_row_ids.COUNT LOOP
            DELETE FROM your_table
            WHERE row_id = p_row_ids(i).row_id;
        END LOOP;
    END delete_items;
    
    -- Code for checking and adding new items to the table
    PROCEDURE add_new_items(p_modified_data IN t_existing_rows) IS
    BEGIN
        FOR i IN 1..p_modified_data.COUNT LOOP
            IF p_modified_data(i).row_id IS NULL THEN
                INSERT INTO your_table (column1, column2)
                VALUES (p_modified_data(i).column1, p_modified_data(i).column2);
            END IF;
        END LOOP;
    END add_new_items;
    
    -- Code for checking and updating the sort column in the database
    PROCEDURE update_sort_column(p_modified_data IN t_existing_rows) IS
    BEGIN
        FOR i IN 1..p_modified_data.COUNT LOOP
            UPDATE your_table
            SET sort_column = p_modified_data(i).sort_column
            WHERE row_id = p_modified_data(i).row_id;
        END LOOP;
    END update_sort_column;
BEGIN
    -- Step 1: Create a collection from existing rows with test data, including each row ID
    OPEN c_existing_rows;
    FETCH c_existing_rows BULK COLLECT INTO l_existing_rows;
    CLOSE c_existing_rows;
    
    -- Step 2: User modifies the list of data (add or delete rows or change sort column)
    -- ... (Assuming the modified data is stored in a collection called 'l_modified_data')
    
    -- Code for submit button:
    -- Code for checking and deleting items from the Apex collection and the database
    delete_items(l_modified_data);
    
    -- Code for checking and adding new items to the table
    add_new_items(l_modified_data);
    
    -- Code for checking and updating the sort column in the database
    update_sort_column(l_modified_data);
    
    COMMIT;
END;