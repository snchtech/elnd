–¢–∞–∫, —Ç–∏ **–º–æ–∂–µ—à –Ω–∞–ø–∏—Å–∞—Ç–∏ –æ–∫—Ä–µ–º—É —Ñ—É–Ω–∫—Ü—ñ—é**, —è–∫–∞:

### üîπ –ü—Ä–∏–π–º–∞—î –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:
- `p_date_start` ‚Äì –ø–æ—á–∞—Ç–æ–∫ –ø–µ—Ä—ñ–æ–¥—É;
- `p_date_end` ‚Äì –∫—ñ–Ω–µ—Ü—å –ø–µ—Ä—ñ–æ–¥—É (–º–æ–∂–µ –±—É—Ç–∏ `NULL`);
- `p_org_type` ‚Äì `1` –¥–ª—è —Ñ—ñ—Ä–º–∏, `0` –¥–ª—è –ø—ñ–¥—Ä—è–¥–Ω–∏–∫—ñ–≤;
- `p_stat_type` ‚Äì `'TEAM'` –∞–±–æ `'WORKER'`, —Ç–æ–±—Ç–æ —â–æ —Å–∞–º–µ —Ä–∞—Ö—É–≤–∞—Ç–∏.

---

## ‚úÖ –§—É–Ω–∫—Ü—ñ—è `get_outfit_stat`

```sql
CREATE OR REPLACE FUNCTION get_outfit_stat (
    p_date_start IN DATE,
    p_date_end   IN DATE DEFAULT NULL,
    p_org_type   IN NUMBER,      -- 1 = —Ñ—ñ—Ä–º–∞, 0 = –ø—ñ–¥—Ä—è–¥–Ω–∏–∫
    p_stat_type  IN VARCHAR2     -- 'TEAM' –∞–±–æ 'WORKER'
) RETURN NUMBER IS
    v_result NUMBER := 0;
BEGIN
    SELECT
        CASE 
            WHEN p_stat_type = 'TEAM' THEN COUNT(*)
            WHEN p_stat_type = 'WORKER' THEN SUM(team_count)
        END
    INTO v_result
    FROM (
        SELECT 
            o.id_outfit,
            DECODE(o.id_org, NULL, 0, 1) AS org,
            g.team_count
        FROM (
            SELECT 
                k.id_outfit,
                team.count_team + DECODE(k.performer, NULL, 0, 1) AS team_count
            FROM (
                SELECT 
                    tt.id_outfit, 
                    COUNT(tt.id) AS count_team 
                FROM tw_wp_team_v tt, tw.wp_outfit_v k
                WHERE tt.id_outfit = k.id_outfit
                  AND (tt.data_end >= p_date_start OR tt.data_end IS NULL)
                GROUP BY tt.id_outfit
            ) team,
            tw.wp_outfit_v k
            WHERE team.id_outfit = k.id_outfit
        ) g
        LEFT JOIN (
            SELECT
                tl.id_outfit,
                COUNT(id_status) AS outfit_open 
            FROM tw_wp_status_v tl
            WHERE tl.data >= p_date_start
              AND (p_date_end IS NULL OR tl.data <= p_date_end)
              AND tl.id_status = 6
            GROUP BY tl.id_outfit
        ) r ON r.id_outfit = g.id_outfit
        LEFT JOIN tw.wp_outfit@to_asics10 o ON o.id_outfit = g.id_outfit 
        WHERE (
            (o.data_start <= NVL(p_date_end, o.data_start) 
             AND o.data_finish >= p_date_start)
            OR TRUNC(o.data_prolongation, 'dd') >= TRUNC(p_date_start, 'dd')
        )
        AND r.outfit_open IS NOT NULL

        UNION ALL

        SELECT 
            oo.id_outfit,
            DECODE(oo.id_org, NULL, 0, 1) AS org,
            0 AS team_count
        FROM (
            SELECT
                tl.id_outfit,
                COUNT(id_status) AS outfit_open
            FROM tw_wp_status_v tl
            WHERE tl.data >= p_date_start
              AND (p_date_end IS NULL OR tl.data <= p_date_end)
              AND tl.id_status = 6
            GROUP BY tl.id_outfit
        ) rr
        LEFT JOIN tw.wp_outfit@to_asics10 oo ON oo.id_outfit = rr.id_outfit
        WHERE (
            (oo.data_start <= NVL(p_date_end, oo.data_start) 
             AND oo.data_finish >= p_date_start)
            OR TRUNC(oo.data_prolongation, 'dd') >= TRUNC(p_date_start, 'dd')
        )
        AND oo.team IS NULL
        AND rr.outfit_open IS NOT NULL
    )
    WHERE org = p_org_type;

    RETURN NVL(v_result, 0);
EXCEPTION
    WHEN OTHERS THEN
        RETURN -1;
END;
/
```

---

## üß™ –ü—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–ª–∏–∫—É:

### 1. üìÜ –í—ñ–¥ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –º–æ–º–µ–Ω—Ç—É —ñ –¥–∞–ª—ñ (—Ñ—ñ—Ä–º–∞, –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—Ä–∏–≥–∞–¥):
```sql
SELECT get_outfit_stat(SYSDATE, NULL, 1, 'TEAM') FROM DUAL;
```

### 2. ‚è∞ –í—ñ–¥ 12:00 –¥–æ 18:00 —Å—å–æ–≥–æ–¥–Ω—ñ (–ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∏ —Ñ—ñ—Ä–º–∏):
```sql
SELECT get_outfit_stat(TRUNC(SYSDATE) + 12/24, TRUNC(SYSDATE) + 18/24, 1, 'WORKER') FROM DUAL;
```

### 3. üìÖ –ó–∞ –¥–µ–Ω—å (–±—Ä–∏–≥–∞–¥–∏ –ø—ñ–¥—Ä—è–¥–Ω–∏–∫—ñ–≤):
```sql
SELECT get_outfit_stat(TRUNC(SYSDATE), TRUNC(SYSDATE + 1) - INTERVAL '1' SECOND, 0, 'TEAM') FROM DUAL;
```

---

## üß© –Ø–∫ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏:
- —É APEX (–¥–∏–Ω–∞–º—ñ—á–Ω–∏–π SQL / PL/SQL –±–ª–æ–∫),
- —É –∑–≤—ñ—Ç–∞—Ö (–≤–∏–≤–æ–¥–∏—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è),
- —É REST –∞–±–æ JavaScript (–º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ –∑ JSON-–≤–µ—Ä—Å—ñ—î—é).

–•–æ—á–µ—à –≤–µ—Ä—Å—ñ—é, —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –≤—ñ–¥—Ä–∞–∑—É –¥–≤—ñ —Ü–∏—Ñ—Ä–∏ –≤ –æ–¥–Ω–æ–º—É –≤–∏–∫–ª–∏–∫—É (`ODCIVARCHAR2LIST` –∞–±–æ JSON)?