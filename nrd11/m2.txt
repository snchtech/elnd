CREATE OR REPLACE FORCE VIEW v_outfit_pivot_base AS
WITH base_data AS (
  SELECT 
    t.id_outfit,
    t.org,
    t.org_txt,
    t.department,
    t.unit,
    t.team_count,
    t.data_start,
    t.status_start_date,
    t.status_end_date,
    t.performer_id,
    u.performer_department_id,
    d.depart_short_name AS performer_department_name
  FROM TEST_OUTFIT_DATA t
  LEFT JOIN USERS u ON t.performer_id = u.id
  LEFT JOIN DEPARTMENTS d ON u.performer_department_id = d.id
  WHERE t.outfit_open = 6
),
agg_data AS (
  -- Основні записи по department
  SELECT
    'MAIN' AS record_type,
    CASE WHEN org = 0 THEN department ELSE org_txt END AS group_name,
    org,
    department,
    NULL AS performer_department_id,
    unit,
    data_start,
    status_start_date,
    status_end_date,
    COUNT(DISTINCT id_outfit) AS brigades,
    SUM(team_count) AS people
  FROM base_data
  GROUP BY
    CASE WHEN org = 0 THEN department ELSE org_txt END,
    org,
    department,
    unit,
    data_start,
    status_start_date,
    status_end_date

  UNION ALL

  -- Дочірні записи по performer_department_id
  SELECT
    'SUB' AS record_type,
    CASE WHEN org = 0 THEN performer_department_name ELSE org_txt END AS group_name,
    org,
    department,
    performer_department_id,
    unit,
    data_start,
    status_start_date,
    status_end_date,
    COUNT(DISTINCT id_outfit) AS brigades,
    SUM(team_count) AS people
  FROM base_data
  WHERE performer_department_id IS NOT NULL
  GROUP BY
    CASE WHEN org = 0 THEN performer_department_name ELSE org_txt END,
    org,
    department,
    performer_department_id,
    unit,
    data_start,
    status_start_date,
    status_end_date
)
SELECT
  record_type,
  group_name,
  org,
  department,
  performer_department_id,
  data_start,
  status_start_date,
  status_end_date,
  NVL(SUM(CASE WHEN unit = 0 THEN people END), 0) AS u1_people,
  NVL(SUM(CASE WHEN unit = 0 THEN brigades END), 0) AS u1_brigades,
  NVL(SUM(CASE WHEN unit = 1 THEN people END), 0) AS u2_people,
  NVL(SUM(CASE WHEN unit = 1 THEN brigades END), 0) AS u2_brigades,
  NVL(SUM(CASE WHEN unit = 2 THEN people END), 0) AS u3_people,
  NVL(SUM(CASE WHEN unit = 2 THEN brigades END), 0) AS u3_brigades,
  SUM(people) AS total_people,
  SUM(brigades) AS total_brigades
FROM agg_data
GROUP BY
  record_type,
  group_name,
  org,
  department,
  performer_department_id,
  data_start,
  status_start_date,
  status_end_date
ORDER BY
  department,
  record_type,
  group_name
