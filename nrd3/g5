Так, зрозуміло — помилка **`table v_dep_tbl does not exist`** виникає, бо SQL-движок намагається інтерпретувати `TABLE(v_dep_tbl)` як звичайну таблицю з бази даних, а не як PL/SQL-колекцію. Це трапляється, коли ви пишете `TABLE(v_dep_tbl)` **всередині SQL-запиту, який компілюється як статичний SQL**.

Щоб це обійти, потрібно:
1. **Зробити SQL-вираз динамічним**, або
2. **Винести перевірку `department` у фільтр через `EXISTS`**, або
3. **Реалізувати власну функцію, яка перевіряє входження значення у список**.

### Найпростіше рішення — написати функцію, яка імітує `MEMBER OF`

Створіть допоміжну функцію (разово), яка перевіряє, чи значення входить у `ODCIVARCHAR2LIST`:

```sql
CREATE OR REPLACE FUNCTION str_in_list (
    p_value   IN VARCHAR2,
    p_list    IN SYS.ODCIVARCHAR2LIST
) RETURN BOOLEAN IS
BEGIN
    FOR i IN 1 .. p_list.COUNT LOOP
        IF p_list(i) = p_value THEN
            RETURN TRUE;
        END IF;
    END LOOP;
    RETURN FALSE;
END;
```

І потім в SQL-фільтрах використовуйте:

```sql
AND (p_departments IS NULL OR str_in_list(department, v_dep_tbl) = TRUE)
```

**Пояснення:**
- `str_in_list` перебирає список і повертає `TRUE`, якщо значення знайдене.
- Працює в PL/SQL без необхідності таблиць або динамічного SQL.

---

### Альтернатива: Динамічний SQL (більш складно і небажано тут)

Якщо дуже потрібно використовувати `TABLE(...)`, тоді потрібно писати запити через `EXECUTE IMMEDIATE INTO`, що значно ускладнює код.

---

Хочеш — можу повністю переписати ваш код з цією функцією `str_in_list`, щоб усе зібрано працювало.