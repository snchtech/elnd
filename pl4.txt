2. Set up the session middleware in your Express application:
javascript
   const express = require('express');
   const session = require('express-session');
   const FileStore = require('session-file-store')(session);

   const app = express();

   app.use(session({
     secret: 'your-secret-key',
     resave: false,
     saveUninitialized: true,
     store: new FileStore({ path: '/tmp/sessions' }) // Adjust the path as needed
   }));
   


3. In your API route or middleware, you can access the session and check if the cookie exists:
javascript
   app.get('/your-api-route', (req, res) => {
     const cookieValue = req.cookies.yourCookieName; // Replace with your actual cookie name

     if (req.session && req.session.cookie && req.session.cookie.value === cookieValue) {
       // The session contains the cookie value
       // Perform your desired actions here
       res.send('Cookie found in session');
     } else {
       // The session does not contain the cookie value
       res.send('Cookie not found in session');
     }
   });
   


Make sure to replace `'yourCookieName'` with the actual name of the cookie you are sending in the fetch request.

4. In your client-side code, when making the fetch request, include the cookie in the request headers:
javascript
   fetch('/your-api-route', {
     headers: {
       'Cookie': 'yourCookieName=cookieValue' // Replace with your actual cookie name and value
     }
   })
     .then(response => response.text())
     .then(data => console.log(data))
     .catch(error => console.log(error));
   


Replace `'yourCookieName'` with the actual name of the cookie and `'cookieValue'` with the value you want to send.

By following these steps, you can check if the API server session in `session-file-store` contains the cookie that you send in the fetch request from your site.