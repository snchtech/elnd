Ок, зробимо це акуратно: один AJAX‑процес перевіряє користувача й фіксує запис у БД; JS показує **Inline Dialog** на 7 секунд із “успіх/помилка” у flat‑стилі.

# Що створити в APEX

## 1) Елементи/кнопка на сторінці

* `P10_NUMBER` — Number Field (ваше поле коду).
* `P10_OK` — кнопка (Action: **Redirect to URL** з `javascript:submitCheck();`) — це дає нам анти‑подвійний тап через JS.

## 2) AJAX Callback процес

**Processes → Create → Type: PL/SQL → “AJAX Callback”** з ім’ям `VERIFY_AND_LOG`:

```plsql
DECLARE
  l_user_id   NUMBER;
  l_exists    NUMBER;
  l_ts        VARCHAR2(16);
  l_ip        VARCHAR2(45) := owa_util.get_cgi_env('REMOTE_ADDR');
  l_ua        VARCHAR2(255):= SUBSTR(owa_util.get_cgi_env('HTTP_USER_AGENT'),1,255);

  -- заміни назви таблиць/колонок під свою схему
  l_firstname USERS.USER_FIRSTNAME%TYPE;
  l_lastname  USERS.USER_LASTNAME%TYPE;
  l_depart    USERS.USER_DEPART%TYPE;
  l_position  USERS.USER_POSITION%TYPE;
BEGIN
  apex_json.open_object;

  -- Валідація коду
  IF NOT REGEXP_LIKE(:P10_NUMBER, '^\d+$') THEN
    apex_json.write('ok', false);
    apex_json.write('message', 'Введіть лише цифри.');
    apex_json.close_object;
    RETURN;
  END IF;

  l_user_id := TO_NUMBER(:P10_NUMBER);

  -- Пошук користувача
  SELECT COUNT(*)
    INTO l_exists
    FROM USERS u
   WHERE u.USER_ID = l_user_id;

  IF l_exists = 0 THEN
    -- Логаємо невдалу спробу (опціонально)
    INSERT INTO REQUEST_LOG (
      USER_ID, DEVICE_IP, REQUEST_ACTION, REQUEST_DATE,
      SESSION_ID, USER_AGENT, REQUEST_SOURCE, RESULT_STATUS
    ) VALUES (
      l_user_id, l_ip, 'CHECK', SYSTIMESTAMP,
      v('APP_SESSION'), l_ua, 'FORM', 'FAIL'
    );

    apex_json.write('ok', false);
    apex_json.write('message', 'Користувача не знайдено.');
    apex_json.close_object;
    RETURN;
  END IF;

  -- Дані користувача
  SELECT u.USER_FIRSTNAME, u.USER_LASTNAME, u.USER_DEPART, u.USER_POSITION
    INTO l_firstname, l_lastname, l_depart, l_position
    FROM USERS u
   WHERE u.USER_ID = l_user_id;

  -- Фіксуємо успішний запит (дію назви як хочеш: CHECK/LOGIN тощо)
  INSERT INTO REQUEST_LOG (
    USER_ID, DEVICE_IP, REQUEST_ACTION, REQUEST_DATE,
    SESSION_ID, USER_AGENT, REQUEST_SOURCE, RESULT_STATUS
  ) VALUES (
    l_user_id, l_ip, 'CHECK', SYSTIMESTAMP,
    v('APP_SESSION'), l_ua, 'FORM', 'SUCCESS'
  );

  -- Форматуємо час
  SELECT to_char(SYSTIMESTAMP AT LOCAL TIME ZONE, 'dd.mm.yyyy hh24:mi')
    INTO l_ts
    FROM dual;

  -- Відповідь JSON
  apex_json.write('ok', true);
  apex_json.write('ts', l_ts);
  apex_json.write('firstname', l_firstname);
  apex_json.write('lastname',  l_lastname);
  apex_json.write('depart',    l_depart);
  apex_json.write('position',  l_position);

  apex_json.close_object;

EXCEPTION
  WHEN OTHERS THEN
    INSERT INTO REQUEST_LOG (
      USER_ID, DEVICE_IP, REQUEST_ACTION, REQUEST_DATE,
      SESSION_ID, USER_AGENT, REQUEST_SOURCE,
      RESULT_STATUS, ERROR_CODE, ERROR_MESSAGE
    ) VALUES (
      CASE WHEN REGEXP_LIKE(:P10_NUMBER,'^\d+$') THEN TO_NUMBER(:P10_NUMBER) ELSE NULL END,
      NVL(l_ip,'UNKNOWN'), 'CHECK', SYSTIMESTAMP,
      v('APP_SESSION'), l_ua, 'FORM',
      'FAIL', SQLCODE, SUBSTR(SQLERRM,1,4000)
    );

    apex_json.open_object;
    apex_json.write('ok', false);
    apex_json.write('message', 'Системна помилка. Спробуйте ще раз.');
    apex_json.close_object;
END;
```

> Якщо замість `CHECK` треба “LOGIN/LOGOUT” — просто підстав у `REQUEST_ACTION` відповідну логіку.

## 3) Діалог‑регіон (Inline Dialog)

**Region → Create → Type: Inline Dialog**

* **Title:** “Статус перевірки” (можна приховати)
* **Static ID:** `userDialog`
* **Template Options:** Backdrop = Yes, Show Close = Off (ми додамо свою кнопку), Modal = On

**Source (Static Content):**

```html
<div class="dlg-card">
  <button type="button" class="dlg-close" aria-label="Закрити" onclick="apex.theme.closeRegion('userDialog')">×</button>

  <!-- УСПІХ -->
  <div id="dlg-success" class="dlg-section" hidden>
    <div class="dlg-icon success">
      <span class="fa fa-check-circle" aria-hidden="true"></span>
    </div>
    <div class="dlg-text">
      <div class="dlg-title">Запит виконано успішно</div>
      <div class="dlg-row"><span class="lbl">Час:</span> <span id="dlg-ts"></span></div>
      <div class="dlg-row"><span class="lbl">Ім’я:</span> <span id="dlg-fn"></span></div>
      <div class="dlg-row"><span class="lbl">Прізвище:</span> <span id="dlg-ln"></span></div>
      <div class="dlg-row"><span class="lbl">Відділ:</span> <span id="dlg-dep"></span></div>
      <div class="dlg-row"><span class="lbl">Посада:</span> <span id="dlg-pos"></span></div>
    </div>
  </div>

  <!-- ПОМИЛКА -->
  <div id="dlg-error" class="dlg-section" hidden>
    <div class="dlg-icon error">
      <span class="fa fa-times-circle" aria-hidden="true"></span>
    </div>
    <div class="dlg-text">
      <div class="dlg-title">Запит не виконано</div>
      <div class="dlg-row"><span id="dlg-errmsg">Користувача не знайдено.</span></div>
    </div>
  </div>
</div>
```

> Це “порожня” оболонка: ми просто підставляємо дані через JS і відкриваємо на 7 секунд.

## 4) CSS (Page → CSS → Inline)

Flat‑карточка, іконки, кнопка закриття:

```css
/* Діалогова картка у flat-стилі */
#userDialog .dlg-card {
  position: relative;
  background: #ffffff;
  border: 1px solid #e9eef5;
  border-radius: 16px;
  padding: 20px 20px 18px 20px;
  min-width: 320px;
  max-width: 520px;
  box-shadow: 0 16px 36px rgba(0,0,0,0.12);
}

/* Кнопка закриття */
#userDialog .dlg-close {
  position: absolute;
  top: 10px; right: 12px;
  background: transparent;
  border: none;
  font-size: 20px;
  line-height: 1;
  cursor: pointer;
  opacity: .6;
}
#userDialog .dlg-close:hover { opacity: 1; }

/* Блоки успіх/помилка */
#userDialog .dlg-section {
  display: flex;
  gap: 14px;
  align-items: flex-start;
}

#userDialog .dlg-icon {
  font-size: 40px;
  line-height: 1;
  margin-top: 2px;
}
#userDialog .dlg-icon.success { color: #30b566; } /* зелений */
#userDialog .dlg-icon.error   { color: #e64a4a; } /* червоний */

/* Текстова частина */
#userDialog .dlg-title {
  font-weight: 700;
  font-size: 18px;
  margin-bottom: 6px;
  color: #1f2a37;
}
#userDialog .dlg-row {
  font-size: 14px;
  color: #475569;
  margin: 3px 0;
}
#userDialog .lbl {
  color: #6b7280;
  margin-right: 6px;
}
```

## 5) JS (Page → JavaScript → Function and Global Variable Declaration)

Виклик AJAX, анти‑подвійний тап, показ/автозакриття діалогу:

```js
var __submitting = false;
var __dlgTimer = null;

function submitCheck(){
  if (__submitting) return;               // анти double-tap
  __submitting = true;
  $('#P10_OK').prop('disabled', true);

  apex.message.clearErrors();

  apex.server.process(
    "VERIFY_AND_LOG",
    { pageItems: "#P10_NUMBER" },
    {
      dataType: "json",
      success: function(res){
        if (res && res.ok){
          // Заповнюємо дані успіху
          document.getElementById('dlg-ts').textContent  = res.ts || '';
          document.getElementById('dlg-fn').textContent  = res.firstname || '';
          document.getElementById('dlg-ln').textContent  = res.lastname || '';
          document.getElementById('dlg-dep').textContent = res.depart   || '';
          document.getElementById('dlg-pos').textContent = res.position || '';

          toggleDialogSection(true);
        } else {
          // Повідомлення помилки
          var msg = (res && res.message) ? res.message : 'Помилка виконання запиту.';
          document.getElementById('dlg-errmsg').textContent = msg;

          // inline error біля поля
          apex.message.showErrors([{
            type: "error",
            location: "inline",
            pageItem: "P10_NUMBER",
            message: msg,
            unsafe: false
          }]);

          toggleDialogSection(false);
        }
      },
      error: function(){
        document.getElementById('dlg-errmsg').textContent = 'Проблеми з підключенням. Спробуйте ще раз.';
        apex.message.showErrors([{
          type: "error",
          location: "inline",
          pageItem: "P10_NUMBER",
          message: "Проблеми з підключенням. Спробуйте ще раз.",
          unsafe: false
        }]);
        toggleDialogSection(false);
      },
      complete: function(){
        __submitting = false;
        $('#P10_OK').prop('disabled', false);
      }
    }
  );
}

// показати потрібний блок і відкрити діалог на 7с
function toggleDialogSection(isSuccess){
  var ok  = document.getElementById('dlg-success');
  var err = document.getElementById('dlg-error');

  if (isSuccess){
    ok.removeAttribute('hidden');
    err.setAttribute('hidden', 'hidden');
  } else {
    err.removeAttribute('hidden');
    ok.setAttribute('hidden', 'hidden');
  }

  apex.theme.openRegion('userDialog');

  if (__dlgTimer) { clearTimeout(__dlgTimer); }
  __dlgTimer = setTimeout(function(){
    apex.theme.closeRegion('userDialog');
  }, 7000);
}
```

> Хочеш, щоб Enter у полі `P10_NUMBER` теж запускав перевірку — додай:

```js
document.addEventListener('DOMContentLoaded', function(){
  var el = document.getElementById('P10_NUMBER');
  if (el){
    el.addEventListener('keydown', function(e){
      if (e.key === 'Enter'){ submitCheck(); e.preventDefault(); }
    });
  }
});
```

---

## Підсумок роботи

1. Користувач вводить код → `P10_OK` запускає `submitCheck()`.
2. JS викликає AJAX `VERIFY_AND_LOG`.
3. PL/SQL шукає користувача, пише запис у `REQUEST_LOG`, повертає JSON.
4. JS відкриває **Inline Dialog**:

   * **успіх:** зелена іконка, час `dd.mm.yyyy hh24:mi`, `firstname, lastname, depart, position`.
   * **помилка:** червона іконка + “Користувача не знайдено.”
   * Діалог закривається автоматично через 7 секунд або кнопкою “×”.

Якщо потрібно — можу швидко підправити під твої назви таблиць/полів або додати відображення **OFFICE** за IP.
