Так, можна «занулити» `P2_NUMBER` саме на рівні **session state** прямо у процесингу — до формування JSON. Є кілька надійних варіантів.

---

## Варіант 1 — у вашому AJAX/Processing (рекомендовано)

У тому ж PL/SQL‑процесі, який повертає JSON, просто очистіть значення перед `apex_json.close_object;`:

```plsql
-- ... ваш код перевірок/вставок ...

-- 1) очистити session state конкретного айтема
APEX_UTIL.SET_SESSION_STATE('P2_NUMBER', NULL);

-- (або коротко, це також оновлює session state)
-- :P2_NUMBER := NULL;

-- 2) і тільки потім завершити JSON
apex_json.close_object;
```

> Порядок безпечний: очистили — віддали JSON. На клієнті значення вже не «липне» до сесії.

---

## Варіант 2 — очистити всю сторінку 2

Якщо хочете прибрати **всі** значення сторінки:

```plsql
APEX_UTIL.CLEAR_PAGE_CACHE(p_page => 2);
```

Можна викликати в тому ж процесі (перед `close_object`). Це зніме session state з усіх `P2_*`.

---

## Варіант 3 — після Submit (не AJAX)

Якщо це класичне відправлення сторінки з *Branch*:

* У **Branch** → *Clear Cache* вкажіть: `2` (або `2,P2_NUMBER` для точкового очищення).
* Або створіть процес **Clear Cache for Items** і додайте `P2_NUMBER`.

---

## Клієнт vs сесія (важливо)

* Те, що ви вже робите в JS (`apex.item("P2_NUMBER").setValue("")`) — очищає **клієнтське** поле.
* `APEX_UTIL.SET_SESSION_STATE` / `CLEAR_PAGE_CACHE` — очищають **серверну** session state, щоб значення не поверталося знову (наприклад, при оновленні сторінки або наступних запитах).

---

## Швидка рекомендація

* Якщо у вас AJAX‑виклик, додайте **в кінці процесу**:

  ```plsql
  APEX_UTIL.SET_SESSION_STATE('P2_NUMBER', NULL);
  ```
* Якщо це submit + редірект, використовуйте **Branch → Clear Cache: `2`**.

Цього достатньо, щоб `P2_NUMBER` був порожнім і на клієнті (ви вже чистите у JS), і в сесії (сервер не зберігатиме його значення).
