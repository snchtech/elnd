### üöÄ **–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥–µ—Ä–∞ –¥–ª—è Node.js API –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º `winston` —ñ `morgan`**

#### **1Ô∏è‚É£ –ß–æ–º—É –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ `winston` —ñ `morgan` —Ä–∞–∑–æ–º?**

- **üîç `winston`** ‚Äî –ø–æ—Ç—É–∂–Ω–∏–π –ª–æ–≥–µ—Ä –¥–ª—è Node.js —ñ–∑ –≥–Ω—É—á–∫–æ—é –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—î—é, –ø—ñ–¥—Ç—Ä–∏–º—É—î –ª–æ–≥—É–≤–∞–Ω–Ω—è —É —Ñ–∞–π–ª, –≤–∏–≤—ñ–¥ —É –∫–æ–Ω—Å–æ–ª—å, –∞ —Ç–∞–∫–æ–∂ –æ–±–º–µ–∂–µ–Ω–Ω—è —Ä–æ–∑–º—ñ—Ä—É –ª–æ–≥—ñ–≤ —ñ —Ä–æ—Ç–∞—Ü—ñ—é.
  
- **üìä `morgan`** ‚Äî middleware –¥–ª—è Express, —è–∫–∏–π –ª–æ–≥—É—î HTTP-–∑–∞–ø–∏—Ç–∏ (–º–µ—Ç–æ–¥, URL, —Å—Ç–∞—Ç—É—Å, —á–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è).  
  üëâ **Morgan** —ñ–¥–µ–∞–ª—å–Ω–æ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å –¥–ª—è –∑–±–æ—Ä—É –º–µ—Ç—Ä–∏–∫ HTTP-–∑–∞–ø–∏—Ç—ñ–≤, –∞–ª–µ –Ω–µ –¥–ª—è –∑–∞–≥–∞–ª—å–Ω–æ–≥–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è.

üîî **–ö–æ–º–±—ñ–Ω–∞—Ü—ñ—è `winston` + `morgan`:**  
- `morgan` –≤—ñ–¥—Å–ª—ñ–¥–∫–æ–≤—É—î –≤—Å—ñ –∑–∞–ø–∏—Ç–∏,  
- `winston` ‚Äî –∑–±–µ—Ä—ñ–≥–∞—î –ª–æ–≥—ñ–∫—É –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –ª–æ–≥—ñ–≤ —ñ –æ–±—Ä–æ–±–∫–∏ –ø–æ–º–∏–ª–æ–∫.  

---

### üìÇ **–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ—î–∫—Ç—É**

```
/backend
‚îú‚îÄ‚îÄ /logs               # –õ–æ–≥–∏ –ø—Ä–æ—î–∫—Ç—É
‚îÇ   ‚îú‚îÄ‚îÄ error.log       # –õ–æ–≥–∏ –ø–æ–º–∏–ª–æ–∫
‚îÇ   ‚îú‚îÄ‚îÄ combined.log    # –í—Å—ñ –ª–æ–≥–∏
‚îÇ   ‚îî‚îÄ‚îÄ access.log      # HTTP-–∑–∞–ø–∏—Ç–∏
‚îú‚îÄ‚îÄ /middlewares
‚îÇ   ‚îú‚îÄ‚îÄ authMiddleware.js
‚îÇ   ‚îî‚îÄ‚îÄ loggerMiddleware.js
‚îú‚îÄ‚îÄ /utils
‚îÇ   ‚îî‚îÄ‚îÄ logger.js       # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥–µ—Ä–∞
‚îú‚îÄ‚îÄ server.js
‚îî‚îÄ‚îÄ package.json
```

---

### 2Ô∏è‚É£ **–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è `winston` –¥–ª—è –ª–æ–≥—ñ–≤**

üìÇ **`/utils/logger.js`**

```javascript
import { createLogger, format, transports } from 'winston';
import 'winston-daily-rotate-file';
import path from 'path';

const { combine, timestamp, printf, errors, json } = format;

// üïí –§–æ—Ä–º–∞—Ç –¥–∞—Ç–∏
const timeFormat = timestamp({ format: 'DD.MM.YYYY HH:mm:ss' });

// üìÑ –ö–∞—Å—Ç–æ–º–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –ª–æ–≥—ñ–≤
const customFormat = printf(({ level, message, timestamp, stack }) => {
  return `${timestamp} | ${level.toUpperCase()} | ${stack || message}`;
});

// üìÅ –®–ª—è—Ö –¥–æ –ø–∞–ø–∫–∏ –∑ –ª–æ–≥–∞–º–∏
const logDir = path.join(process.cwd(), 'logs');

// üõ† –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥–µ—Ä–∞
const logger = createLogger({
  level: 'info',
  format: combine(
    errors({ stack: true }),
    timeFormat,
    customFormat
  ),
  transports: [
    // üìú –õ–æ–≥ –¥–ª—è –ø–æ–º–∏–ª–æ–∫
    new transports.File({
      filename: `${logDir}/error.log`,
      level: 'error',
      maxsize: 15 * 1024 * 1024, // 15MB
      maxFiles: '14d', // –ó–±–µ—Ä—ñ–≥–∞—Ç–∏ 14 –¥–Ω—ñ–≤
    }),

    // üìú –ó–∞–≥–∞–ª—å–Ω–∏–π –ª–æ–≥
    new transports.File({
      filename: `${logDir}/combined.log`,
      maxsize: 15 * 1024 * 1024, // 15MB
      maxFiles: '14d',
    }),
  ],
});

// üîé –õ–æ–≥–∏ –≤ –∫–æ–Ω—Å–æ–ª—ñ –¥–ª—è —Ä–æ–∑—Ä–æ–±–∫–∏
if (process.env.NODE_ENV !== 'production') {
  logger.add(new transports.Console({
    format: combine(
      timeFormat,
      customFormat
    )
  }));
}

export default logger;
```

---

### 3Ô∏è‚É£ **–î–æ–¥–∞–º–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è HTTP-–∑–∞–ø–∏—Ç—ñ–≤ —á–µ—Ä–µ–∑ `morgan`**

üìÇ **`/middlewares/loggerMiddleware.js`**

```javascript
import morgan from 'morgan';
import logger from '../utils/logger.js';

// üì¶ –§–æ—Ä–º–∞—Ç –ª–æ–≥—ñ–≤ HTTP-–∑–∞–ø–∏—Ç—ñ–≤
const morganFormat = ':date[iso] | :method :url | :status | :response-time ms | User: :user';

// üîê –î–æ–¥–∞—î–º–æ username —ñ–∑ —Ç–æ–∫–µ–Ω–∞
morgan.token('user', (req) => {
  return req.user ? req.user.username : '–ì—ñ—Å—Ç—å';
});

// üìÑ –õ–æ–≥–∏ –≤ —Ñ–∞–π–ª access.log
const morganMiddleware = morgan(morganFormat, {
  stream: {
    write: (message) => logger.info(message.trim())
  }
});

export default morganMiddleware;
```

---

### 4Ô∏è‚É£ **–Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –ª–æ–≥–µ—Ä–∞ —É —Å–µ—Ä–≤–µ—Ä**

üìÇ **`server.js`**

```javascript
import express from 'express';
import cors from 'cors';
import dotenv from 'dotenv';
import { authenticateToken } from './middlewares/authMiddleware.js';
import morganMiddleware from './middlewares/loggerMiddleware.js';
import authRoutes from './routes/auth.js';
import schemeRoutes from './routes/schemes.js';

dotenv.config();

const app = express();
const PORT = process.env.PORT || 5000;

app.use(cors());
app.use(express.json());

// üîé –õ–æ–≥—É–≤–∞–Ω–Ω—è –≤—Å—ñ—Ö HTTP-–∑–∞–ø–∏—Ç—ñ–≤
app.use(morganMiddleware);

// üîë –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ –ª–æ–≥—ñ–Ω –±–µ–∑ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞
app.use('/api/auth', authRoutes);

// üîê –ó–∞—Ö–∏—â–µ–Ω—ñ –º–∞—Ä—à—Ä—É—Ç–∏
app.use('/api', authenticateToken, schemeRoutes);

// üñ•Ô∏è –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–µ—Ä–≤–µ—Ä
app.listen(PORT, () => {
  console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä –ø—Ä–∞—Ü—é—î –Ω–∞ –ø–æ—Ä—Ç—ñ ${PORT}`);
});
```

---

### 5Ô∏è‚É£ **–ü—Ä–∏–∫–ª–∞–¥ –ª–æ–≥—ñ–≤**

üìÇ **`logs/combined.log`**

```
25.10.2025 12:50:10 | INFO | 25.10.2025T12:50:10.123Z | POST /api/schemes | 201 | 56 ms | User: user123
25.10.2025 12:52:45 | ERROR | 25.10.2025T12:52:45.678Z | Database connection failed
```

üìÇ **`logs/error.log`**

```
25.10.2025 12:52:45 | ERROR | Database connection failed
```

---

### ‚öôÔ∏è **–Ø–∫ —Ü–µ –≤–ø–ª–∏–Ω–µ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å?**

1. **üîã –ù–µ–≤–µ–ª–∏–∫–µ –∑–Ω–∏–∂–µ–Ω–Ω—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ** —á–µ—Ä–µ–∑ –∑–∞–ø–∏—Å —É —Ñ–∞–π–ª–∏.  
   ‚û°Ô∏è –ê–ª–µ –æ–±–º–µ–∂–µ–Ω–Ω—è —Ä–æ–∑–º—ñ—Ä—É —Ñ–∞–π–ª—É (15MB) —ñ —Ä–æ—Ç–∞—Ü—ñ—è (14 –¥–Ω—ñ–≤) –∑–Ω–∏–∂—É—é—Ç—å –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è.  

2. **üõ† –û–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è —á–µ—Ä–µ–∑ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏–π –∑–∞–ø–∏—Å** (Winston –∑–∞–ø–∏—Å—É—î –ª–æ–≥–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ).  

3. **üìä –í–∞–∂–ª–∏–≤–æ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞:**  
   - –î–æ–ø–æ–º–æ–∂–µ —É –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏—Ü—ñ –ø–æ–º–∏–ª–æ–∫.  
   - –õ–µ–≥—à–µ –≤—ñ–¥—Å—Ç–µ–∂–∏—Ç–∏ —Ö—Ç–æ —ñ –∫–æ–ª–∏ –≤–∏–∫–æ–Ω–∞–≤ –∑–∞–ø–∏—Ç.  
   - –í—á–∞—Å–Ω–µ —Ä–µ–∞–≥—É–≤–∞–Ω–Ω—è –Ω–∞ –ø—Ä–æ–±–ª–µ–º–∏.

---

### üîí **–ü–µ—Ä–µ–≤–∞–≥–∏ –ø—ñ–¥—Ö–æ–¥—É**

1. **–ë–µ–∑–ø–µ–∫–∞:** –õ–æ–≥—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —ñ–∑ —Ç–æ–∫–µ–Ω–∞.  
2. **–ó—Ä—É—á–Ω—ñ—Å—Ç—å:** –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —Ä–æ—Ç–∞—Ü—ñ—è —ñ –æ–±–º–µ–∂–µ–Ω–Ω—è —Ä–æ–∑–º—ñ—Ä—É.  
3. **–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å:** –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –≤–ø–ª–∏–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä.  

üîî **Morgan** —ñ–¥–µ–∞–ª—å–Ω–æ —ñ–Ω—Ç–µ–≥—Ä—É—î—Ç—å—Å—è –¥–ª—è –∑–±–æ—Ä—É HTTP-–ª–æ–≥—ñ–≤, –∞ **Winston** –∫–µ—Ä—É—î –≤—Å—ñ—î—é –ª–æ–≥—ñ–∫–æ—é –ª–æ–≥—É–≤–∞–Ω–Ω—è.

üìà **–†–µ–∑—É–ª—å—Ç–∞—Ç:**  
–ß–∏—Å—Ç–∏–π, –º–∞—Å—à—Ç–∞–±–æ–≤–∞–Ω–∏–π —ñ –±–µ–∑–ø–µ—á–Ω–∏–π –ª–æ–≥–µ—Ä –¥–ª—è API!