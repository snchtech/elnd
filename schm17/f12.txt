–£ Next.js 15 —î –ø–µ–≤–Ω—ñ –Ω—é–∞–Ω—Å–∏ –∑ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è–º `cookies` —É `middleware.js`, –æ—Å–∫—ñ–ª—å–∫–∏ `req.cookies` –±—ñ–ª—å—à–µ –Ω–µ –ø—Ä–∞—Ü—é—î –Ω–∞–ø—Ä—è–º—É. –¢–µ–ø–µ—Ä –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ `req.headers.get(cookie)` –∞–±–æ `cookies()` API.

---

## ‚úÖ üìå –Ø–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ cookies —É `middleware.js` –≤ Next.js 15
### üîπ –û–Ω–æ–≤–ª–µ–Ω–∏–π –∫–æ–¥ `middleware.js`
```javascript
import { NextResponse } from nextserver;
import { cookies } from nextheaders;  ‚úÖ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –Ω–æ–≤–∏–π API –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è cookies
import jwt from jsonwebtoken;

const ETLS_ACCESS = process.env.ETLS_ACCESS;
const ETLS_REFRESH = process.env.ETLS_REFRESH;

export async function middleware(req) {
  const { pathname } = req.nextUrl;

   üîπ –í–∏–∫–ª—é—á–∞—î–º–æ `login`, —â–æ–± middleware –Ω–µ –≤–∏–∫–æ–Ω—É–≤–∞–≤—Å—è –Ω–∞ —Ü—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
  if (pathname.startsWith(login)) {
    return NextResponse.next();
  }

   üîπ –û—Ç—Ä–∏–º—É—î–º–æ cookies –∫–æ—Ä–µ–∫—Ç–Ω–∏–º —Å–ø–æ—Å–æ–±–æ–º —É Next.js 15
  const cookieStore = cookies();
  const accessTokenEtls = cookieStore.get(accessTokenEtls).value;
  const refreshTokenEtls = cookieStore.get(refreshTokenEtls).value;

   üîπ –Ø–∫—â–æ –Ω–µ–º–∞—î —Ç–æ–∫–µ–Ω—ñ–≤ ‚Üí —Ä–µ–¥—ñ—Ä–µ–∫—Ç –Ω–∞ login
  if (!accessTokenEtls && !refreshTokenEtls) {
    return NextResponse.redirect(new URL(login, req.url));
  }

   üîπ –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ accessTokenEtls
  try {
    jwt.verify(accessTokenEtls, ETLS_ACCESS);
    return NextResponse.next();
  } catch (error) {
    console.warn(accessTokenEtls invalid, checking refreshTokenEtls...);
  }

   üîπ –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ refreshTokenEtls
  try {
    jwt.verify(refreshTokenEtls, ETLS_REFRESH);

     –í–∏–∫–ª–∏–∫–∞—î–º–æ `apiauthrefreshtoken` –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–æ–≤–∏—Ö —Ç–æ–∫–µ–Ω—ñ–≤
    const refreshResponse = await fetch(`${req.nextUrl.origin}apiauthrefreshtoken`, {
      method POST,
      credentials include,
      headers {
        Content-Type applicationjson,
        Cookie req.headers.get(cookie)  ,  –ü–µ—Ä–µ–¥–∞—î–º–æ –≤—Å—ñ cookies
      },
    });

    if (!refreshResponse.ok) {
      throw new Error(Failed to refresh tokens);
    }

    return NextResponse.next();
  } catch (error) {
    console.error(refreshTokenEtls invalid, error);

     –û—á–∏—Å—Ç–∫–∞ –≤—Å—ñ—Ö cookies —ñ —Ä–µ–¥—ñ—Ä–µ–∫—Ç –Ω–∞ login
    return NextResponse.redirect(new URL(login, req.url), {
      headers {
        Set-Cookie [
          accessTokenEtls=; HttpOnly; Path=; Max-Age=0,
          refreshTokenEtls=; HttpOnly; Path=; Max-Age=0,
          accessToken=; HttpOnly; Path=; Max-Age=0,
          refreshToken=; HttpOnly; Path=; Max-Age=0,
        ].join(, ),
      },
    });
  }
}

 üîπ –í–∏–∫–ª—é—á–∞—î–º–æ `login` –∑ middleware
export const config = {
  matcher [((!login).)],  Middleware –ø—Ä–∞—Ü—é—î –Ω–∞ –≤—Å—ñ—Ö —Å—Ç–æ—Ä—ñ–Ω–∫–∞—Ö, –∫—Ä—ñ–º `login`
};
```

---

## ‚úÖ üìå –©–æ –∑–º—ñ–Ω–µ–Ω–æ —Ç–∞ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–æ
 üî• –ü—Ä–æ–±–ª–µ–º–∞  ‚úÖ –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è 
--------------------------
 `req.cookies` –±—ñ–ª—å—à–µ –Ω–µ –ø—Ä–∞—Ü—é—î –≤ Next.js 15  –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ `cookies()` API 
 –ù–µ –º–æ–∂–Ω–∞ –±—É–ª–æ –ø–µ—Ä–µ–¥–∞—Ç–∏ cookies —É fetch  –¢–µ–ø–µ—Ä –ø–µ—Ä–µ–¥–∞—î–º–æ `req.headers.get(cookie)` 
 `middleware.js` –ø—Ä–∞—Ü—é–≤–∞–≤ –Ω–∞ `login`  –¢–µ–ø–µ—Ä `login` –≤–∏–∫–ª—é—á–µ–Ω–æ –∑ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ 
 –Ø–∫—â–æ `refreshTokenEtls` –±—É–≤ –Ω–µ–¥—ñ–π—Å–Ω–∏–π, –Ω–µ –±—É–ª–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ logout  –¢–µ–ø–µ—Ä –ø—Ä–∏ 401 –≤—Å—ñ cookies –æ—á–∏—â–∞—é—Ç—å—Å—è 

---

## ‚úÖ üìå –í–∏—Å–Ω–æ–≤–æ–∫
‚úî Middleware.js —Ç–µ–ø–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø—Ä–∞—Ü—é—î –≤ Next.js 15.  
‚úî Cookies –∑—á–∏—Ç—É—é—Ç—å—Å—è –∫–æ—Ä–µ–∫—Ç–Ω–æ —á–µ—Ä–µ–∑ `cookies()` API.  
‚úî Refresh —Ç–æ–∫–µ–Ω–∏ –ø–µ—Ä–µ–≤—ñ—Ä—è—é—Ç—å—Å—è —Ç–∞ –æ–Ω–æ–≤–ª—é—é—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ.  
‚úî –Ø–∫—â–æ –≤—Å—ñ —Ç–æ–∫–µ–Ω–∏ –∑–∞–∫—ñ–Ω—á–∏–ª–∏—Å—å ‚Üí –æ—á–∏—â–∞—î–º–æ cookies —ñ —Ä–µ–¥—ñ—Ä–µ–∫—Ç–∏–º–æ –Ω–∞ `login`.  

üöÄ –¢–µ–ø–µ—Ä —Ç–≤—ñ–π middleware –ø—Ä–∞—Ü—é–≤–∞—Ç–∏–º–µ —Å—Ç–∞–±—ñ–ª—å–Ω–æ —ñ –±–µ–∑ –ø—Ä–æ–±–ª–µ–º! üî•