## ‚úÖ **üìå –Ø–∫ –≤–∏–∫–ª—é—á–∏—Ç–∏ `/login` –∑ `middleware.js` —É Next.js 15?**

–£ Next.js 15, `middleware.js` –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ —Ä–æ–∑–º—ñ—â–µ–Ω–∏–π —É **–∫–æ—Ä–µ–Ω—ñ –ø–∞–ø–∫–∏ `src`** –∞–±–æ –±–µ–∑–ø–æ—Å–µ—Ä–µ–¥–Ω—å–æ –≤ **–∫–æ—Ä–µ–Ω—ñ –ø—Ä–æ–µ–∫—Ç—É**.

- **–†–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—É:**
  - –Ø–∫—â–æ –≤ —Ç–µ–±–µ —î –ø–∞–ø–∫–∞ `src`:  
    ```
    /src/middleware.js
    ```
  - –Ø–∫—â–æ –Ω–µ–º–∞—î –ø–∞–ø–∫–∏ `src`:  
    ```
    /middleware.js
    ```

---

## üîπ **üìå –Ø–∫ –≤–∏–∫–ª—é—á–∏—Ç–∏ `/login` –∑ `middleware.js`?**
–£ `config.matcher` –ø–æ—Ç—Ä—ñ–±–Ω–æ **–≤–∏–∫–ª—é—á–∏—Ç–∏** —Å—Ç–æ—Ä—ñ–Ω–∫—É `/login`, —â–æ–± `middleware.js` –Ω–µ –≤–∏–∫–æ–Ω—É–≤–∞–≤—Å—è –Ω–∞ –Ω—ñ–π.

–û—Å—å —è–∫ —Ü–µ –∑—Ä–æ–±–∏—Ç–∏:

### **üìù –û–Ω–æ–≤–ª–µ–Ω–∏–π `middleware.js`**
```javascript
import { NextResponse } from "next/server";
import jwt from "jsonwebtoken";

const ETLS_ACCESS = process.env.ETLS_ACCESS;
const ETLS_REFRESH = process.env.ETLS_REFRESH;

export async function middleware(req) {
  const { pathname } = req.nextUrl;

  // üîπ –í–∏–∫–ª—é—á–∞—î–º–æ `/login` (middleware –Ω–µ –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è –¥–ª—è —Ü—ñ—î—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏)
  if (pathname.startsWith("/login")) {
    return NextResponse.next();
  }

  const cookies = req.cookies;
  const accessTokenEtls = cookies.get("accessTokenEtls")?.value;
  const refreshTokenEtls = cookies.get("refreshTokenEtls")?.value;

  // –Ø–∫—â–æ –Ω–µ–º–∞—î —Ç–æ–∫–µ–Ω—ñ–≤ ‚Üí —Ä–µ–¥—ñ—Ä–µ–∫—Ç –Ω–∞ /login
  if (!accessTokenEtls && !refreshTokenEtls) {
    return NextResponse.redirect(new URL("/login", req.url));
  }

  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ accessTokenEtls
  try {
    jwt.verify(accessTokenEtls, ETLS_ACCESS);
    return NextResponse.next();
  } catch (error) {
    console.warn("accessTokenEtls invalid, checking refreshTokenEtls...");
  }

  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ refreshTokenEtls
  try {
    jwt.verify(refreshTokenEtls, ETLS_REFRESH);

    // –í–∏–∫–ª–∏–∫–∞—î–º–æ `/api/auth/refreshtoken` –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–æ–≤–∏—Ö —Ç–æ–∫–µ–Ω—ñ–≤
    const refreshResponse = await fetch(`${req.nextUrl.origin}/api/auth/refreshtoken`, {
      method: "POST",
      credentials: "include",
      headers: {
        "Content-Type": "application/json",
        Cookie: req.headers.get("cookie") || "",
      },
    });

    if (!refreshResponse.ok) {
      throw new Error("Failed to refresh tokens");
    }

    return NextResponse.next();
  } catch (error) {
    console.error("refreshTokenEtls invalid:", error);

    // –û—á–∏—Å—Ç–∫–∞ –≤—Å—ñ—Ö cookies —ñ —Ä–µ–¥—ñ—Ä–µ–∫—Ç –Ω–∞ /login
    return NextResponse.redirect(new URL("/login", req.url), {
      headers: {
        "Set-Cookie": [
          "accessTokenEtls=; HttpOnly; Path=/; Max-Age=0",
          "refreshTokenEtls=; HttpOnly; Path=/; Max-Age=0",
          "accessToken=; HttpOnly; Path=/; Max-Age=0",
          "refreshToken=; HttpOnly; Path=/; Max-Age=0",
        ].join(", "),
      },
    });
  }
}

// üîπ –í–∫–∞–∑—É—î–º–æ, –¥–ª—è —è–∫–∏—Ö —Å—Ç–æ—Ä—ñ–Ω–æ–∫ –∑–∞—Å—Ç–æ—Å–æ–≤—É–≤–∞—Ç–∏ middleware (–≤–∏–∫–ª—é—á–∞—î–º–æ `/login`)
export const config = {
  matcher: ["/((?!login).*)"], // –ó–∞–ø—É—Å–∫–∞—î middleware –¥–ª—è –≤—Å—ñ—Ö —Å—Ç–æ—Ä—ñ–Ω–æ–∫, –∫—Ä—ñ–º /login
};
```

---

## ‚úÖ **üìå –ü–æ—è—Å–Ω–µ–Ω–Ω—è –∑–º—ñ–Ω**
### üîπ **1. –î–æ–¥–∞—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É `pathname.startsWith("/login")`**
–¶–µ –¥–æ–∑–≤–æ–ª—è—î **—ñ–≥–Ω–æ—Ä—É–≤–∞—Ç–∏** `middleware` –¥–ª—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ `/login`:
```javascript
if (pathname.startsWith("/login")) {
  return NextResponse.next();
}
```
–¶—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä–∞—Ü—é—î **–Ω–∞ –ø–æ—á–∞—Ç–∫—É middleware**, —â–æ –¥–æ–∑–≤–æ–ª—è—î –æ–¥—Ä–∞–∑—É –≤–∏—Ö–æ–¥–∏—Ç–∏ –±–µ–∑ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ä–µ—à—Ç–∏ –∫–æ–¥—É.

---

### üîπ **2. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ `matcher` –¥–ª—è –≤–∏–∫–ª—é—á–µ–Ω–Ω—è `/login`**
```javascript
export const config = {
  matcher: ["/((?!login).*)"], // –ó–∞–ø—É—Å–∫–∞—î middleware –¥–ª—è –≤—Å—ñ—Ö —Å—Ç–æ—Ä—ñ–Ω–æ–∫, –∫—Ä—ñ–º /login
};
```
üîπ **–Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î?**  
- `/((?!login).*)/` ‚Äì —Ü–µ **—Ä–µ–≥—É–ª—è—Ä–Ω–∏–π –≤–∏—Ä–∞–∑**, —â–æ –æ–∑–Ω–∞—á–∞—î:
  - `.*` ‚Üí –∑–∞—Å—Ç–æ—Å–æ–≤—É–≤–∞—Ç–∏ middleware –¥–ª—è –≤—Å—ñ—Ö –º–∞—Ä—à—Ä—É—Ç—ñ–≤.
  - `(?!login)` ‚Üí **–≤–∏–∫–ª—é—á–∏—Ç–∏ –±—É–¥—å-—è–∫–∏–π —à–ª—è—Ö, —â–æ –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ `/login`**.

üîπ **–ü—Ä–∏–∫–ª–∞–¥–∏:**
| URL | –í–∏–∫–æ–Ω—É—î—Ç—å—Å—è middleware? |
|----------------------|------------------|
| `/dashboard` | ‚úÖ –¢–∞–∫ |
| `/profile` | ‚úÖ –¢–∞–∫ |
| `/unit` | ‚úÖ –¢–∞–∫ |
| `/login` | ‚ùå –ù—ñ |
| `/login/reset` | ‚ùå –ù—ñ |

---

## ‚úÖ **üìå –î–µ —Ä–æ–∑–º—ñ—Å—Ç–∏—Ç–∏ `middleware.js` —É Next.js 15?**
1. –Ø–∫—â–æ —É –ø—Ä–æ—î–∫—Ç—ñ —î –ø–∞–ø–∫–∞ `src`, —Ä–æ–∑–º—ñ—â—É—î–º–æ:
   ```
   /src/middleware.js
   ```
2. –Ø–∫—â–æ –ø–∞–ø–∫–∏ `src` –Ω–µ–º–∞—î, —Ç–æ —Ñ–∞–π–ª –º–∞—î –±—É—Ç–∏ –≤ –∫–æ—Ä–µ–Ω—ñ:
   ```
   /middleware.js
   ```

**üìå –í–∞–∂–ª–∏–≤–æ:** –£ Next.js 15 **–Ω–µ –º–æ–∂–Ω–∞ —Ä–æ–∑–º—ñ—â—É–≤–∞—Ç–∏ middleware —É –ø–∞–ø—Ü—ñ `app`**, —ñ–Ω–∞–∫—à–µ –≤—ñ–Ω –Ω–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏–º–µ.

---

## ‚úÖ **üìå –ü—ñ–¥—Å—É–º–æ–∫**
‚úî **–í–∏–∫–ª—é—á–∏–ª–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É `/login` –∑ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤ `middleware.js`**.  
‚úî **–î–æ–¥–∞–ª–∏ `matcher`, —â–æ–± middleware –ø—Ä–∞—Ü—é–≤–∞–≤ —Ç—ñ–ª—å–∫–∏ –Ω–∞ –ø–æ—Ç—Ä—ñ–±–Ω–∏—Ö —Å—Ç–æ—Ä—ñ–Ω–∫–∞—Ö**.  
‚úî **–§–∞–π–ª `middleware.js` –º–∞—î –±—É—Ç–∏ —É `/src` –∞–±–æ –∫–æ—Ä–µ–Ω—ñ –ø—Ä–æ—î–∫—Ç—É**.  

üîπ **–¢–µ–ø–µ—Ä middleware –Ω–µ –±—É–¥–µ –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ `/login`, –∞ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏–º–µ –¥–ª—è –≤—Å—ñ—Ö —ñ–Ω—à–∏—Ö —Å—Ç–æ—Ä—ñ–Ω–æ–∫! üöÄ**