### ‚úÖ **üìå –û–Ω–æ–≤–ª–µ–Ω–∏–π `refreshAccessToken` –∑ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º `userDataEtls`**
–¶–µ–π –∫–æ–¥ **–æ–Ω–æ–≤–ª—é—î `accessToken`, `refreshToken` —ñ `userDataEtls`**, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ **`jose`** –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó `userDataEtls`.

---

### üîπ **üìå –û–Ω–æ–≤–ª–µ–Ω–∏–π `refreshAccessToken`**
```javascript
import { NextResponse } from "next/server";
import { SignJWT } from "jose";

const REMOTE_API = process.env.REMOTE_API;
const ETLS_ACCESS = new TextEncoder().encode(process.env.ETLS_ACCESS);
const ETLS_REFRESH = new TextEncoder().encode(process.env.ETLS_REFRESH);
const EXPIRES_IN_ACCESS_ETLS = 15 * 60; // 15 —Ö–≤ —É —Å–µ–∫—É–Ω–¥–∞—Ö
const EXPIRES_IN_REFRESH_ETLS = 7 * 24 * 60 * 60; // 7 –¥–Ω—ñ–≤ —É —Å–µ–∫—É–Ω–¥–∞—Ö

export async function refreshAccessToken(refreshToken) {
  try {
    if (!refreshToken) {
      console.warn("No refresh token available");
      return null;
    }

    // üîπ –ó–∞–ø–∏—Ç –Ω–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤ —É REMOTE_API
    const refreshResponse = await fetch(`${REMOTE_API}/refreshtoken`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ refreshToken }),
    });

    if (!refreshResponse.ok) {
      console.error("Failed to refresh token");
      return null;
    }

    // üîπ –û—Ç—Ä–∏–º—É—î–º–æ –Ω–æ–≤—ñ —Ç–æ–∫–µ–Ω–∏ —Ç–∞ userData –∑ API
    const { accessToken, refreshToken: newRefreshToken, userData } = await refreshResponse.json();

    // üîπ –ì–µ–Ω–µ—Ä—É—î–º–æ `userDataEtls` —á–µ—Ä–µ–∑ `jose`
    const userDataEtls = await new SignJWT(userData)
      .setProtectedHeader({ alg: "HS256" })
      .setExpirationTime(Math.floor(Date.now() / 1000) + EXPIRES_IN_ACCESS_ETLS)
      .sign(ETLS_ACCESS);

    // üîπ –§–æ—Ä–º—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∑ –æ–Ω–æ–≤–ª–µ–Ω–∏–º–∏ —Ç–æ–∫–µ–Ω–∞–º–∏ —É `Set-Cookie`
    const response = NextResponse.json({ message: "Tokens refreshed" });
    response.headers.set(
      "Set-Cookie",
      [
        `accessToken=${accessToken}; HttpOnly; Path=/; Secure; SameSite=Strict`,
        `refreshToken=${newRefreshToken}; HttpOnly; Path=/; Secure; SameSite=Strict`,
        `userDataEtls=${userDataEtls}; HttpOnly; Path=/; Secure; SameSite=Strict`,
      ].join(", ")
    );

    return { accessToken, refreshToken: newRefreshToken, userDataEtls };
  } catch (error) {
    console.error("Error refreshing tokens:", error);
    return null;
  }
}
```

---

## ‚úÖ **üìå –©–æ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–æ —Ç–∞ –ø–æ–∫—Ä–∞—â–µ–Ω–æ**
‚úî **–¢–µ–ø–µ—Ä `userDataEtls` –æ–Ω–æ–≤–ª—é—î—Ç—å—Å—è —Ä–∞–∑–æ–º —ñ–∑ —Ç–æ–∫–µ–Ω–∞–º–∏**.  
‚úî **–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ `jose` –¥–ª—è –∫–æ–¥—É–≤–∞–Ω–Ω—è `userData` –≤ `userDataEtls`**.  
‚úî **–ë–µ–∑–ø–µ—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —á–µ—Ä–µ–∑ `Set-Cookie`**, —â–æ–± –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞–≤–∂–¥–∏ –æ—Ç—Ä–∏–º—É–≤–∞–≤ –∞–∫—Ç—É–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ.  
‚úî **–ö–æ–¥ –æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–æ –¥–ª—è —Ä–æ–±–æ—Ç–∏ —á–µ—Ä–µ–∑ Next.js API —Ç–∞ `REMOTE_API`.**  

üöÄ **–¢–µ–ø–µ—Ä –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ —Ç–æ–∫–µ–Ω—ñ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –æ–Ω–æ–≤–ª—é—î—Ç—å—Å—è `userData` —É —Å–µ—Å—ñ—ó! üî•**