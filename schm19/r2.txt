### ‚úÖ **üìå –Ø–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç–∏ –æ–Ω–æ–≤–ª–µ–Ω—ñ —Ç–æ–∫–µ–Ω–∏ –∑ `refreshresttokens` –¥–æ `customFetch` —ñ –æ–Ω–æ–≤–∏—Ç–∏ —ó—Ö —É cookies –∫–ª—ñ—î–Ω—Ç–∞?**
–¢–æ–±—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ:
1. **–û–Ω–æ–≤–∏—Ç–∏ `cookies` —É –∫–ª—ñ—î–Ω—Ç–∞ –ø—ñ—Å–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤**.
2. **–ó—á–∏—Ç–∞—Ç–∏ –æ–Ω–æ–≤–ª–µ–Ω—ñ `accessToken` —Ç–∞ `refreshToken` —É `customFetch`**.
3. **–í—Å—Ç–∞–≤–∏—Ç–∏ –æ–Ω–æ–≤–ª–µ–Ω—ñ —Ç–æ–∫–µ–Ω–∏ –≤ `Set-Cookie`, —â–æ–± –±—Ä–∞—É–∑–µ—Ä —ó—Ö –æ—Ç—Ä–∏–º–∞–≤**.

---

## üîπ **üìå –û–Ω–æ–≤–ª–µ–Ω–∏–π `refreshresttokens.js`**
```javascript
import { NextResponse } from "next/server";
import { cookies } from "next/headers";
import { SignJWT } from "jose";

const REMOTE_API = process.env.REMOTE_API;
const ETLS_ACCESS = new TextEncoder().encode(process.env.ETLS_ACCESS);
const ETLS_REFRESH = new TextEncoder().encode(process.env.ETLS_REFRESH);
const EXPIRES_IN_ACCESS_ETLS = 15 * 60; // 15 —Ö–≤
const EXPIRES_IN_REFRESH_ETLS = 12 * 60 * 60; // 12 –≥–æ–¥

export async function POST(req) {
  try {
    const cookieStore = cookies();
    const refreshToken = cookieStore.get("refreshToken")?.value;

    if (!refreshToken) {
      return NextResponse.json({ error: "No refresh token provided" }, { status: 401 });
    }

    // üîπ –í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç –¥–æ —Å—Ç–æ—Ä–æ–Ω–Ω—å–æ–≥–æ API –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤
    const refreshResponse = await fetch(`${REMOTE_API}/refreshtoken`, {
      method: "POST",
      credentials: "include",
      headers: {
        "Content-Type": "application/json",
        "Cookie": `refreshToken=${refreshToken}`,
      },
    });

    if (!refreshResponse.ok) {
      return NextResponse.json({ error: "Failed to refresh token" }, { status: 401 });
    }

    // üîπ –û—Ç—Ä–∏–º—É—î–º–æ –Ω–æ–≤—ñ —Ç–æ–∫–µ–Ω–∏
    const { accessToken, refreshToken: newRefreshToken, userData } = await refreshResponse.json();

    // üîπ –ì–µ–Ω–µ—Ä—É—î–º–æ `userDataEtls`
    const userDataEtls = await new SignJWT(userData)
      .setProtectedHeader({ alg: "HS256" })
      .setExpirationTime(Math.floor(Date.now() / 1000) + EXPIRES_IN_ACCESS_ETLS)
      .sign(ETLS_ACCESS);

    // üîπ –§–æ—Ä–º—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å —ñ–∑ –æ–Ω–æ–≤–ª–µ–Ω–∏–º–∏ —Ç–æ–∫–µ–Ω–∞–º–∏ —É `Set-Cookie`
    const response = NextResponse.json({ accessToken, refreshToken: newRefreshToken, userDataEtls });

    response.headers.set(
      "Set-Cookie",
      [
        `accessToken=${accessToken}; HttpOnly; Path=/; Secure; SameSite=Strict`,
        `refreshToken=${newRefreshToken}; HttpOnly; Path=/; Secure; SameSite=Strict`,
        `userDataEtls=${userDataEtls}; HttpOnly; Path=/; Secure; SameSite=Strict`,
      ].join(", ")
    );

    return response;
  } catch (error) {
    return NextResponse.json({ error: "Invalid refresh token" }, { status: 401 });
  }
}
```
‚úî **–¢–µ–ø–µ—Ä `refreshresttokens` –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤—ñ —Ç–æ–∫–µ–Ω–∏ —É `Set-Cookie`.**  
‚úî **–¢–∞–∫–æ–∂ –ø–µ—Ä–µ–¥–∞—î `accessToken` —É `JSON`, —â–æ–± `customFetch` –º—ñ–≥ –π–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏.**  

---

## üîπ **üìå –û–Ω–æ–≤–ª–µ–Ω–∏–π `customFetch.js`**
```javascript
import { NextResponse } from "next/server";
import { parse } from "cookie";

const REMOTE_API = process.env.REMOTE_API;

export async function POST(req) {
  try {
    const { url, options } = await req.json();
    const cookies = parse(req.headers.get("cookie") || "");

    let accessToken = cookies.accessToken;
    const refreshToken = cookies.refreshToken;

    // üîπ –Ø–∫—â–æ –Ω–µ–º–∞—î accessToken, —Å–ø–æ—á–∞—Ç–∫—É –ø—Ä–æ–±—É—î–º–æ –æ–Ω–æ–≤–∏—Ç–∏ —Ç–æ–∫–µ–Ω–∏
    if (!accessToken) {
      if (!refreshToken) return redirectToLogin();

      const refreshResponse = await fetch(`${req.nextUrl.origin}/api/rest/refreshresttokens`, {
        method: "POST",
        credentials: "include",
        headers: { "Content-Type": "application/json", Cookie: req.headers.get("cookie") || "" },
      });

      if (!refreshResponse.ok) return redirectToLogin();

      const { accessToken: newAccessToken } = await refreshResponse.json();
      accessToken = newAccessToken;
    }

    // üîπ –í–∏–∫–æ–Ω—É—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –∑–∞–ø–∏—Ç —ñ–∑ –æ—Ç—Ä–∏–º–∞–Ω–∏–º —Ç–æ–∫–µ–Ω–æ–º
    let response = await fetch(`${REMOTE_API}${url}`, {
      ...options,
      headers: {
        ...options.headers,
        Authorization: `Bearer ${accessToken}`,
      },
    });

    // üîπ –Ø–∫—â–æ –æ—Ç—Ä–∏–º–∞–ª–∏ 401, –ø—Ä–æ–±—É—î–º–æ –æ–Ω–æ–≤–∏—Ç–∏ —Ç–æ–∫–µ–Ω–∏ —ñ –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏ –∑–∞–ø–∏—Ç
    if (response.status === 401) {
      const refreshResponse = await fetch(`${req.nextUrl.origin}/api/rest/refreshresttokens`, {
        method: "POST",
        credentials: "include",
        headers: { "Content-Type": "application/json", Cookie: req.headers.get("cookie") || "" },
      });

      if (!refreshResponse.ok) return redirectToLogin();

      const { accessToken: newAccessToken } = await refreshResponse.json();

      response = await fetch(`${REMOTE_API}${url}`, {
        ...options,
        headers: { ...options.headers, Authorization: `Bearer ${newAccessToken}` },
      });
    }

    return NextResponse.json(await response.json());
  } catch (error) {
    return NextResponse.json({ error: "Request failed" }, { status: 500 });
  }
}
```

---

## ‚úÖ **üìå –©–æ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–æ —Ç–∞ –ø–æ–∫—Ä–∞—â–µ–Ω–æ**
| ‚ùå –ü—Ä–æ–±–ª–µ–º–∞ | ‚úÖ –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è |
|------------|---------------|
| `customFetch` –Ω–µ –æ—Ç—Ä–∏–º—É–≤–∞–≤ –Ω–æ–≤—ñ —Ç–æ–∫–µ–Ω–∏ | –¢–µ–ø–µ—Ä `customFetch` –æ—Ç—Ä–∏–º—É—î `accessToken` —É JSON-–≤—ñ–¥–ø–æ–≤—ñ–¥—ñ —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –π–æ–≥–æ |
| `Set-Cookie` –Ω–µ –æ–Ω–æ–≤–ª—é–≤–∞–≤—Å—è —É –∫–ª—ñ—î–Ω—Ç–∞ | `refreshresttokens` —Ç–µ–ø–µ—Ä –ø–µ—Ä–µ–¥–∞—î `Set-Cookie` —É –≤—ñ–¥–ø–æ–≤—ñ–¥—å |
| –ù–µ –±—É–ª–æ —Å–ø–æ—Å–æ–±—É –ø–µ—Ä–µ–¥–∞—Ç–∏ –æ–Ω–æ–≤–ª–µ–Ω—ñ —Ç–æ–∫–µ–Ω–∏ –∫–ª—ñ—î–Ω—Ç—É | –í—ñ–¥–ø–æ–≤—ñ–¥—å API –º—ñ—Å—Ç–∏—Ç—å –æ–Ω–æ–≤–ª–µ–Ω—ñ `accessToken`, `refreshToken` —Ç–∞ `userDataEtls` |

---

## ‚úÖ **üìå –ü—ñ–¥—Å—É–º–æ–∫**
‚úî **–ö–æ–ª–∏ `accessToken` –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è, `customFetch` –æ–Ω–æ–≤–ª—é—î –π–æ–≥–æ —á–µ—Ä–µ–∑ `refreshresttokens`**.  
‚úî **`refreshresttokens` –ø–µ—Ä–µ–¥–∞—î –æ–Ω–æ–≤–ª–µ–Ω—ñ —Ç–æ–∫–µ–Ω–∏ —á–µ—Ä–µ–∑ `Set-Cookie`, –∑–±–µ—Ä—ñ–≥–∞—é—á–∏ —ó—Ö —É –±—Ä–∞—É–∑–µ—Ä—ñ**.  
‚úî **`customFetch` –æ—Ç—Ä–∏–º—É—î `accessToken` —É `JSON-–≤—ñ–¥–ø–æ–≤—ñ–¥—ñ` —ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –π–æ–≥–æ –±–µ–∑ –∑–∞–π–≤–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤**.  

üöÄ **–¢–µ–ø–µ—Ä Next.js API —Ç–∞ Express API –ø—Ä–∞—Ü—é—é—Ç—å —ñ–¥–µ–∞–ª—å–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ! üî•**