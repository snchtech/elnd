### ‚úÖ **üìå –Ø–∫ –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –ª–æ–≥—É–≤–∞–Ω–Ω—è —É Next.js API –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é `winston` —ñ `morgan`?**

–©–æ–± **–ª–æ–≥—É–≤–∞—Ç–∏ –∑–∞–ø–∏—Ç–∏ —Ç–∞ —ó—Ö –≤–∏–∫–æ–Ω–∞–Ω–Ω—è** —É Next.js API, –º–∏ –º–æ–∂–µ–º–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏:
1. **`winston`** ‚Äì –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ª–æ–≥—ñ–≤ —É —Ñ–∞–π–ª–∏ –∞–±–æ –≤–∏–≤–æ–¥—É –≤ –∫–æ–Ω—Å–æ–ª—å.
2. **`morgan`** ‚Äì –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è HTTP-–∑–∞–ø–∏—Ç—ñ–≤.

---

## üîπ **üìå 1. –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π**
–°–ø–æ—á–∞—Ç–∫—É –≤—Å—Ç–∞–Ω–æ–≤–∏ `winston` —ñ `morgan` —É Next.js:
```bash
npm install winston morgan
```

---

## üîπ **üìå 2. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ª–æ–≥–µ—Ä–∞ `logger.js` –≤ `utils`**
–ú–æ–¥—É–ª—å `winston` –¥–æ–∑–≤–æ–ª—è—î —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∫–∞—Å—Ç–æ–º–Ω–∏–π –ª–æ–≥–µ—Ä, —è–∫–∏–π –º–æ–∂–µ –∑–∞–ø–∏—Å—É–≤–∞—Ç–∏ –ª–æ–≥–∏ –≤ **—Ñ–∞–π–ª–∏** –∞–±–æ **–∫–æ–Ω—Å–æ–ª—å**.

üìå **–°—Ç–≤–æ—Ä–∏ —Ñ–∞–π–ª `utils/logger.js`**:
```javascript
import { createLogger, format, transports } from "winston";

// üîπ –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—ñ–≤
const logFormat = format.combine(
  format.timestamp({ format: "YYYY-MM-DD HH:mm:ss" }),
  format.printf(({ timestamp, level, message }) => `[${timestamp}] ${level.toUpperCase()}: ${message}`)
);

// üîπ –°—Ç–≤–æ—Ä—é—î–º–æ –ª–æ–≥–µ—Ä
const logger = createLogger({
  level: "info",
  format: logFormat,
  transports: [
    // üîπ –õ–æ–≥—É–≤–∞–Ω–Ω—è –≤ –∫–æ–Ω—Å–æ–ª—å
    new transports.Console(),

    // üîπ –õ–æ–≥—É–≤–∞–Ω–Ω—è —É —Ñ–∞–π–ª –≤—Å—ñ—Ö –∑–∞–ø–∏—Ç—ñ–≤
    new transports.File({ filename: "logs/requests.log", level: "info" }),

    // üîπ –õ–æ–≥—É–≤–∞–Ω–Ω—è –ø–æ–º–∏–ª–æ–∫ —É –æ–∫—Ä–µ–º–∏–π —Ñ–∞–π–ª
    new transports.File({ filename: "logs/errors.log", level: "error" }),
  ],
});

export default logger;
```
‚úî **–õ–æ–≥–∏ –∑–∞–ø–∏—Å—É—é—Ç—å—Å—è —É —Ñ–∞–π–ª–∏ `logs/requests.log` —Ç–∞ `logs/errors.log`**.  
‚úî **–ü–æ–º–∏–ª–∫–∏ –ª–æ–≥—É—é—Ç—å—Å—è –æ–∫—Ä–µ–º–æ –≤ `logs/errors.log`**.  

---

## üîπ **üìå 3. –õ–æ–≥—É–≤–∞–Ω–Ω—è HTTP-–∑–∞–ø–∏—Ç—ñ–≤ —É `middleware.js` –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é `morgan`**
–©–æ–± **–ª–æ–≥—É–≤–∞—Ç–∏ –≤—Å—ñ HTTP-–∑–∞–ø–∏—Ç–∏ —É Next.js**, –¥–æ–¥–∞–º–æ `morgan` —É `middleware.js`.

üìå **–û–Ω–æ–≤–∏ `middleware.js`**:
```javascript
import { NextResponse } from "next/server";
import { cookies } from "next/headers";
import morgan from "morgan";
import logger from "@/utils/logger";

export function middleware(req) {
  const { pathname } = req.nextUrl;
  const cookieStore = cookies();
  const accessTokenEtls = cookieStore.get("accessTokenEtls")?.value;
  const refreshTokenEtls = cookieStore.get("refreshTokenEtls")?.value;

  // üîπ –õ–æ–≥—É–≤–∞–Ω–Ω—è HTTP-–∑–∞–ø–∏—Ç—É
  const logMessage = `${req.method} ${pathname} from ${req.headers.get("user-agent")}`;
  logger.info(logMessage);

  // üîπ –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∂–µ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–æ–≤–∞–Ω–∏–π —ñ –∑–∞—Ö–æ–¥–∏—Ç—å –Ω–∞ `/login`, —Ä–æ–±–∏–º–æ logout
  if (pathname === "/login" && (accessTokenEtls || refreshTokenEtls)) {
    logger.info("User is authenticated but accessed /login ‚Üí Logging out");
    return logoutUser(req);
  }

  return NextResponse.next();
}

function logoutUser(req) {
  logger.info("Logging out user due to access to /login");
  return NextResponse.redirect(new URL("/login", req.url), {
    headers: {
      "Set-Cookie": [
        "accessTokenEtls=; HttpOnly; Path=/; Max-Age=0",
        "refreshTokenEtls=; HttpOnly; Path=/; Max-Age=0",
        "userDataEtls=; HttpOnly; Path=/; Max-Age=0",
      ].join(", "),
    },
  });
}

export const config = {
  matcher: ["/login", "/dashboard", "/profile"], // –°–ø–∏—Å–æ–∫ —Å—Ç–æ—Ä—ñ–Ω–æ–∫ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
};
```
‚úî **–õ–æ–≥—É—î—Ç—å—Å—è –∫–æ–∂–µ–Ω –∑–∞–ø–∏—Ç (–º–µ—Ç–æ–¥ + URL + User-Agent).**  
‚úî **–ü—Ä–∏ –≤—Ö–æ–¥—ñ –Ω–∞ `/login` –∑–∞–ø–∏—Å—É—î—Ç—å—Å—è, —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –±—É–≤ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–æ–≤–∞–Ω–∏–π.**  
‚úî **–ü—Ä–∏ `logout` –∑–∞–ø–∏—Å—É—î—Ç—å—Å—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π –ª–æ–≥.**  

---

## üîπ **üìå 4. –î–æ–¥–∞—î–º–æ `morgan` —É Next.js API (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, `customFetch.js`)**
`morgan` ‚Äì —Ü–µ HTTP-–ª–æ–≥–µ—Ä, —è–∫–∏–π –ø—Ä–∞—Ü—é—î —Ä–∞–∑–æ–º —ñ–∑ `winston` –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è –≤—Å—ñ—Ö –∑–∞–ø–∏—Ç—ñ–≤.

üìå **–û–Ω–æ–≤–∏ `customFetch.js`**:
```javascript
import { NextResponse } from "next/server";
import { parse } from "cookie";
import logger from "@/utils/logger";
import morgan from "morgan";

const REMOTE_API = process.env.REMOTE_API;

// üîπ –§–æ—Ä–º–∞—Ç –ª–æ–≥—ñ–≤ –¥–ª—è `morgan`
const morganFormat = ":method :url :status :response-time ms - :res[content-length]";

// üîπ –§—É–Ω–∫—Ü—ñ—è –ª–æ–≥—É–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—ñ–≤ —á–µ—Ä–µ–∑ `morgan`
export const morganMiddleware = morgan(morganFormat, {
  stream: { write: (message) => logger.info(message.trim()) },
});

export async function POST(req) {
  try {
    const { url, options } = await req.json();
    const cookies = parse(req.headers.get("cookie") || "");

    let accessToken = cookies.accessToken;
    const refreshToken = cookies.refreshToken;

    // üîπ –Ø–∫—â–æ –Ω–µ–º–∞—î accessToken, –ø—Ä–æ–±—É—î–º–æ –æ–Ω–æ–≤–∏—Ç–∏ —Ç–æ–∫–µ–Ω–∏
    if (!accessToken) {
      if (!refreshToken) {
        logger.warn("No access token and no refresh token ‚Üí Redirecting to login");
        return redirectToLogin();
      }

      logger.info("Access token missing ‚Üí Refreshing tokens...");
      const refreshResponse = await fetch(`${req.nextUrl.origin}/api/rest/refreshresttokens`, {
        method: "POST",
        credentials: "include",
        headers: { "Content-Type": "application/json", Cookie: req.headers.get("cookie") || "" },
      });

      if (!refreshResponse.ok) {
        logger.error("Failed to refresh tokens ‚Üí Redirecting to login");
        return redirectToLogin();
      }

      // üîπ –û—Ç—Ä–∏–º—É—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–∏–π accessToken
      const { accessToken: newAccessToken } = await refreshResponse.json();
      accessToken = newAccessToken;
    }

    // üîπ –í–∏–∫–æ–Ω—É—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –∑–∞–ø–∏—Ç —ñ–∑ –æ—Ç—Ä–∏–º–∞–Ω–∏–º —Ç–æ–∫–µ–Ω–æ–º
    let response = await fetch(`${REMOTE_API}${url}`, {
      ...options,
      headers: {
        ...options.headers,
        Authorization: `Bearer ${accessToken}`,
      },
    });

    // üîπ –õ–æ–≥—É–≤–∞–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –∑–∞–ø–∏—Ç—É
    logger.info(`API request: ${req.method} ${url} - Status: ${response.status}`);

    // üîπ –Ø–∫—â–æ –æ—Ç—Ä–∏–º–∞–ª–∏ 401, –ø—Ä–æ–±—É—î–º–æ –æ–Ω–æ–≤–∏—Ç–∏ —Ç–æ–∫–µ–Ω–∏ —ñ –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏ –∑–∞–ø–∏—Ç
    if (response.status === 401) {
      logger.warn("Access token expired ‚Üí Refreshing tokens...");
      const refreshResponse = await fetch(`${req.nextUrl.origin}/api/rest/refreshresttokens`, {
        method: "POST",
        credentials: "include",
        headers: { "Content-Type": "application/json", Cookie: req.headers.get("cookie") || "" },
      });

      if (!refreshResponse.ok) {
        logger.error("Failed to refresh tokens after 401 ‚Üí Redirecting to login");
        return redirectToLogin();
      }

      // üîπ –û—Ç—Ä–∏–º—É—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–∏–π accessToken
      const { accessToken: newAccessToken } = await refreshResponse.json();
      accessToken = newAccessToken;

      // üîπ –ü–æ–≤—Ç–æ—Ä—é—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –∑–∞–ø–∏—Ç —ñ–∑ –Ω–æ–≤–∏–º accessToken
      response = await fetch(`${REMOTE_API}${url}`, {
        ...options,
        headers: { ...options.headers, Authorization: `Bearer ${newAccessToken}` },
      });

      logger.info(`Retried API request: ${req.method} ${url} - Status: ${response.status}`);
    }

    return NextResponse.json(await response.json());
  } catch (error) {
    logger.error(`Request failed: ${error.message}`);
    return NextResponse.json({ error: "Request failed" }, { status: 500 });
  }
}
```
‚úî **–î–æ–¥–∞—î–º–æ `morganMiddleware` –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ HTTP-–ª–æ–≥—É–≤–∞–Ω–Ω—è**  
‚úî **–õ–æ–≥—É—î–º–æ –≤—Å—ñ –∑–∞–ø–∏—Ç–∏ —Ç–∞ —Å—Ç–∞—Ç—É—Å–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π**  
‚úî **–Ø–∫—â–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤ –Ω–µ —Å–ø—Ä–∞—Ü—é–≤–∞–ª–æ ‚Äì –ª–æ–≥—É–≤–∞–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏**

---

## ‚úÖ **üìå –ü—ñ–¥—Å—É–º–æ–∫**
üöÄ **–ó–∞–≤–¥—è–∫–∏ —Ü—å–æ–º—É –ª–æ–≥—É–≤–∞–Ω–Ω—é —Ç–∏ –æ—Ç—Ä–∏–º—É—î—à:**  
‚úî **–õ–æ–≥—É–≤–∞–Ω–Ω—è –≤—Å—ñ—Ö HTTP-–∑–∞–ø–∏—Ç—ñ–≤ —É `requests.log`.**  
‚úî **–ü–æ–º–∏–ª–∫–∏ –∑–∞–ø–∏—Å—É—é—Ç—å—Å—è —É `errors.log`.**  
‚úî **–õ–æ–≥—É–≤–∞–Ω–Ω—è –≤ `middleware.js`, `customFetch.js` —Ç–∞ `refreshresttokens.js`.**  
‚úî **–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ —Ä–æ–∑–ª–æ–≥—ñ–Ω–µ–Ω–Ω—è –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º—É –∑–∞—Ö–æ–¥—ñ –Ω–∞ `/login`.**

üî• **–¢–µ–ø–µ—Ä —É —Ç–≤–æ—î–º—É Next.js API —î –ø–æ—Ç—É–∂–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –ª–æ–≥—É–≤–∞–Ω–Ω—è, —è–∫–∞ –¥–æ–ø–æ–º–æ–∂–µ —Ç–æ–±—ñ –≤—ñ–¥—Å—Ç–µ–∂—É–≤–∞—Ç–∏ –≤—Å—ñ –ø—Ä–æ—Ü–µ—Å–∏!** üöÄ