### ‚úÖ **üìå –Ø–∫ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –ª–æ–≥–∏ —É —Ñ–∞–π–ª—ñ —É `Edge Runtime` –≤ Next.js?**

–û—Å–∫—ñ–ª—å–∫–∏ **`Edge Runtime` –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î `fs` —ñ `path`**, –∞ `winston` –¥–ª—è –∑–∞–ø–∏—Å—É —É —Ñ–∞–π–ª–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î `fs`, **–ø–æ—Ç—Ä—ñ–±–Ω–æ —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ª–æ–≥—ñ–≤**.

---

### üîπ **üìå –†—ñ—à–µ–Ω–Ω—è:**  
1Ô∏è‚É£ **–õ–æ–≥–∏ —É `Edge Runtime` ‚Üí API-–∑–∞–ø–∏—Ç –¥–æ Next.js API `/api/logs`**  
2Ô∏è‚É£ **–£ Next.js API `/api/logs.js` ‚Üí –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ `fs` –¥–ª—è –∑–∞–ø–∏—Å—É —É —Ñ–∞–π–ª (–Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ)**  
3Ô∏è‚É£ **–î–ª—è `Node.js Runtime` –ª–æ–≥–∏ –ø–∏—à–µ–º–æ —á–µ—Ä–µ–∑ `winston` –±–µ–∑–ø–æ—Å–µ—Ä–µ–¥–Ω—å–æ**  

---

## ‚úÖ **üìå 1. –û–Ω–æ–≤–ª—é—î–º–æ `logger.js` —É `utils/logger.js`**
–ó–º—ñ–Ω—é—î–º–æ –ª–æ–≥–µ—Ä —Ç–∞–∫, —â–æ–±:  
‚úî **–Ø–∫—â–æ `Edge Runtime` ‚Üí –Ω–∞–¥—Å–∏–ª–∞—î API-–∑–∞–ø–∏—Ç `/api/logs`**  
‚úî **–Ø–∫—â–æ `Node.js Runtime` ‚Üí –∑–∞–ø–∏—Å—É—î –ª–æ–≥–∏ —É —Ñ–∞–π–ª–∏ —á–µ—Ä–µ–∑ `winston`**

```javascript
import { createLogger, format, transports } from "winston";

// üîπ –§–æ—Ä–º–∞—Ç —á–∞—Å—É: 12.06.2024 12:15:21
const timeFormat = () => {
  const now = new Date();
  return now.toLocaleString("uk-UA", { timeZone: "Europe/Kiev" }).replace(",", "");
};

// üîπ –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—ñ–≤
const logFormat = format.printf(({ level, message }) => `[${timeFormat()}] ${level.toUpperCase()}: ${message}`);

// üîπ –í–∏–∑–Ω–∞—á–∞—î–º–æ, —á–∏ Next.js –ø—Ä–∞—Ü—é—î –≤ Edge Runtime
const isEdgeRuntime = process.env.NEXT_RUNTIME === "edge";

// üîπ –Ø–∫—â–æ —Ü–µ `Edge Runtime`, –ª–æ–≥–∏ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—é—Ç—å—Å—è —É Next.js API `/api/logs`
const logToApi = async (level, message) => {
  try {
    await fetch("/api/logs", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ level, message }),
    });
  } catch (error) {
    console.error("Failed to send log to API:", error);
  }
};

// üîπ –õ–æ–≥–µ—Ä –¥–ª—è `Node.js Runtime`
const nodeLogger = createLogger({
  level: "info",
  format: format.combine(format.colorize(), logFormat),
  transports: [
    new transports.Console(),
    new transports.File({ filename: "logs/requests.log", level: "info" }),
    new transports.File({ filename: "logs/errors.log", level: "error" }),
  ],
});

// üîπ –Ø–∫—â–æ Edge Runtime ‚Üí –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ API-–∑–∞–ø–∏—Ç, —ñ–Ω–∞–∫—à–µ –ø–∏—à–µ–º–æ —á–µ—Ä–µ–∑ Winston
const logger = {
  info: (message) => (isEdgeRuntime ? logToApi("info", message) : nodeLogger.info(message)),
  error: (message) => (isEdgeRuntime ? logToApi("error", message) : nodeLogger.error(message)),
  warn: (message) => (isEdgeRuntime ? logToApi("warn", message) : nodeLogger.warn(message)),
};

export default logger;
```

---

## ‚úÖ **üìå 2. –°—Ç–≤–æ—Ä—é—î–º–æ Next.js API `/api/logs.js` –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ª–æ–≥—ñ–≤ —É —Ñ–∞–π–ª**
–û—Å–∫—ñ–ª—å–∫–∏ **API Next.js –ø—Ä–∞—Ü—é—î —É Node.js Runtime**, –º–æ–∂–Ω–∞ —Ç—É—Ç –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ `fs`.

üîπ **–®–ª—è—Ö —É –ø—Ä–æ—î–∫—Ç—ñ: `/pages/api/logs.js`**
```javascript
import { NextResponse } from "next/server";
import fs from "fs";
import path from "path";

// üîπ –§–∞–π–ª –ª–æ–≥—ñ–≤ (–∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è —É `/logs/requests.log`)
const logFilePath = path.join(process.cwd(), "logs", "requests.log");

// üîπ –û–±—Ä–æ–±–Ω–∏–∫ API-–∑–∞–ø–∏—Ç—É –¥–ª—è –∑–∞–ø–∏—Å—É –ª–æ–≥—ñ–≤
export async function POST(req) {
  try {
    const { level, message } = await req.json();

    if (!level || !message) {
      return NextResponse.json({ error: "Invalid log format" }, { status: 400 });
    }

    // üîπ –§–æ—Ä–º–∞—Ç —á–∞—Å—É
    const timeStamp = new Date().toLocaleString("uk-UA", { timeZone: "Europe/Kiev" }).replace(",", "");
    const logMessage = `[${timeStamp}] ${level.toUpperCase()}: ${message}\n`;

    // üîπ –ó–∞–ø–∏—Å—É—î–º–æ —É —Ñ–∞–π–ª
    fs.appendFileSync(logFilePath, logMessage, "utf8");

    return NextResponse.json({ message: "Log saved" }, { status: 200 });
  } catch (error) {
    console.error("Error writing log:", error);
    return NextResponse.json({ error: "Failed to write log" }, { status: 500 });
  }
}
```

---

## ‚úÖ **üìå –Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î?**
| **–°–µ—Ä–µ–¥–æ–≤–∏—â–µ** | **–©–æ –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è?** |
|---------------|---------------------|
| **Node.js Runtime (API, —Å–µ—Ä–≤–µ—Ä–Ω—ñ –∑–∞–ø–∏—Ç–∏)** | –õ–æ–≥–∏ –ø–∏—à—É—Ç—å—Å—è —É —Ñ–∞–π–ª–∏ —á–µ—Ä–µ–∑ `winston` |
| **Edge Runtime (—Ñ—Ä–æ–Ω—Ç–µ–Ω–¥, middleware)** | –õ–æ–≥–∏ –Ω–∞–¥—Å–∏–ª–∞—é—Ç—å—Å—è —É API `/api/logs.js`, —è–∫–µ –∑–±–µ—Ä—ñ–≥–∞—î —ó—Ö —É —Ñ–∞–π–ª—ñ |

---

### ‚úÖ **üìå –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞**
#### üîπ **–¢–µ—Å—Ç—É—î–º–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è –≤ Edge Runtime (–∫–ª—ñ—î–Ω—Ç—Å—å–∫–∏–π –∫–æ–¥)**
```javascript
import logger from "@/utils/logger";

function TestComponent() {
  logger.info("User opened TestComponent");
  return <h1>Testing Logging</h1>;
}

export default TestComponent;
```

üîπ **–í —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ –ª–æ–≥ –±—É–¥–µ –∑–∞–ø–∏—Å–∞–Ω–∏–π —É `logs/requests.log`, –Ω–∞–≤—ñ—Ç—å —è–∫—â–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∞—Ü—é—î –≤ `Edge Runtime`.**

---

### ‚úÖ **üìå –ü—ñ–¥—Å—É–º–æ–∫**
| **–©–æ –≤–∏—Ä—ñ—à–µ–Ω–æ?** | **–†—ñ—à–µ–Ω–Ω—è** |
|------------------|------------------------------|
| `Edge Runtime` –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î `fs` | –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ API `/api/logs` –¥–ª—è –∑–∞–ø–∏—Å—É –ª–æ–≥—ñ–≤ |
| `winston` –ø—Ä–∞—Ü—é—î —Ç—ñ–ª—å–∫–∏ –≤ `Node.js` | –£ `Edge Runtime` –ª–æ–≥–∏ –Ω–∞–¥—Å–∏–ª–∞—é—Ç—å—Å—è –≤ API |
| –õ–æ–≥–∏ –∑ `middleware.js` –Ω–µ –∑–∞–ø–∏—Å—É—é—Ç—å—Å—è | API `/api/logs` –æ—Ç—Ä–∏–º—É—î –ª–æ–≥–∏ —Ç–∞ –∑–±–µ—Ä—ñ–≥–∞—î —ó—Ö |

üöÄ **–¢–µ–ø–µ—Ä –ª–æ–≥–∏ –±—É–¥—É—Ç—å –∑–±–µ—Ä—ñ–≥–∞—Ç–∏—Å—è —É —Ñ–∞–π–ª–∞—Ö –Ω–∞–≤—ñ—Ç—å —É `Edge Runtime`! üî•**