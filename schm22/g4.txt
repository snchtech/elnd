### ‚úÖ **üìå –Ø–∫ –ø–∏—Å–∞—Ç–∏ –ª–æ–≥–∏ –≤ —Ñ–∞–π–ª–∏ —É `Edge Runtime` –±–µ–∑ API-–∑–∞–ø–∏—Ç—É?**  

–û—Å–∫—ñ–ª—å–∫–∏ `Edge Runtime` **–Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î `fs` —ñ `path`**, –∞ –ª–æ–≥—É–≤–∞–Ω–Ω—è —á–µ—Ä–µ–∑ API `/api/logs` –¥–æ–¥–∞—î **–º–µ—Ä–µ–∂–µ–≤—É –∑–∞—Ç—Ä–∏–º–∫—É**, –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–Ω–∞–π—Ç–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π —Å–ø–æ—Å—ñ–± **–∑–∞–ø–∏—Å—É –ª–æ–≥—ñ–≤ –±–µ–∑ API-–∑–∞–ø–∏—Ç—É**.

---

### ‚ùå **üìå –ß–æ–º—É –Ω–µ –º–æ–∂–Ω–∞ –ø—Ä–æ—Å—Ç–æ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ `fs` —É middleware.js?**
- –£ **Edge Runtime** `fs` –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, —Ç–æ–º—É **–±–µ–∑–ø–æ—Å–µ—Ä–µ–¥–Ω—å–æ –ø–∏—Å–∞—Ç–∏ –≤ —Ñ–∞–π–ª –Ω–µ –º–æ–∂–Ω–∞**.
- –ü–æ—Ç—Ä—ñ–±–µ–Ω **—ñ–Ω—à–∏–π –º–µ—Ö–∞–Ω—ñ–∑–º, —è–∫–∏–π –ø—Ä–∞—Ü—é—î –≤ Node.js Runtime**.

---

## ‚úÖ **üìå –†—ñ—à–µ–Ω–Ω—è: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Å–µ—Ä–≤–µ—Ä–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é –∑ `fs` —á–µ—Ä–µ–∑ `serverActions`**
### üîπ **–©–æ —Ü–µ –¥–∞—î?**
‚úî **–õ–æ–≥—É–≤–∞–Ω–Ω—è –Ω–∞–ø—Ä—è–º—É –±–µ–∑ API-–∑–∞–ø–∏—Ç—ñ–≤**  
‚úî **–î–æ—Å—Ç—É–ø –¥–æ `fs` —ñ `path`** –≤ `serverActions` —É Next.js **–±–µ–∑ –ø–æ—Ç—Ä–µ–±–∏ —É /api/logs**  
‚úî **–ú–µ–Ω—à–µ –∑–∞—Ç—Ä–∏–º–æ–∫ —É –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—ñ –∑ API-–∑–∞–ø–∏—Ç–æ–º**  

---

## ‚úÖ **üìå 1. –°—Ç–≤–æ—Ä—é—î–º–æ `logServerAction.js` –¥–ª—è –∑–∞–ø–∏—Å—É —É —Ñ–∞–π–ª–∏ (Node.js Runtime)**
**üìç –®–ª—è—Ö:** `/utils/logServerAction.js`

```javascript
"use server"; // üîπ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ server-side —Ñ—É–Ω–∫—Ü—ñ—é

import fs from "fs";
import path from "path";
import { jwtVerify } from "jose";

// üîπ –§—É–Ω–∫—Ü—ñ—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —à–ª—è—Ö—É –¥–æ —Ñ–∞–π–ª—É –ª–æ–≥—ñ–≤
const getLogFilePath = () => {
  const today = new Date().toISOString().split("T")[0]; // YYYY-MM-DD
  return path.join(process.cwd(), "logs", `app-${today}.log`);
};

// üîπ –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ª–æ–≥—ñ–Ω—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ JWT (cookies)
async function getUserLoginFromToken(token) {
  try {
    if (!token) return "UnknownUser"; // –Ø–∫—â–æ —Ç–æ–∫–µ–Ω–∞ –Ω–µ–º–∞

    const secretKey = new TextEncoder().encode(process.env.ETLS_ACCESS);
    const { payload } = await jwtVerify(token, secretKey);

    return payload.username || "UnknownUser"; // üîπ –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ `username`
  } catch (error) {
    return "UnknownUser"; // –Ø–∫—â–æ –ø–æ–º–∏–ª–∫–∞
  }
}

// üîπ –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø–∏—Å—É –ª–æ–≥—ñ–≤ –Ω–∞–ø—Ä—è–º—É —É —Ñ–∞–π–ª (–±–µ–∑ API)
export async function logToFile(level, message, token) {
  try {
    const login = await getUserLoginFromToken(token); // üîπ –û—Ç—Ä–∏–º—É—î–º–æ –ª–æ–≥—ñ–Ω

    // üîπ –§–æ—Ä–º–∞—Ç —á–∞—Å—É 12.03.2025 12:10:14
    const timeStamp = new Date().toLocaleString("uk-UA", { timeZone: "Europe/Kiev" }).replace(",", "");
    const logMessage = `[${timeStamp}] ${level.toUpperCase()} [${login}]: ${message}\n`;

    // üîπ –ó–∞–ø–∏—Å —É —Ñ–∞–π–ª
    fs.appendFileSync(getLogFilePath(), logMessage, "utf8");

    return { success: true };
  } catch (error) {
    console.error("Error writing log:", error);
    return { success: false, error: "Failed to write log" };
  }
}
```

---

## ‚úÖ **üìå 2. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è `logToFile()` —É `middleware.js`**
–ó–∞–º—ñ—Å—Ç—å API-–∑–∞–ø–∏—Ç—É `/api/logs`, –º–∏ **–ø—Ä–æ—Å—Ç–æ –≤–∏–∫–ª–∏–∫–∞—î–º–æ `logToFile()` –Ω–∞–ø—Ä—è–º—É**.

üîπ **üìç –û–Ω–æ–≤–ª–µ–Ω–∏–π `middleware.js`:**
```javascript
import { NextResponse } from "next/server";
import { cookies } from "next/headers";
import { logToFile } from "@/utils/logServerAction"; // üîπ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Å–µ—Ä–≤–µ—Ä–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é

export async function middleware(req) {
  const { pathname } = req.nextUrl;
  const cookieStore = cookies();
  const userToken = cookieStore.get("userDataEtls")?.value; // üîπ –û—Ç—Ä–∏–º—É—î–º–æ JWT —Ç–æ–∫–µ–Ω

  // üîπ –õ–æ–≥—É—î–º–æ –∫–æ–∂–µ–Ω –∑–∞–ø–∏—Ç (–Ω–∞–ø—Ä—è–º—É —É —Ñ–∞–π–ª, –±–µ–∑ API-–∑–∞–ø–∏—Ç—É)
  await logToFile("info", `Request to ${pathname}`, userToken);

  return NextResponse.next();
}

export const config = {
  matcher: ["/dashboard", "/profile"], // –ó–∞—Ö–∏—â–µ–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
};
```

---

## ‚úÖ **üìå 3. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è `logToFile()` –≤ API Next.js**
–¢–µ–ø–µ—Ä **–º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –ª–æ–≥—É–≤–∞–Ω–Ω—è –≤ Next.js API –Ω–∞–ø—Ä—è–º—É**, –±–µ–∑ `fetch()`.

üîπ **üìç –û–Ω–æ–≤–ª–µ–Ω–∏–π API `/api/someEndpoint.js`:**
```javascript
import { NextResponse } from "next/server";
import { logToFile } from "@/utils/logServerAction";
import { cookies } from "next/headers";

export async function POST(req) {
  const cookieStore = cookies();
  const userToken = cookieStore.get("userDataEtls")?.value;

  await logToFile("info", "User triggered API request", userToken);

  return NextResponse.json({ message: "API request received" });
}
```

---

## ‚úÖ **üìå 4. –ß–æ–º—É —Ü–µ –∫—Ä–∞—â–µ, –Ω—ñ–∂ API-–∑–∞–ø–∏—Ç `/api/logs`?**
| **–ú–µ—Ç–æ–¥** | **–®–≤–∏–¥–∫–æ–¥—ñ—è** | **–ü—Ä–æ–±–ª–µ–º–∏** |
|-----------|--------------|-------------|
| **API `/api/logs`** | ‚ö† –ü–æ–≤—ñ–ª—å–Ω–æ, –±–æ –∫–æ–∂–µ–Ω –ª–æ–≥ = **HTTP-–∑–∞–ø–∏—Ç** | –ë—ñ–ª—å—à–µ –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è, –º–æ–∂–ª–∏–≤—ñ –∑–∞—Ç—Ä–∏–º–∫–∏ |
| **`logToFile()` —á–µ—Ä–µ–∑ `serverActions`** | ‚úÖ –®–≤–∏–¥–∫–æ, –±–æ **–Ω–µ–º–∞—î HTTP-–∑–∞–ø–∏—Ç—É** | –ü—Ä–∞—Ü—é—î —Ç—ñ–ª—å–∫–∏ –Ω–∞ **Node.js Runtime** |

**üöÄ –í–∏—Å–Ω–æ–≤–æ–∫:**  
**‚ùå API `/api/logs` –¥–∞—î –∑–∞—Ç—Ä–∏–º–∫—É —á–µ—Ä–µ–∑ HTTP-–∑–∞–ø–∏—Ç–∏**  
**‚úÖ `logToFile()` –Ω–∞–ø—Ä—è–º—É –ø–∏—à–µ –≤ —Ñ–∞–π–ª–∏ –±–µ–∑ –∑–∞—Ç—Ä–∏–º–æ–∫**  

---

## ‚úÖ **üìå –ü—ñ–¥—Å—É–º–æ–∫**
| **–©–æ –∑—Ä–æ–±–ª–µ–Ω–æ?** | **–†—ñ—à–µ–Ω–Ω—è** |
|------------------|------------|
| **–ó–∞–ø–∏—Å —É —Ñ–∞–π–ª–∏ –Ω–∞–ø—Ä—è–º—É (–±–µ–∑ API)** | `logToFile()` –∑ `fs.appendFileSync()` |
| **–õ–æ–≥—ñ–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ JWT —É cookies** | `jwtVerify()` —á–µ—Ä–µ–∑ `jose` |
| **–§–æ—Ä–º–∞—Ç —á–∞—Å—É `12.03.2025 12:10:14`** | `toLocaleString("uk-UA")` |
| **–®–≤–∏–¥–∫–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è –≤ `middleware.js` —Ç–∞ API** | **–ë–µ–∑ –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö API-–∑–∞–ø–∏—Ç—ñ–≤** |

üöÄ **–¢–µ–ø–µ—Ä –ª–æ–≥—É–≤–∞–Ω–Ω—è –ø—Ä–∞—Ü—é—î –Ω–∞–ø—Ä—è–º—É –≤ `Node.js Runtime`, –±–µ–∑ `fetch()`, –±–µ–∑ –∑–∞—Ç—Ä–∏–º–æ–∫! üî•**