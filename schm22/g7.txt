## ‚úÖ **üìå –Ø–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ `logger` —É Next.js + Node.js**
–©–æ–± **–ø—Ä–∞–≤–∏–ª—å–Ω–æ —ñ–Ω—Ç–µ–≥—Ä—É–≤–∞—Ç–∏ –ª–æ–≥—É–≤–∞–Ω–Ω—è**, –ø–æ—Ç—Ä—ñ–±–Ω–æ:
1. **–†–æ–∑—É–º—ñ—Ç–∏, —â–æ —ñ –¥–µ –ª–æ–≥—É–≤–∞—Ç–∏**
2. **–î–æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏—Å—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –ª–æ–≥—ñ–≤ (—ñ–Ω—Ñ–æ, –ø–æ–º–∏–ª–∫–∏, –∑–∞–ø–∏—Ç–∏, –ø–æ–¥—ñ—ó —Ç–æ—â–æ)**
3. **–õ–æ–≥—É–≤–∞—Ç–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ (API, Middleware, Background Jobs)**
4. **–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –ª–æ–≥–≥–µ—Ä —É –ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –º—ñ—Å—Ü—è—Ö**

---

## ‚úÖ **üìå 1. –û—Å–Ω–æ–≤–Ω—ñ –ø—Ä–∏–Ω—Ü–∏–ø–∏ –ª–æ–≥—É–≤–∞–Ω–Ω—è**
üîπ **–©–æ –ª–æ–≥—É–≤–∞—Ç–∏?**
- **–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø–æ–¥—ñ—ó** ‚Äì –¥—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, –ø—Ä–æ—Ü–µ—Å–∏ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —É—Å–ø—ñ—à–Ω–∏–π –ª–æ–≥—ñ–Ω, –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö)
- **–ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è** ‚Äì –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω—ñ –ø—Ä–æ–±–ª–µ–º–∏ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, "–¢–æ–∫–µ–Ω —Å–∫–æ—Ä–æ –∑–∞–∫—ñ–Ω—á–∏—Ç—å—Å—è")
- **–ü–æ–º–∏–ª–∫–∏** ‚Äì –≤–∏–Ω—è—Ç–∫–æ–≤—ñ —Å–∏—Ç—É–∞—Ü—ñ—ó (`catch(error)` –±–ª–æ–∫–∏)
- **–ó–∞–ø–∏—Ç–∏ API** ‚Äì —è–∫—ñ –¥–∞–Ω—ñ –ø—Ä–∏–π—à–ª–∏, —Ö—Ç–æ –≤–∏–∫–ª–∏–∫–∞–≤ –∑–∞–ø–∏—Ç
- **–ê—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—é** ‚Äì —É—Å–ø—ñ—à–Ω—ñ/–Ω–µ–≤–¥–∞–ª—ñ –≤—Ö–æ–¥–∏, –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤
- **–ë–µ–∫–≥—Ä–∞—É–Ω–¥-–ø—Ä–æ—Ü–µ—Å–∏** ‚Äì –∫—Ä–æ–Ω-–¥–∂–æ–±–∏, –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è

---

## ‚úÖ **üìå 2. –î–µ —Å—Ç–∞–≤–∏—Ç–∏ `logger`?**

| **–î–µ?** | **–©–æ –ª–æ–≥—É–≤–∞—Ç–∏?** | **–ü—Ä–∏–∫–ª–∞–¥** |
|----------|-----------------|-------------|
| **Middleware (`middleware.js`)** | –ó–∞–ø–∏—Ç–∏ –Ω–∞ –∑–∞—Ö–∏—â–µ–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏, —Ä–µ–¥—ñ—Ä–µ–∫—Ç–∏, –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —Ç–æ–∫–µ–Ω—ñ–≤ | –õ–æ–≥—É–≤–∞—Ç–∏ –∫–æ–∂–µ–Ω –∑–∞–ø–∏—Ç (URL, –º–µ—Ç–æ–¥, –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á) |
| **API Routes (`/api/...`)** | –í—Ö—ñ–¥–Ω—ñ –¥–∞–Ω—ñ, –ø–æ–º–∏–ª–∫–∏, —Ä–µ—Å–ø–æ–Ω—Å–∏ API | –õ–æ–≥—É–≤–∞—Ç–∏ –¥–∞–Ω—ñ –≤—ñ–¥ –∫–ª—ñ—î–Ω—Ç–∞ —Ç–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å |
| **Auth (–õ–æ–≥—ñ–Ω, —Ç–æ–∫–µ–Ω–∏)** | –í—Ö—ñ–¥, –≤–∏—Ö—ñ–¥, –ø–æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤ | –•—Ç–æ –∑–∞–π—à–æ–≤, –ø–æ–º–∏–ª–∫–∏ –ø—Ä–∏ –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó —Ç–æ–∫–µ–Ω–∞ |
| **Background Jobs (cron, WebSockets)** | –§–æ–Ω–æ–≤—ñ –∑–∞–≤–¥–∞–Ω–Ω—è, –ø–æ–º–∏–ª–∫–∏ | –ê–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö, –ø–æ–º–∏–ª–∫–∏ –≤ –±–µ–∫–≥—Ä–∞—É–Ω–¥—ñ |

---

## ‚úÖ **üìå 3. –ü—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è `logger` —É Next.js**

### **üìç 3.1 –õ–æ–≥—É–≤–∞–Ω–Ω—è —É `middleware.js`**
**–©–æ —Ç—É—Ç –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è?**
1. –õ–æ–≥—É–≤–∞–Ω–Ω—è –∫–æ–∂–Ω–æ–≥–æ –∑–∞–ø–∏—Ç—É (`pathname`, `IP`, `UserAgent`)
2. –û—Ç—Ä–∏–º–∞–Ω–Ω—è `etlsUser` —ñ–∑ cookies —ñ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
3. –õ–æ–≥—É–≤–∞–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ / –ø–æ–º–∏–ª–∫–∏
4. –Ø–∫—â–æ `accessTokenEtls` –Ω–µ–¥—ñ–π—Å–Ω–∏–π ‚Üí –ª–æ–≥—É—î–º–æ `Unauthorized` —ñ —Ä–µ–¥—ñ—Ä–µ–∫—Ç–∏–º–æ –Ω–∞ –ª–æ–≥—ñ–Ω

```javascript
import { NextResponse } from "next/server";
import { cookies } from "next/headers";
import { logToFile } from "@/utils/logServerAction"; // üîπ –õ–æ–≥—É–≤–∞–Ω–Ω—è —É —Ñ–∞–π–ª–∏
import { jwtVerify } from "jose";

export async function middleware(req) {
  const { pathname } = req.nextUrl;
  const cookieStore = cookies();
  const userToken = cookieStore.get("etlsUser")?.value;
  const ip = req.headers.get("x-forwarded-for") || req.ip || "Unknown IP";
  const userAgent = req.headers.get("user-agent") || "Unknown User-Agent";

  try {
    // üîπ –õ–æ–≥—É—î–º–æ –≤—Ö—ñ–¥–Ω–∏–π –∑–∞–ø–∏—Ç
    await logToFile("info", `Request: ${pathname}, IP: ${ip}, UA: ${userAgent}`, userToken);

    // üîπ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
    if (userToken) {
      const secretKey = new TextEncoder().encode(process.env.ETLS_ACCESS);
      const { payload } = await jwtVerify(userToken, secretKey);
      await logToFile("info", `Authenticated user: ${payload.username}`, userToken);
    } else {
      await logToFile("warn", `Unauthorized access to ${pathname}`, userToken);
      return NextResponse.redirect(new URL("/login", req.url));
    }

    return NextResponse.next();
  } catch (error) {
    await logToFile("error", `Middleware error: ${error.message}`, userToken);
    return NextResponse.error();
  }
}

export const config = {
  matcher: ["/dashboard", "/profile"], // –ó–∞—Ö–∏—â–µ–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
};
```

---

### **üìç 3.2 –õ–æ–≥—É–≤–∞–Ω–Ω—è —É `API` Next.js**
**–©–æ —Ç—É—Ç –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è?**
1. –õ–æ–≥—É—î–º–æ **–æ—Ç—Ä–∏–º–∞–Ω—ñ –¥–∞–Ω—ñ** —É `body`
2. –õ–æ–≥—É—î–º–æ **–≤—ñ–¥–ø–æ–≤—ñ–¥—å API** (—É—Å–ø—ñ—à–Ω—É –∞–±–æ –ø–æ–º–∏–ª–∫—É)
3. –Ø–∫—â–æ –ø–æ–º–∏–ª–∫–∞ ‚Üí –∑–∞–ø–∏—Å—É—î–º–æ `error` –ª–æ–≥

```javascript
import { NextResponse } from "next/server";
import { logToFile } from "@/utils/logServerAction";
import { cookies } from "next/headers";

export async function POST(req) {
  const cookieStore = cookies();
  const userToken = cookieStore.get("etlsUser")?.value;

  try {
    const body = await req.json();
    await logToFile("info", `API Request: ${JSON.stringify(body)}`, userToken);

    // üîπ –í–∞—à –æ—Å–Ω–æ–≤–Ω–∏–π –∫–æ–¥ –æ–±—Ä–æ–±–∫–∏ –∑–∞–ø–∏—Ç—É
    const responseData = { message: "Success" };

    await logToFile("info", `API Response: ${JSON.stringify(responseData)}`, userToken);
    return NextResponse.json(responseData);
  } catch (error) {
    await logToFile("error", `API error: ${error.message}`, userToken);
    return NextResponse.json({ error: "Internal Server Error" }, { status: 500 });
  }
}
```

---

### **üìç 3.3 –õ–æ–≥—É–≤–∞–Ω–Ω—è –ø–æ–º–∏–ª–æ–∫ —É `Auth API`**
**–©–æ —Ç—É—Ç –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è?**
1. –õ–æ–≥—É—î–º–æ **—Å–ø—Ä–æ–±—É –ª–æ–≥—ñ–Ω—É**
2. –õ–æ–≥—É—î–º–æ **—É—Å–ø—ñ—à–Ω–∏–π –ª–æ–≥—ñ–Ω**
3. –õ–æ–≥—É—î–º–æ **–Ω–µ–≤–¥–∞–ª–∏–π –ª–æ–≥—ñ–Ω**
4. –õ–æ–≥—É—î–º–æ **–æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞** –∞–±–æ –ø–æ–º–∏–ª–∫—É

```javascript
import { NextResponse } from "next/server";
import { logToFile } from "@/utils/logServerAction";
import { SignJWT } from "jose";

export async function POST(req) {
  try {
    const { username, password } = await req.json();
    await logToFile("info", `Login attempt: ${username}`);

    // üîπ –ó–∞–ø–∏—Ç –¥–æ `REMOTE_API`
    const apiResponse = await fetch(`${process.env.REMOTE_API}/login`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ username, password }),
    });

    if (!apiResponse.ok) {
      await logToFile("warn", `Login failed: ${username}`);
      return NextResponse.json({ error: "Invalid credentials" }, { status: 401 });
    }

    const { accessToken, refreshToken, userData } = await apiResponse.json();

    // üîπ –ì–µ–Ω–µ—Ä—É—î–º–æ –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ–π —Ç–æ–∫–µ–Ω
    const accessTokenEtls = await new SignJWT(userData)
      .setProtectedHeader({ alg: "HS256" })
      .setExpirationTime("15m")
      .sign(new TextEncoder().encode(process.env.ETLS_ACCESS));

    await logToFile("info", `Login successful: ${userData.username}`);

    // üîπ –í—ñ–¥–ø–æ–≤—ñ–¥—å + Cookies
    const response = NextResponse.json({ message: "Login successful", userData });
    response.headers.set(
      "Set-Cookie",
      [
        `accessTokenEtls=${accessTokenEtls}; HttpOnly; Path=/; Secure; SameSite=Strict`,
      ].join(", ")
    );

    return response;
  } catch (error) {
    await logToFile("error", `Auth error: ${error.message}`);
    return NextResponse.json({ error: "Internal Server Error" }, { status: 500 });
  }
}
```

---

## ‚úÖ **üìå –í–∏—Å–Ω–æ–≤–æ–∫**
| **–©–æ –∑—Ä–æ–±–ª–µ–Ω–æ?** | **–î–µ?** | **–©–æ –ª–æ–≥—É–≤–∞—Ç–∏?** |
|------------------|--------|-----------------|
| **–õ–æ–≥—É–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—ñ–≤ —Ç–∞ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó** | `middleware.js` | `pathname`, `IP`, `UserAgent`, `Token` |
| **–õ–æ–≥—É–≤–∞–Ω–Ω—è API-–∑–∞–ø–∏—Ç—ñ–≤** | `api/...` | –í—Ö—ñ–¥–Ω—ñ `body`, `response`, `error` |
| **–õ–æ–≥—É–≤–∞–Ω–Ω—è –ª–æ–≥—ñ–Ω—É/—Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó** | `api/auth/login` | `Username`, `Login status`, `Tokens` |
| **–õ–æ–≥—É–≤–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤** | `api/auth/refresh` | `Old Token`, `New Token`, `Expiration` |
| **–†–æ–∑–¥—ñ–ª–µ–Ω–Ω—è –ª–æ–≥—ñ–≤** | `logs/app-YYYY-MM-DD.log`, `logs/errors-YYYY-MM-DD.log` | –û—Å–Ω–æ–≤–Ω—ñ –ø–æ–¥—ñ—ó / –ü–æ–º–∏–ª–∫–∏ |

üöÄ **–¢–µ–ø–µ—Ä —Ç–∏ –º–æ–∂–µ—à –ª–µ–≥–∫–æ —ñ–Ω—Ç–µ–≥—Ä—É–≤–∞—Ç–∏ `logger` —É Next.js —ñ –±–∞—á–∏—Ç–∏ –≤—Å—ñ –¥—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤! üî•**