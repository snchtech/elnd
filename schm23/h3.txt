–û—Å—å –¥–æ–æ–ø—Ä–∞—Ü—å–æ–≤–∞–Ω–∞ –≤–µ—Ä—Å—ñ—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ `/albums` –∑ —ñ–Ω—Ç–µ–≥—Ä–æ–≤–∞–Ω–æ—é **–¥–µ—Ä–µ–≤–æ–≤–∏–¥–Ω–æ—é –Ω–∞–≤—ñ–≥–∞—Ü—ñ—î—é**, —è–∫–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î **Material-UI TreeView**.  

### üîπ **–û–Ω–æ–≤–ª–µ–Ω–Ω—è**
- **TreeView** –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤—ñ–¥–¥—ñ–ª—ñ–≤ ‚Üí –∞–ª—å–±–æ–º—ñ–≤ ‚Üí —Å—Ö–µ–º.
- –í—ñ–¥–∫—Ä–∏–≤–∞–Ω–Ω—è/–∑–∞–∫—Ä–∏–≤–∞–Ω–Ω—è –≤–∫–ª–∞–¥–µ–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤.
- –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è `+` –±—ñ–ª—è –∞–ª—å–±–æ–º—É, —è–∫—â–æ —î –≤–∫–ª–∞–¥–µ–Ω—ñ —Å—Ö–µ–º–∏.

---

### **–û–Ω–æ–≤–ª–µ–Ω–∏–π –∫–æ–¥ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ `/albums.tsx`**
```javascript
import { useEffect, useState } from "react";
import { useRouter } from "next/router";
import { fetchDepartments, fetchUnits, fetchAlbums, fetchSchemes, fetchAlbumStatuses, fetchRecentChanges } from "@/utils/api";
import { Container, Grid, Button, TextField, MenuItem, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, IconButton } from "@mui/material";
import { Add, Print, Visibility, Edit, Delete, Description, ExpandMore, ChevronRight } from "@mui/icons-material";
import { TreeView, TreeItem } from "@mui/lab";

export default function AlbumsPage() {
  const router = useRouter();
  const { mode } = router.query;
  const [departments, setDepartments] = useState([]);
  const [units, setUnits] = useState([]);
  const [albums, setAlbums] = useState([]);
  const [schemes, setSchemes] = useState([]);
  const [statuses, setStatuses] = useState([]);
  const [recentChanges, setRecentChanges] = useState([]);
  const [expanded, setExpanded] = useState([]); // –ö–æ–Ω—Ç—Ä–æ–ª—å —Ä–æ–∑–∫—Ä–∏—Ç—Ç—è –≥—ñ–ª–æ–∫

  useEffect(() => {
    async function loadData() {
      setDepartments(await fetchDepartments());
      setUnits(await fetchUnits());
      setAlbums(await fetchAlbums());
      setSchemes(await fetchSchemes());
      setStatuses(await fetchAlbumStatuses());
      setRecentChanges(await fetchRecentChanges());
    }
    loadData();
  }, []);

  // –§—É–Ω–∫—Ü—ñ—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–µ—Ä–µ–≤–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
  const buildTree = () => {
    return departments.map((department) => {
      const departmentAlbums = albums.filter(album => album.department_id === department.id);
      
      return (
        <TreeItem key={department.id} nodeId={`dep-${department.id}`} label={department.name}>
          {departmentAlbums.map(album => {
            const albumSchemes = schemes.filter(scheme => scheme.album_id === album.id);
            
            return (
              <TreeItem 
                key={album.id} 
                nodeId={`album-${album.id}`} 
                label={`${album.name} ${albumSchemes.length > 0 ? "+" : ""}`}
              >
                {albumSchemes.map(scheme => (
                  <TreeItem key={scheme.id} nodeId={`scheme-${scheme.id}`} label={scheme.name} />
                ))}
              </TreeItem>
            );
          })}
        </TreeItem>
      );
    });
  };

  return (
    <Container maxWidth="xl">
      <Grid container spacing={3}>
        
        {/* –õ—ñ–≤–∞ –ø–∞–Ω–µ–ª—å (–¥–µ—Ä–µ–≤–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó) */}
        <Grid item xs={3}>
          <Paper style={{ padding: 16 }}>
            <h3>–ù–∞–≤—ñ–≥–∞—Ü—ñ—è</h3>
            <TreeView
              defaultCollapseIcon={<ExpandMore />}
              defaultExpandIcon={<ChevronRight />}
              expanded={expanded}
              onNodeToggle={(event, nodeIds) => setExpanded(nodeIds)}
            >
              {buildTree()}
            </TreeView>
          </Paper>
        </Grid>

        {/* –û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
        <Grid item xs={9}>
          
          {/* –í–µ—Ä—Ö–Ω—è –ø–∞–Ω–µ–ª—å */}
          <Grid container spacing={2} alignItems="center">
            <Grid item xs={8}>
              <TextField label="–ü–æ—à—É–∫" variant="outlined" fullWidth />
            </Grid>
            {mode === "editor" && (
              <Grid item xs={4} style={{ textAlign: "right" }}>
                <Button variant="contained" color="success" startIcon={<Add />}>
                  –ù–æ–≤–∏–π –∞–ª—å–±–æ–º
                </Button>
              </Grid>
            )}
          </Grid>

          {/* –§—ñ–ª—å—Ç—Ä–∏ */}
          <Grid container spacing={2} style={{ marginTop: 16 }}>
            <Grid item xs={6}>
              <TextField select label="–í—ñ–¥–¥—ñ–ª" fullWidth>
                {departments.map((dep) => (
                  <MenuItem key={dep.id} value={dep.id}>{dep.name}</MenuItem>
                ))}
              </TextField>
            </Grid>
            <Grid item xs={6}>
              <TextField select label="–ü—ñ–¥—Ä–æ–∑–¥—ñ–ª" fullWidth>
                {units.map((unit) => (
                  <MenuItem key={unit.id} value={unit.id}>{unit.name}</MenuItem>
                ))}
              </TextField>
            </Grid>
          </Grid>

          {/* –¢–∞–±–ª–∏—Ü—è –∞–ª—å–±–æ–º—ñ–≤ */}
          <TableContainer component={Paper} style={{ marginTop: 16 }}>
            <Table>
              <TableHead>
                <TableRow>
                  <TableCell>ID</TableCell>
                  <TableCell>–í—ñ–¥–¥—ñ–ª</TableCell>
                  <TableCell>Unit</TableCell>
                  <TableCell>–ù–∞–∑–≤–∞</TableCell>
                  <TableCell>–û–ø–∏—Å</TableCell>
                  <TableCell>–î–∞—Ç–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è</TableCell>
                  <TableCell>–°—Ç–∞—Ç—É—Å</TableCell>
                  <TableCell>–î—ñ—ó</TableCell>
                </TableRow>
              </TableHead>
              <TableBody>
                {albums.map((album) => (
                  <TableRow key={album.id}>
                    <TableCell>{album.id}</TableCell>
                    <TableCell>{album.department_name}</TableCell>
                    <TableCell>{album.unit_name}</TableCell>
                    <TableCell>{album.name}</TableCell>
                    <TableCell>{album.description}</TableCell>
                    <TableCell>{album.date_update || album.date_create}</TableCell>
                    <TableCell>{statuses.find((s) => s.id === album.status_id)?.name}</TableCell>
                    <TableCell>
                      <IconButton color="primary"><Print /></IconButton>
                      <IconButton color="secondary"><Description /></IconButton>
                      {mode === "viewer" && <IconButton color="info"><Visibility /></IconButton>}
                      {mode === "editor" && <>
                        <IconButton color="warning"><Edit /></IconButton>
                        <IconButton color="error"><Delete /></IconButton>
                      </>}
                    </TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
          </TableContainer>

          {/* –ë–ª–æ–∫ –æ—Å—Ç–∞–Ω–Ω—ñ—Ö –∑–º—ñ–Ω */}
          <Paper style={{ marginTop: 16, padding: 16 }}>
            <h3>–û—Å—Ç–∞–Ω–Ω—ñ 5 –∑–º—ñ–Ω</h3>
            <TableContainer>
              <Table>
                <TableHead>
                  <TableRow>
                    <TableCell>–î–∞—Ç–∞</TableCell>
                    <TableCell>ID</TableCell>
                    <TableCell>–í—ñ–¥–¥—ñ–ª</TableCell>
                    <TableCell>Unit</TableCell>
                    <TableCell>–ù–∞–∑–≤–∞</TableCell>
                    <TableCell>–ó–º—ñ–Ω–∏ –≤–∏–∫–æ–Ω–∞–≤</TableCell>
                  </TableRow>
                </TableHead>
                <TableBody>
                  {recentChanges.map((change) => (
                    <TableRow key={change.id}>
                      <TableCell>{change.date}</TableCell>
                      <TableCell>{change.album_id}</TableCell>
                      <TableCell>{change.department_name}</TableCell>
                      <TableCell>{change.unit_name}</TableCell>
                      <TableCell>{change.name}</TableCell>
                      <TableCell>{change.editor_name}</TableCell>
                    </TableRow>
                  ))}
                </TableBody>
              </Table>
            </TableContainer>
          </Paper>

        </Grid>
      </Grid>
    </Container>
  );
}
```

---

### **–©–æ –Ω–æ–≤–æ–≥–æ –≤ –¥–µ—Ä–µ–≤—ñ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó?**
‚úÖ –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤—ñ–¥–¥—ñ–ª—ñ–≤ (`department_name`).  
‚úÖ –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∞–ª—å–±–æ–º—ñ–≤ (`name`) —É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ–º—É –≤—ñ–¥–¥—ñ–ª—ñ.  
‚úÖ –î–æ–¥–∞–≤–∞–Ω–Ω—è `+`, —è–∫—â–æ –≤ –∞–ª—å–±–æ–º—ñ —î —Å—Ö–µ–º–∏.  
‚úÖ –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å—Ö–µ–º –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ –∞–ª—å–±–æ–º—É.  
‚úÖ –ö–æ–Ω—Ç—Ä–æ–ª—å —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è/–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ (`expanded`).  

---

### **–©–æ –¥–∞–ª—ñ?**
1. **–î–æ–¥–∞—Ç–∏ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –∫–ª—ñ–∫—ñ–≤ —É –¥–µ—Ä–µ–≤—ñ**, —â–æ–± –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∞–ª—å–±–æ–º –∞–±–æ —Å—Ö–µ–º—É –≤—ñ–¥–∫—Ä–∏–≤–∞–≤—Å—è —ó—Ö–Ω—ñ–π –ø–µ—Ä–µ–≥–ª—è–¥.
2. **–ü—ñ–¥–∫–ª—é—á–∏—Ç–∏ API –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –∞–ª—å–±–æ–º –∞–±–æ —Å—Ö–µ–º—É –ø—Ä–∏ –≤–∏–±–æ—Ä—ñ.**

–ì–æ—Ç–æ–≤–∏–π —Ä–æ–∑—à–∏—Ä—é–≤–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª! üöÄ