### **üìå 1. SQL-–∑–∞–ø–∏—Ç –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –Ω–æ–≤–æ—ó —Å—Ö–µ–º–∏**
```sql
INSERT INTO SCHEME (
    album_id, 
    name, 
    depart_id, 
    unit_id, 
    description, 
    date_create, 
    format, 
    page_number, 
    system, 
    shifr, 
    last_editor_id
) VALUES (
    :album_id, 
    :name, 
    :depart_id, 
    :unit_id, 
    :description, 
    SYSDATE, 
    :format, 
    1, 
    NULL, 
    NULL, 
    :editor_id
)
RETURNING id INTO :new_scheme_id;
```
- **`SYSDATE`** ‚Äì –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î –¥–∞—Ç—É —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è.  
- **`page_number = 1`** ‚Äì –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –æ–¥–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞.  
- **`last_editor_id`** ‚Äì –∑–∞–ø–∏—Å—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —è–∫–∏–π —Å—Ç–≤–æ—Ä–∏–≤ —Å—Ö–µ–º—É.  
- **`RETURNING id INTO :new_scheme_id`** ‚Äì –æ—Ç—Ä–∏–º—É—î–º–æ `id` –Ω–æ–≤–æ—ó —Å—Ö–µ–º–∏ –¥–ª—è –ø–æ–¥–∞–ª—å—à–æ–≥–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è.  

---

### **üìå 2. API Next.js –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ö–µ–º–∏**
**–°—Ç–≤–æ—Ä—é—î–º–æ —Ñ–∞–π–ª `/pages/api/rest/createScheme.js`**
```javascript
import { queryDatabase } from "@/utils/db";

export default async function handler(req, res) {
  if (req.method !== "POST") {
    return res.status(405).json({ error: "Method Not Allowed" });
  }

  try {
    const { album_id, name, depart_id, unit_id, description, format, editor_id } = req.body;

    if (!album_id || !name || !depart_id || !unit_id || !format || !editor_id) {
      return res.status(400).json({ error: "–ó–∞–ø–æ–≤–Ω—ñ—Ç—å –≤—Å—ñ –æ–±–æ–≤'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è" });
    }

    const sql = `
      INSERT INTO SCHEME (album_id, name, depart_id, unit_id, description, date_create, format, page_number, system, shifr, last_editor_id)
      VALUES (:album_id, :name, :depart_id, :unit_id, :description, SYSDATE, :format, 1, NULL, NULL, :editor_id)
      RETURNING id INTO :new_scheme_id
    `;

    const params = { album_id, name, depart_id, unit_id, description, format, editor_id, new_scheme_id: { dir: "out", type: "NUMBER" } };
    const result = await queryDatabase(sql, params);

    res.status(201).json({ success: true, scheme_id: result.outBinds.new_scheme_id });
  } catch (error) {
    console.error("Error creating scheme:", error);
    res.status(500).json({ error: "Internal Server Error" });
  }
}
```

---

### **üìå 3. –§—É–Ω–∫—Ü—ñ—è API –≤ `utils/api.js`**
```javascript
export const createScheme = async (schemeData) => {
  return fetchData("/api/rest/createScheme", {
    method: "POST",
    body: JSON.stringify(schemeData),
  });
};
```

---

### **üìå 4. –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ—ó —Å—Ö–µ–º–∏"**
#### **–û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É `/albums/[albumId].js`**
```javascript
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import { Container, Grid, Paper, IconButton, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, MenuItem } from "@mui/material";
import { ArrowBack, Add } from "@mui/icons-material";
import NavigationTree from "@/components/NavigationTree";
import SearchBar from "@/components/SearchBar";
import { fetchAlbums, fetchDepartments, fetchUnits, createScheme } from "@/utils/api";
import { Formik, Form, Field } from "formik";
import * as Yup from "yup";

export default function AlbumSchemesPage() {
  const router = useRouter();
  const { albumId } = router.query;
  const [albums, setAlbums] = useState([]);
  const [departments, setDepartments] = useState([]);
  const [units, setUnits] = useState([]);
  const [openModal, setOpenModal] = useState(false);

  useEffect(() => {
    async function loadData() {
      setAlbums(await fetchAlbums());
      setDepartments(await fetchDepartments());
      setUnits(await fetchUnits());
    }
    loadData();
  }, []);

  // –í–∞–ª—ñ–¥–∞—Ü—ñ—è —Ñ–æ—Ä–º–∏
  const validationSchema = Yup.object().shape({
    album_id: Yup.number().required("–û–±–µ—Ä—ñ—Ç—å –∞–ª—å–±–æ–º"),
    name: Yup.string().required("–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É"),
    depart_id: Yup.number().required("–û–±–µ—Ä—ñ—Ç—å –≤—ñ–¥–¥—ñ–ª"),
    unit_id: Yup.number().required("–û–±–µ—Ä—ñ—Ç—å –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª"),
    format: Yup.string().required("–û–±–µ—Ä—ñ—Ç—å —Ñ–æ—Ä–º–∞—Ç"),
  });

  // –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–∏—Ö
  const handleSubmit = async (values, { setSubmitting }) => {
    try {
      const response = await createScheme({ ...values, editor_id: 1 }); // ID —Ç–∏–º—á–∞—Å–æ–≤–æ 1, –ø–æ—Ç—ñ–º –±–µ—Ä–µ–º–æ –∑ —Å–µ—Å—ñ—ó
      setOpenModal(false);
      router.push(`/editor/${response.scheme_id}`); // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞ Editor
    } catch (error) {
      console.error("Error creating scheme:", error);
    } finally {
      setSubmitting(false);
    }
  };

  return (
    <Container maxWidth="xl">
      <Grid container spacing={3}>
        
        {/* –õ—ñ–≤–∞ –ø–∞–Ω–µ–ª—å (–¥–µ—Ä–µ–≤–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó) */}
        <Grid item xs={3}>
          <Paper style={{ padding: 16 }}>
            <NavigationTree selectedAlbumId={albumId} />
          </Paper>
        </Grid>

        {/* –û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
        <Grid item xs={9}>
          
          {/* –í–µ—Ä—Ö–Ω—è –ø–∞–Ω–µ–ª—å */}
          <Grid container spacing={2} alignItems="center">
            {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ */}
            <Grid item xs={1}>
              <IconButton onClick={() => router.push("/albums")}>
                <ArrowBack />
              </IconButton>
            </Grid>

            {/* –ü–æ—à—É–∫ */}
            <Grid item xs={8}>
              <SearchBar placeholder="–ü–æ—à—É–∫ —Å—Ö–µ–º" onSearch={(query) => console.log(query)} />
            </Grid>

            {/* –ö–Ω–æ–ø–∫–∞ "–î–æ–¥–∞—Ç–∏ –Ω–æ–≤—É —Å—Ö–µ–º—É" */}
            <Grid item xs={3} style={{ textAlign: "right" }}>
              <Button variant="contained" color="success" startIcon={<Add />} onClick={() => setOpenModal(true)}>
                –î–æ–¥–∞—Ç–∏ –Ω–æ–≤—É —Å—Ö–µ–º—É
              </Button>
            </Grid>
          </Grid>

          {/* –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ */}
          <Dialog open={openModal} onClose={() => setOpenModal(false)}>
            <DialogTitle>–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ—ó —Å—Ö–µ–º–∏</DialogTitle>
            <Formik
              initialValues={{ album_id: albumId || "", name: "", depart_id: "", unit_id: "", format: "A3", description: "" }}
              validationSchema={validationSchema}
              onSubmit={handleSubmit}
            >
              {({ isSubmitting, errors, touched }) => (
                <Form>
                  <DialogContent>
                    {/* –ê–ª—å–±–æ–º */}
                    <Field as={TextField} select label="–í–∏–±–µ—Ä—ñ—Ç—å –∞–ª—å–±–æ–º" name="album_id" fullWidth error={touched.album_id && !!errors.album_id} helperText={touched.album_id && errors.album_id}>
                      {albums.map(album => (
                        <MenuItem key={album.id} value={album.id}>{album.name}</MenuItem>
                      ))}
                    </Field>

                    {/* –í—ñ–¥–¥—ñ–ª */}
                    <Field as={TextField} select label="–í—ñ–¥–¥—ñ–ª" name="depart_id" fullWidth error={touched.depart_id && !!errors.depart_id} helperText={touched.depart_id && errors.depart_id}>
                      {departments.map(dep => (
                        <MenuItem key={dep.id} value={dep.id}>{dep.name}</MenuItem>
                      ))}
                    </Field>

                    {/* –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª */}
                    <Field as={TextField} select label="–ü—ñ–¥—Ä–æ–∑–¥—ñ–ª" name="unit_id" fullWidth error={touched.unit_id && !!errors.unit_id} helperText={touched.unit_id && errors.unit_id}>
                      {units.map(unit => (
                        <MenuItem key={unit.id} value={unit.id}>{unit.name}</MenuItem>
                      ))}
                    </Field>

                    {/* –ù–∞–∑–≤–∞ */}
                    <Field as={TextField} label="–ù–∞–∑–≤–∞" name="name" fullWidth error={touched.name && !!errors.name} helperText={touched.name && errors.name} />

                  </DialogContent>
                  <DialogActions>
                    <Button onClick={() => setOpenModal(false)} color="secondary">–°–∫–∞—Å—É–≤–∞—Ç–∏</Button>
                    <Button type="submit" color="primary" variant="contained" disabled={isSubmitting}>–°—Ç–≤–æ—Ä–∏—Ç–∏</Button>
                  </DialogActions>
                </Form>
              )}
            </Formik>
          </Dialog>

        </Grid>
      </Grid>
    </Container>
  );
}
```
–û—Å—å –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ—ó —Å—Ö–µ–º–∏, –≤–∫–ª—é—á–∞—é—á–∏ —Ä–µ—à—Ç—É –ø–æ–ª—ñ–≤ —Ñ–æ—Ä–º–∏ —Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—É.

---

### **üìå –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ä–µ—à—Ç–∏ –ø–æ–ª—ñ–≤ —É –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ**  
–ü—Ä–æ–¥–æ–≤–∂–∏–º–æ –¥–æ–¥–∞–≤–∞—Ç–∏ –µ–ª–µ–º–µ–Ω—Ç–∏ —É —Ñ–æ—Ä–º—É –≤ `DialogContent`, –≤–∫–ª—é—á–∞—é—á–∏ `format` —Ç–∞ `description`.

#### **–û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–¥—É –≤ `DialogContent`**
```javascript
<DialogContent>
  {/* –ê–ª—å–±–æ–º */}
  <Field as={TextField} select label="–í–∏–±–µ—Ä—ñ—Ç—å –∞–ª—å–±–æ–º" name="album_id" fullWidth 
    error={touched.album_id && !!errors.album_id} helperText={touched.album_id && errors.album_id}>
    {albums.map(album => (
      <MenuItem key={album.id} value={album.id}>{album.name}</MenuItem>
    ))}
  </Field>

  {/* –í—ñ–¥–¥—ñ–ª */}
  <Field as={TextField} select label="–í—ñ–¥–¥—ñ–ª" name="depart_id" fullWidth 
    error={touched.depart_id && !!errors.depart_id} helperText={touched.depart_id && errors.depart_id}>
    {departments.map(dep => (
      <MenuItem key={dep.id} value={dep.id}>{dep.name}</MenuItem>
    ))}
  </Field>

  {/* –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª */}
  <Field as={TextField} select label="–ü—ñ–¥—Ä–æ–∑–¥—ñ–ª" name="unit_id" fullWidth 
    error={touched.unit_id && !!errors.unit_id} helperText={touched.unit_id && errors.unit_id}>
    {units.map(unit => (
      <MenuItem key={unit.id} value={unit.id}>{unit.name}</MenuItem>
    ))}
  </Field>

  {/* –ù–∞–∑–≤–∞ */}
  <Field as={TextField} label="–ù–∞–∑–≤–∞" name="name" fullWidth 
    error={touched.name && !!errors.name} helperText={touched.name && errors.name} />

  {/* –§–æ—Ä–º–∞—Ç */}
  <Field as={TextField} select label="–§–æ—Ä–º–∞—Ç" name="format" fullWidth 
    error={touched.format && !!errors.format} helperText={touched.format && errors.format}>
    {["A4", "A3", "A2", "A1", "A0"].map(format => (
      <MenuItem key={format} value={format}>{format}</MenuItem>
    ))}
  </Field>

  {/* –û–ø–∏—Å */}
  <Field as={TextField} label="–û–ø–∏—Å" name="description" fullWidth multiline rows={3} />

</DialogContent>
```

---

### **üìå –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ñ–æ—Ä–º–∏**
–î–æ–¥–∞–º–æ –∫–Ω–æ–ø–∫–∏ **"–°–∫–∞—Å—É–≤–∞—Ç–∏"** —Ç–∞ **"–°—Ç–≤–æ—Ä–∏—Ç–∏"**, —â–æ –æ–±—Ä–æ–±–ª—è—é—Ç—å –≤–∞–ª—ñ–¥–∞—Ü—ñ—é —Ç–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫—É –¥–∞–Ω–∏—Ö.

#### **–û–Ω–æ–≤–ª–µ–Ω–Ω—è `DialogActions`**
```javascript
<DialogActions>
  <Button onClick={() => setOpenModal(false)} color="secondary">
    –°–∫–∞—Å—É–≤–∞—Ç–∏
  </Button>
  <Button type="submit" color="primary" variant="contained" disabled={isSubmitting}>
    –°—Ç–≤–æ—Ä–∏—Ç–∏
  </Button>
</DialogActions>
```

---

### **üìå 5. –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ä–µ–¥–∏—Ä–µ–∫—Ç—É –ø—ñ—Å–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ö–µ–º–∏**
–ö–æ–ª–∏ —Å—Ö–µ–º–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∞, –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É **Editor**, –¥–µ –≤—ñ–Ω –∑–º–æ–∂–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ –Ω–æ–≤–æ—é —Å—Ö–µ–º–æ—é.

#### **–û–Ω–æ–≤–ª–µ–Ω–Ω—è `handleSubmit` —É `Formik`**
```javascript
const handleSubmit = async (values, { setSubmitting }) => {
  try {
    const response = await createScheme({ ...values, editor_id: 1 }); // ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∏–º—á–∞—Å–æ–≤–æ 1
    setOpenModal(false);
    router.push(`/editor/${response.scheme_id}`); // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞ —Ä–µ–¥–∞–∫—Ç–æ—Ä
  } catch (error) {
    console.error("Error creating scheme:", error);
  } finally {
    setSubmitting(false);
  }
};
```
üìå **–†–µ–¥–∏—Ä–µ–∫—Ç:** –ü—ñ—Å–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ö–µ–º–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î—Ç—å—Å—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É `/editor/[schemeId]`, –¥–µ –±—É–¥–µ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–∞ –Ω–æ–≤–∞ —Å—Ö–µ–º–∞.

---

## **üìå –©–æ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ?**
‚úÖ **–ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ—ó —Å—Ö–µ–º–∏"**  
‚úÖ **–í–∞–ª—ñ–¥–∞—Ü—ñ—è —Ñ–æ—Ä–º–∏ —á–µ—Ä–µ–∑ Yup**  
‚úÖ **–§—É–Ω–∫—Ü—ñ—è `createScheme` –≤ API Next.js**  
‚úÖ **–í—ñ–¥–ø—Ä–∞–≤–∫–∞ POST-–∑–∞–ø–∏—Ç—É –¥–æ API**  
‚úÖ **–û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É —Å—Ö–µ–º –ø—ñ—Å–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è**  
‚úÖ **–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É Editor –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è**  

---

## **üìå –©–æ –¥–∞–ª—ñ?**
1. **–†–µ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ `/editor/[schemeId]`**  
   - –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å—Ö–µ–º–∏ –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è.  
   - –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ –ë–î.  
   - –î–æ–¥–∞–≤–∞–Ω–Ω—è —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ —Å—Ö–µ–º.  
2. **–î–æ–¥–∞–≤–∞–Ω–Ω—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ä–æ–ª–µ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞** (—â–æ–± –ª–∏—à–µ `editor` –º—ñ–≥ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ —Å—Ö–µ–º–∏).  

–ì–æ—Ç–æ–≤–∏–π —Ä–æ–∑—à–∏—Ä—é–≤–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª! üöÄ