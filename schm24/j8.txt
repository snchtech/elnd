–¢–≤—ñ–π –∫–æ–¥ –≤–∏–≥–ª—è–¥–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –∞–ª–µ –ø—Ä–æ–±–ª–µ–º–∞, –π–º–æ–≤—ñ—Ä–Ω–æ, –ø–æ–ª—è–≥–∞—î —É —Ç–∏–ø—ñ –¥–∞–Ω–∏—Ö, —è–∫—ñ –ø–æ–≤–µ—Ä—Ç–∞—î `oracledb`. 

## üîç **–ú–æ–∂–ª–∏–≤—ñ –ø—Ä–∏—á–∏–Ω–∏ —Ç–∞ —Ä—ñ—à–µ–Ω–Ω—è:**

### 1Ô∏è‚É£ **–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–∏—Ö—ñ–¥–Ω–∏—Ö –¥–∞–Ω–∏—Ö**
–ü–µ—Ä—à –∑–∞ –≤—Å–µ, –ø–æ–¥–∏–≤–∏—Å—è, —â–æ —Å–∞–º–µ –ø–æ–≤–µ—Ä—Ç–∞—î `console.log(result);`:
```js
console.log(result);
console.log(result.rows);
console.log(result.metaData);
```
–Ø–∫—â–æ `color`, `class` –∞–±–æ `url` –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —É —Ñ–æ—Ä–º–∞—Ç—ñ `BLOB`, —Ç–æ –≤–æ–Ω–∏ –±—É–¥—É—Ç—å –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω—ñ —è–∫ `Buffer` –∑–∞–º—ñ—Å—Ç—å `string`.

---

### 2Ô∏è‚É£ **–í–∫–ª—é—á–µ–Ω–Ω—è `outFormat: oracledb.OUT_FORMAT_OBJECT`**
–ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º `oracledb.execute` –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤–∏ (`rows` —è–∫ `[[val1, val2, ...]]`). –©–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ —É –≤–∏–≥–ª—è–¥—ñ –æ–±'—î–∫—Ç—ñ–≤ (`[{appid: 3, param1: "...", ...}]`), –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∏ `outFormat: oracledb.OUT_FORMAT_OBJECT`:
```js
const result = await connection.execute(`
  SELECT
    appid,
    param1,
    param2,
    param3,
    color,
    class,
    url
  FROM your_data_view
  WHERE appid = 3
`, [], { outFormat: oracledb.OUT_FORMAT_OBJECT });

console.log(result);
return result.rows;
```
–Ø–∫—â–æ —Ç–∞–∫ –∑—Ä–æ–±–∏—Ç–∏, –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –±—É–¥–µ –ø–µ—Ä–µ—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ `rows` –≤—Ä—É—á–Ω—É.

---

### 3Ô∏è‚É£ **–ü–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è `BLOB` —É `VARCHAR` —É SQL-–∑–∞–ø–∏—Ç—ñ**
–Ø–∫—â–æ `color`, `class` –∞–±–æ `url` —î `BLOB`, —Ç–æ —É SQL-–∑–∞–ø–∏—Ç—ñ —è–≤–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç—É–π —ó—Ö —É `VARCHAR`:
```sql
SELECT
  appid,
  param1,
  param2,
  param3,
  TO_CHAR(color) AS color,
  TO_CHAR(class) AS class,
  TO_CHAR(url) AS url
FROM your_data_view
WHERE appid = 3
```
–ê–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π `DBMS_LOB.SUBSTR`:
```sql
SELECT
  appid,
  param1,
  param2,
  param3,
  DBMS_LOB.SUBSTR(color, 4000, 1) AS color,
  DBMS_LOB.SUBSTR(class, 4000, 1) AS class,
  DBMS_LOB.SUBSTR(url, 4000, 1) AS url
FROM your_data_view
WHERE appid = 3
```
–¶–µ –¥–æ–∑–≤–æ–ª–∏—Ç—å —É–Ω–∏–∫–Ω—É—Ç–∏ –ø—Ä–æ–±–ª–µ–º–∏ –∑ `BLOB`.

---

### 4Ô∏è‚É£ **–ü–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è `BLOB` —É `string` —É Node.js**
–Ø–∫—â–æ —Ç–∏ –≤–∂–µ –æ—Ç—Ä–∏–º–∞–≤ `Buffer`, –ø–µ—Ä–µ—Ç–≤–æ—Ä–∏ –π–æ–≥–æ —É `string`:
```js
const data = result.rows.map(row => ({
  appid: row[0],
  param1: row[1],
  param2: row[2],
  param3: row[3],
  color: row[4] instanceof Buffer ? row[4].toString('utf8') : row[4],
  class: row[5] instanceof Buffer ? row[5].toString('utf8') : row[5],
  url: row[6] instanceof Buffer ? row[6].toString('utf8') : row[6]
}));
```

---

## ‚úÖ **–©–æ —Ä–æ–±–∏—Ç–∏ –¥–∞–ª—ñ?**
1. –î–æ–¥–∞–π `console.log(result);` —ñ –ø–µ—Ä–µ–≤—ñ—Ä, —â–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç—å.
2. –î–æ–¥–∞–π `outFormat: oracledb.OUT_FORMAT_OBJECT`, —â–æ–± –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –¥–∞–Ω—ñ —É –≤–∏–≥–ª—è–¥—ñ –æ–±'—î–∫—Ç—ñ–≤.
3. –Ø–∫—â–æ `color`, `class` –∞–±–æ `url` –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —è–∫ `BLOB`, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π `TO_CHAR` –∞–±–æ `DBMS_LOB.SUBSTR` —É SQL.
4. –Ø–∫—â–æ –≤ `Node.js` –ø—Ä–∏—Ö–æ–¥–∏—Ç—å `Buffer`, –∫–æ–Ω–≤–µ—Ä—Ç—É–π –π–æ–≥–æ —á–µ—Ä–µ–∑ `.toString('utf8')`.

–Ø–∫—â–æ –ø—ñ—Å–ª—è —Ü—å–æ–≥–æ –ø—Ä–æ–±–ª–µ–º–∞ –∑–∞–ª–∏—à–∏—Ç—å—Å—è, —Å–∫–∏–Ω—å, —â–æ —Å–∞–º–µ –ø–æ–≤–µ—Ä—Ç–∞—î `console.log(result);`, —ñ —è –¥–æ–ø–æ–º–æ–∂—É —Ä–æ–∑—ñ–±—Ä–∞—Ç–∏—Å—è! üöÄ