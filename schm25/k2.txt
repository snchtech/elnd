### **–û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–¥—É —Å—Ç–æ—Ä—ñ–Ω–∫–∏ `/albums` –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ –Ω–æ–≤–∏—Ö –∑–º—ñ–Ω —É MUI**  

#### **üìå –û–Ω–æ–≤–ª–µ–Ω–Ω—è 1: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è `import { TreeView, TreeItem } from "@mui/x-tree-view";`**
MUI –ø–µ—Ä–µ–Ω—ñ—Å `TreeView` —É –Ω–æ–≤–∏–π –ø–∞–∫–µ—Ç **`@mui/x-tree-view`**, —Ç–æ–º—É —Ç–µ–ø–µ—Ä –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏:
```javascript
import { TreeView, TreeItem } from "@mui/x-tree-view";
```

#### **üìå –û–Ω–æ–≤–ª–µ–Ω–Ω—è 2: `Grid` —î –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏–º (deprecated)**
–í **MUI v6** –∫–æ–º–ø–æ–Ω–µ–Ω—Ç `Grid` –∑–∞–º—ñ–Ω–∏–ª–∏ –Ω–∞ **`Box` + `CSS Grid`** –∞–±–æ –Ω–∞ **`Stack`** –¥–ª—è –±—ñ–ª—å—à–æ—ó –≥–Ω—É—á–∫–æ—Å—Ç—ñ.  
–ó–∞–º—ñ–Ω–∏–º–æ `Grid` –Ω–∞ `Box` –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Ç–∞ `Stack` –¥–ª—è –≥–Ω—É—á–∫–∏—Ö —Å–µ–∫—Ü—ñ–π.

---

## **üîπ –û–Ω–æ–≤–ª–µ–Ω–∏–π –∫–æ–¥ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ `/albums.tsx`**
```javascript
import { useEffect, useState } from "react";
import { useRouter } from "next/router";
import { fetchDepartments, fetchUnits, fetchAlbums, fetchSchemes, fetchAlbumStatuses, fetchRecentChanges } from "@/utils/api";
import { Container, Box, Stack, Button, TextField, MenuItem, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, IconButton } from "@mui/material";
import { Add, Print, Visibility, Edit, Delete, Description, ExpandMore, ChevronRight } from "@mui/icons-material";
import { TreeView, TreeItem } from "@mui/x-tree-view";

export default function AlbumsPage() {
  const router = useRouter();
  const { mode } = router.query;
  const [departments, setDepartments] = useState([]);
  const [units, setUnits] = useState([]);
  const [albums, setAlbums] = useState([]);
  const [schemes, setSchemes] = useState([]);
  const [statuses, setStatuses] = useState([]);
  const [recentChanges, setRecentChanges] = useState([]);
  const [expanded, setExpanded] = useState([]); // –ö–æ–Ω—Ç—Ä–æ–ª—å —Ä–æ–∑–∫—Ä–∏—Ç—Ç—è –≥—ñ–ª–æ–∫

  useEffect(() => {
    async function loadData() {
      setDepartments(await fetchDepartments());
      setUnits(await fetchUnits());
      setAlbums(await fetchAlbums());
      setSchemes(await fetchSchemes());
      setStatuses(await fetchAlbumStatuses());
      setRecentChanges(await fetchRecentChanges());
    }
    loadData();
  }, []);

  // –§—É–Ω–∫—Ü—ñ—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–µ—Ä–µ–≤–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
  const buildTree = () => {
    return departments.map((department) => {
      const departmentAlbums = albums.filter(album => album.department_id === department.id);
      
      return (
        <TreeItem key={department.id} nodeId={`dep-${department.id}`} label={department.name}>
          {departmentAlbums.map(album => {
            const albumSchemes = schemes.filter(scheme => scheme.album_id === album.id);
            
            return (
              <TreeItem 
                key={album.id} 
                nodeId={`album-${album.id}`} 
                label={`${album.name} ${albumSchemes.length > 0 ? "+" : ""}`}
              >
                {albumSchemes.map(scheme => (
                  <TreeItem key={scheme.id} nodeId={`scheme-${scheme.id}`} label={scheme.name} />
                ))}
              </TreeItem>
            );
          })}
        </TreeItem>
      );
    });
  };

  return (
    <Container maxWidth="xl">
      <Box display="flex" gap={3}>

        {/* –õ—ñ–≤–∞ –ø–∞–Ω–µ–ª—å (–¥–µ—Ä–µ–≤–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó) */}
        <Box width="25%">
          <Paper sx={{ padding: 2 }}>
            <h3>–ù–∞–≤—ñ–≥–∞—Ü—ñ—è</h3>
            <TreeView
              defaultCollapseIcon={<ExpandMore />}
              defaultExpandIcon={<ChevronRight />}
              expanded={expanded}
              onNodeToggle={(event, nodeIds) => setExpanded(nodeIds)}
            >
              {buildTree()}
            </TreeView>
          </Paper>
        </Box>

        {/* –û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
        <Box flex={1}>

          {/* –í–µ—Ä—Ö–Ω—è –ø–∞–Ω–µ–ª—å */}
          <Stack direction="row" spacing={2} alignItems="center">
            <TextField label="–ü–æ—à—É–∫" variant="outlined" fullWidth />
            {mode === "editor" && (
              <Button variant="contained" color="success" startIcon={<Add />}>
                –ù–æ–≤–∏–π –∞–ª—å–±–æ–º
              </Button>
            )}
          </Stack>

          {/* –§—ñ–ª—å—Ç—Ä–∏ */}
          <Stack direction="row" spacing={2} mt={2}>
            <TextField select label="–í—ñ–¥–¥—ñ–ª" fullWidth>
              {departments.map((dep) => (
                <MenuItem key={dep.id} value={dep.id}>{dep.name}</MenuItem>
              ))}
            </TextField>
            <TextField select label="–ü—ñ–¥—Ä–æ–∑–¥—ñ–ª" fullWidth>
              {units.map((unit) => (
                <MenuItem key={unit.id} value={unit.id}>{unit.name}</MenuItem>
              ))}
            </TextField>
          </Stack>

          {/* –¢–∞–±–ª–∏—Ü—è –∞–ª—å–±–æ–º—ñ–≤ */}
          <TableContainer component={Paper} sx={{ mt: 2 }}>
            <Table>
              <TableHead>
                <TableRow>
                  <TableCell>ID</TableCell>
                  <TableCell>–í—ñ–¥–¥—ñ–ª</TableCell>
                  <TableCell>Unit</TableCell>
                  <TableCell>–ù–∞–∑–≤–∞</TableCell>
                  <TableCell>–û–ø–∏—Å</TableCell>
                  <TableCell>–î–∞—Ç–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è</TableCell>
                  <TableCell>–°—Ç–∞—Ç—É—Å</TableCell>
                  <TableCell>–î—ñ—ó</TableCell>
                </TableRow>
              </TableHead>
              <TableBody>
                {albums.map((album) => (
                  <TableRow key={album.id}>
                    <TableCell>{album.id}</TableCell>
                    <TableCell>{album.department_name}</TableCell>
                    <TableCell>{album.unit_name}</TableCell>
                    <TableCell>{album.name}</TableCell>
                    <TableCell>{album.description}</TableCell>
                    <TableCell>{album.date_update || album.date_create}</TableCell>
                    <TableCell>{statuses.find((s) => s.id === album.status_id)?.name}</TableCell>
                    <TableCell>
                      <IconButton color="primary"><Print /></IconButton>
                      <IconButton color="secondary"><Description /></IconButton>
                      {mode === "viewer" && <IconButton color="info"><Visibility /></IconButton>}
                      {mode === "editor" && <>
                        <IconButton color="warning"><Edit /></IconButton>
                        <IconButton color="error"><Delete /></IconButton>
                      </>}
                    </TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
          </TableContainer>

          {/* –ë–ª–æ–∫ –æ—Å—Ç–∞–Ω–Ω—ñ—Ö –∑–º—ñ–Ω */}
          <Paper sx={{ mt: 2, padding: 2 }}>
            <h3>–û—Å—Ç–∞–Ω–Ω—ñ 5 –∑–º—ñ–Ω</h3>
            <TableContainer>
              <Table>
                <TableHead>
                  <TableRow>
                    <TableCell>–î–∞—Ç–∞</TableCell>
                    <TableCell>ID</TableCell>
                    <TableCell>–í—ñ–¥–¥—ñ–ª</TableCell>
                    <TableCell>Unit</TableCell>
                    <TableCell>–ù–∞–∑–≤–∞</TableCell>
                    <TableCell>–ó–º—ñ–Ω–∏ –≤–∏–∫–æ–Ω–∞–≤</TableCell>
                  </TableRow>
                </TableHead>
                <TableBody>
                  {recentChanges.map((change) => (
                    <TableRow key={change.id}>
                      <TableCell>{change.date}</TableCell>
                      <TableCell>{change.album_id}</TableCell>
                      <TableCell>{change.department_name}</TableCell>
                      <TableCell>{change.unit_name}</TableCell>
                      <TableCell>{change.name}</TableCell>
                      <TableCell>{change.editor_name}</TableCell>
                    </TableRow>
                  ))}
                </TableBody>
              </Table>
            </TableContainer>
          </Paper>

        </Box>
      </Box>
    </Container>
  );
}
```

---

## **üîπ –©–æ –æ–Ω–æ–≤–ª–µ–Ω–æ?**
‚úÖ **–ó–∞–º—ñ–Ω–∏–≤ `Grid` –Ω–∞ `Box` —ñ `Stack`** (—Å—É—á–∞—Å–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥ —É MUI).  
‚úÖ **–û–Ω–æ–≤–∏–≤ `TreeView` –¥–æ `@mui/x-tree-view`** (—É—Å—É–Ω—É–≤ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è –ø—Ä–æ –∑–∞—Å—Ç–∞—Ä—ñ–ª—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏).  
‚úÖ **–î–æ–¥–∞–≤ `sx` (—Å—Ç–∏–ª—ñ —á–µ—Ä–µ–∑ MUI) –¥–ª—è –ø–æ–∫—Ä–∞—â–µ–Ω–æ—ó –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—ñ**.  

–¢–µ–ø–µ—Ä –∫–æ–¥ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –æ—Å—Ç–∞–Ω–Ω—ñ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º **Material-UI v6+**. üöÄ