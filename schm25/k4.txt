–û—Å—å –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥ –¥–æ **–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–Ω–æ–≥–æ –æ–±'—î–¥–Ω–∞–Ω–Ω—è** –∫–æ–¥—É —Å—Ç–æ—Ä—ñ–Ω–∫–∏ **`albums.js`** —ñ —Å–ø–ª–∏–≤–∞—é—á–æ–≥–æ –≤—ñ–∫–Ω–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –∞–ª—å–±–æ–º—É –≤ **Next.js**.

---

## **üìå –ó–∞–≥–∞–ª—å–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥**
‚úÖ **–í–∏–Ω–µ—Å–µ–º–æ –¥–µ—Ä–µ–≤–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó** –≤ –æ–∫—Ä–µ–º–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç `NavigationTree.js`.  
‚úÖ **–í–∏–Ω–µ—Å–µ–º–æ –ø–æ—à—É–∫** –≤ –æ–∫—Ä–µ–º–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç `SearchBar.js`.  
‚úÖ **–§–æ—Ä–º—É —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –∞–ª—å–±–æ–º—É** –≤–∏–Ω–µ—Å–µ–º–æ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç `NewAlbumModal.js`.  
‚úÖ **–û–Ω–æ–≤–∏–º–æ `albums.js`**, —â–æ–± –æ–±‚Äô—î–¥–Ω–∞—Ç–∏ –≤—Å—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏.

---

## **üîπ 1. –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç `NavigationTree.js`**
–¶–µ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—è –Ω–µ —Ç—ñ–ª—å–∫–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ `/albums`, –∞–ª–µ –π —É –ø–µ—Ä–µ–≥–ª—è–¥—ñ —Å—Ö–µ–º `/albums/[albumId]`.

### üìÅ **`components/NavigationTree.js`**
```javascript
import { useEffect, useState } from "react";
import { TreeView, TreeItem } from "@mui/x-tree-view";
import { ExpandMore, ChevronRight } from "@mui/icons-material";
import { fetchDepartments, fetchAlbums, fetchSchemes } from "@/utils/api";

export default function NavigationTree() {
  const [departments, setDepartments] = useState([]);
  const [albums, setAlbums] = useState([]);
  const [schemes, setSchemes] = useState([]);
  const [expanded, setExpanded] = useState([]);

  useEffect(() => {
    async function loadData() {
      setDepartments(await fetchDepartments());
      setAlbums(await fetchAlbums());
      setSchemes(await fetchSchemes());
    }
    loadData();
  }, []);

  const buildTree = () => {
    return departments.map((department) => {
      const departmentAlbums = albums.filter(album => album.department_id === department.id);

      return (
        <TreeItem key={department.id} nodeId={`dep-${department.id}`} label={department.name}>
          {departmentAlbums.map(album => {
            const albumSchemes = schemes.filter(scheme => scheme.album_id === album.id);

            return (
              <TreeItem 
                key={album.id} 
                nodeId={`album-${album.id}`} 
                label={`${album.name} ${albumSchemes.length > 0 ? "+" : ""}`}
              >
                {albumSchemes.map(scheme => (
                  <TreeItem key={scheme.id} nodeId={`scheme-${scheme.id}`} label={scheme.name} />
                ))}
              </TreeItem>
            );
          })}
        </TreeItem>
      );
    });
  };

  return (
    <TreeView
      defaultCollapseIcon={<ExpandMore />}
      defaultExpandIcon={<ChevronRight />}
      expanded={expanded}
      onNodeToggle={(event, nodeIds) => setExpanded(nodeIds)}
    >
      {buildTree()}
    </TreeView>
  );
}
```

---

## **üîπ 2. –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç `SearchBar.js`**
–¶–µ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ç–∞–∫–æ–∂ –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –Ω–∞ —ñ–Ω—à–∏—Ö —Å—Ç–æ—Ä—ñ–Ω–∫–∞—Ö.

### üìÅ **`components/SearchBar.js`**
```javascript
import { TextField } from "@mui/material";

export default function SearchBar({ placeholder, onSearch }) {
  return (
    <TextField 
      label={placeholder || "–ü–æ—à—É–∫"} 
      variant="outlined" 
      fullWidth 
      onChange={(e) => onSearch(e.target.value)}
    />
  );
}
```

---

## **üîπ 3. –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç `NewAlbumModal.js`**
–¶–µ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—è –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è —Ñ–æ—Ä–º–∏ **—Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –∞–ª—å–±–æ–º—É**.

### üìÅ **`components/NewAlbumModal.js`**
```javascript
import { useState, useEffect } from "react";
import { Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, MenuItem } from "@mui/material";
import { Formik, Form, Field } from "formik";
import * as Yup from "yup";
import { fetchDepartments, fetchUnits, createAlbum } from "@/utils/api";

export default function NewAlbumModal({ open, onClose, onAlbumCreated }) {
  const [departments, setDepartments] = useState([]);
  const [units, setUnits] = useState([]);

  useEffect(() => {
    async function loadData() {
      setDepartments(await fetchDepartments());
      setUnits(await fetchUnits());
    }
    loadData();
  }, []);

  const validationSchema = Yup.object().shape({
    name: Yup.string().required("–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É"),
    depart_id: Yup.number().required("–û–±–µ—Ä—ñ—Ç—å –≤—ñ–¥–¥—ñ–ª"),
    unit_id: Yup.number().required("–û–±–µ—Ä—ñ—Ç—å –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª"),
  });

  const handleSubmit = async (values, { setSubmitting, resetForm }) => {
    try {
      await createAlbum({ ...values, creator_id: 1 }); // ID —Ç–∏–º—á–∞—Å–æ–≤–æ 1
      onClose();
      onAlbumCreated();
      resetForm();
    } catch (error) {
      console.error("Error creating album:", error);
    } finally {
      setSubmitting(false);
    }
  };

  return (
    <Dialog open={open} onClose={onClose}>
      <DialogTitle>–ù–æ–≤–∏–π –∞–ª—å–±–æ–º</DialogTitle>
      <Formik initialValues={{ name: "", depart_id: "", unit_id: "", description: "" }} validationSchema={validationSchema} onSubmit={handleSubmit}>
        {({ isSubmitting, errors, touched }) => (
          <Form>
            <DialogContent>
              <Field as={TextField} select label="–í—ñ–¥–¥—ñ–ª" name="depart_id" fullWidth error={touched.depart_id && !!errors.depart_id} helperText={touched.depart_id && errors.depart_id}>
                {departments.map(dep => (
                  <MenuItem key={dep.id} value={dep.id}>{dep.name}</MenuItem>
                ))}
              </Field>
              <Field as={TextField} select label="–ü—ñ–¥—Ä–æ–∑–¥—ñ–ª" name="unit_id" fullWidth error={touched.unit_id && !!errors.unit_id} helperText={touched.unit_id && errors.unit_id}>
                {units.map(unit => (
                  <MenuItem key={unit.id} value={unit.id}>{unit.name}</MenuItem>
                ))}
              </Field>
              <Field as={TextField} label="–ù–∞–∑–≤–∞" name="name" fullWidth error={touched.name && !!errors.name} helperText={touched.name && errors.name} />
              <Field as={TextField} label="–û–ø–∏—Å" name="description" fullWidth multiline rows={3} />
            </DialogContent>
            <DialogActions>
              <Button onClick={onClose} color="secondary">–°–∫–∞—Å—É–≤–∞—Ç–∏</Button>
              <Button type="submit" color="primary" variant="contained" disabled={isSubmitting}>–î–æ–¥–∞—Ç–∏</Button>
            </DialogActions>
          </Form>
        )}
      </Formik>
    </Dialog>
  );
}
```

---

## **üîπ 4. –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ `albums.js`**
### üìÅ **`pages/albums.js`**
```javascript
import { useEffect, useState } from "react";
import { useRouter } from "next/router";
import { fetchAlbums } from "@/utils/api";
import { Container, Box, Stack, Button, Paper } from "@mui/material";
import { Add } from "@mui/icons-material";
import NavigationTree from "@/components/NavigationTree";
import SearchBar from "@/components/SearchBar";
import NewAlbumModal from "@/components/NewAlbumModal";

export default function AlbumsPage() {
  const router = useRouter();
  const { mode } = router.query;
  const [albums, setAlbums] = useState([]);
  const [openModal, setOpenModal] = useState(false);

  useEffect(() => {
    async function loadData() {
      setAlbums(await fetchAlbums());
    }
    loadData();
  }, []);

  return (
    <Container maxWidth="xl">
      <Box display="flex" gap={3}>
        {/* –õ—ñ–≤–∞ –ø–∞–Ω–µ–ª—å */}
        <Box width="25%">
          <Paper sx={{ padding: 2 }}>
            <h3>–ù–∞–≤—ñ–≥–∞—Ü—ñ—è</h3>
            <NavigationTree />
          </Paper>
        </Box>

        {/* –û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
        <Box flex={1}>
          <Stack direction="row" spacing={2} alignItems="center">
            <SearchBar placeholder="–ü–æ—à—É–∫ –∞–ª—å–±–æ–º—ñ–≤" />
            {mode === "editor" && (
              <Button variant="contained" color="success" startIcon={<Add />} onClick={() => setOpenModal(true)}>
                –ù–æ–≤–∏–π –∞–ª—å–±–æ–º
              </Button>
            )}
          </Stack>

          {/* –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ */}
          <NewAlbumModal open={openModal} onClose={() => setOpenModal(false)} onAlbumCreated={() => setAlbums(fetchAlbums())} />
        </Box>
      </Box>
    </Container>
  );
}
```

---

## **üìå –í–∏—Å–Ω–æ–≤–æ–∫**
‚úÖ **–ö–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ —Ä–æ–∑–¥—ñ–ª–µ–Ω–æ –ª–æ–≥—ñ—á–Ω–æ**.  
‚úÖ **–ö–æ–¥ —Å—Ç–∞–≤ –±—ñ–ª—å—à —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω–∏–º —Ç–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–Ω–∏–º**.  
‚úÖ **–û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –∞–ª—å–±–æ–º—ñ–≤ –ø—ñ—Å–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ**.  

üöÄ **–ì–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –Ω–∞ —ñ–Ω—à–∏—Ö —Å—Ç–æ—Ä—ñ–Ω–∫–∞—Ö!**