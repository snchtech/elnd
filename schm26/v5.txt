–©–æ–± –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –∫–Ω–æ–ø–∫–∏ **Edit** –≤—ñ–¥–∫—Ä–∏–≤–∞–ª–æ—Å—è –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∑ –¥–∞–Ω–∏–º–∏ –≤–∏–±—Ä–∞–Ω–æ–≥–æ –∞–ª—å–±–æ–º—É, –ø–æ—Ç—Ä—ñ–±–Ω–æ:
1. **–î–æ–¥–∞—Ç–∏ —Å—Ç–∞–Ω –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤–∏–±—Ä–∞–Ω–æ–≥–æ –∞–ª—å–±–æ–º—É**.
2. **–ü—Ä–∏ –∫–ª—ñ–∫—É –Ω–∞ "Edit" –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ –¥–∞–Ω—ñ –≤–∏–±—Ä–∞–Ω–æ–≥–æ –∞–ª—å–±–æ–º—É —É –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ**.
3. **–û–Ω–æ–≤–∏—Ç–∏ `NewAlbumModal.js`, —â–æ–± –≤—ñ–Ω –ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞–≤ —Ä–µ–∂–∏–º —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è**.

---

### **üìå 1. –û–Ω–æ–≤–ª–µ–Ω–Ω—è `AlbumsPage.js`**
–î–æ–¥–∞—î–º–æ **—Å—Ç–∞–Ω –¥–ª—è —Ä–µ–¥–∞–≥–æ–≤–∞–Ω–æ–≥–æ –∞–ª—å–±–æ–º—É** —ñ —Ñ—É–Ω–∫—Ü—ñ—é **–≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞**.

```javascript
import { useEffect, useState } from "react";
import { useRouter } from "next/router";
import { fetchDepartments, fetchUnits, fetchAlbums, fetchSchemes, fetchAlbumStatuses, fetchRecentChanges } from "@/utils/api";
import { Container, Box, Stack, Button, TextField, MenuItem, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, IconButton } from "@mui/material";
import { Add, Print, Visibility, Edit, Delete, Description } from "@mui/icons-material";
import NewAlbumModal from "@/components/NewAlbumModal";

export default function AlbumsPage() {
  const router = useRouter();
  const { mode } = router.query;
  const [albums, setAlbums] = useState([]);
  const [departments, setDepartments] = useState([]);
  const [units, setUnits] = useState([]);
  const [statuses, setStatuses] = useState([]);
  const [recentChanges, setRecentChanges] = useState([]);
  const [selectedAlbum, setSelectedAlbum] = useState(null); // –°—Ç–∞–Ω –¥–ª—è —Ä–µ–¥–∞–≥–æ–≤–∞–Ω–æ–≥–æ –∞–ª—å–±–æ–º—É
  const [isModalOpen, setIsModalOpen] = useState(false); // –°—Ç–∞–Ω –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞

  useEffect(() => {
    async function loadData() {
      setDepartments(await fetchDepartments());
      setUnits(await fetchUnits());
      setAlbums(await fetchAlbums());
      setStatuses(await fetchAlbumStatuses());
      setRecentChanges(await fetchRecentChanges());
    }
    loadData();
  }, []);

  const handleEditClick = (album) => {
    setSelectedAlbum(album); // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤–∏–±—Ä–∞–Ω–∏–π –∞–ª—å–±–æ–º
    setIsModalOpen(true); // –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
  };

  return (
    <Container maxWidth="xl">
      <Box>
        <TableContainer component={Paper}>
          <Table>
            <TableHead>
              <TableRow>
                <TableCell>ID</TableCell>
                <TableCell>–ù–∞–∑–≤–∞</TableCell>
                <TableCell>–û–ø–∏—Å</TableCell>
                <TableCell>–î–∞—Ç–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è</TableCell>
                <TableCell>–°—Ç–∞—Ç—É—Å</TableCell>
                <TableCell>–î—ñ—ó</TableCell>
              </TableRow>
            </TableHead>
            <TableBody>
              {albums.map((album) => (
                <TableRow key={album.id}>
                  <TableCell>{album.id}</TableCell>
                  <TableCell>{album.name}</TableCell>
                  <TableCell>{album.description}</TableCell>
                  <TableCell>{album.date_update || album.date_create}</TableCell>
                  <TableCell>{statuses.find((s) => s.id === album.status_id)?.name}</TableCell>
                  <TableCell>
                    <IconButton color="warning" onClick={() => handleEditClick(album)}>
                      <Edit />
                    </IconButton>
                    <IconButton color="error">
                      <Delete />
                    </IconButton>
                  </TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
        </TableContainer>
      </Box>

      {/* –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è/—Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∞–ª—å–±–æ–º—É */}
      <NewAlbumModal
        open={isModalOpen}
        onClose={() => setIsModalOpen(false)}
        onAlbumCreated={() => setAlbums([...albums])} // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –ø—ñ—Å–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è
        album={selectedAlbum} // –ü–µ—Ä–µ–¥–∞—î–º–æ –≤–∏–±—Ä–∞–Ω–∏–π –∞–ª—å–±–æ–º
      />
    </Container>
  );
}
```
‚úÖ **–©–æ –º–∏ –¥–æ–¥–∞–ª–∏?**
- `selectedAlbum` ‚Äì —Å—Ç–∞–Ω –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤–∏–±—Ä–∞–Ω–æ–≥–æ –∞–ª—å–±–æ–º—É.
- `handleEditClick(album)` ‚Äì —Ñ—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –≤—ñ–¥–∫—Ä–∏–≤–∞—î –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ —Ç–∞ –ø–µ—Ä–µ–¥–∞—î –∞–ª—å–±–æ–º –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è.
- –ü–µ—Ä–µ–¥–∞—î–º–æ `album={selectedAlbum}` —É `NewAlbumModal`, —â–æ–± —Ç—É–¥–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–∏—Å—å –ø–æ—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ.

---

### **üìå 2. –û–Ω–æ–≤–ª–µ–Ω–Ω—è `NewAlbumModal.js` –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è**
–¢–µ–ø–µ—Ä, —è–∫—â–æ `album` –ø–µ—Ä–µ–¥–∞–Ω–æ, –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –ø—Ä–∞—Ü—é—î –≤ —Ä–µ–∂–∏–º—ñ **—Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è**.

```javascript
import { useState, useEffect } from "react";
import { Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, MenuItem } from "@mui/material";
import { Formik, Form, Field } from "formik";
import * as Yup from "yup";
import { fetchDepartments, fetchUnits, createAlbum, updateAlbum } from "@/utils/api";

export default function NewAlbumModal({ open, onClose, onAlbumCreated, album }) {
  const [departments, setDepartments] = useState([]);
  const [units, setUnits] = useState([]);

  useEffect(() => {
    async function loadData() {
      setDepartments(await fetchDepartments());
      setUnits(await fetchUnits());
    }
    loadData();
  }, []);

  const validationSchema = Yup.object().shape({
    name: Yup.string().required("–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É"),
    depart_id: Yup.number().required("–û–±–µ—Ä—ñ—Ç—å –≤—ñ–¥–¥—ñ–ª"),
    unit_id: Yup.number().required("–û–±–µ—Ä—ñ—Ç—å –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª"),
  });

  const handleSubmit = async (values, { setSubmitting, resetForm }) => {
    try {
      if (album) {
        // –Ø–∫—â–æ —Ä–µ–¥–∞–≥—É—î–º–æ —ñ—Å–Ω—É—é—á–∏–π –∞–ª—å–±–æ–º
        await updateAlbum(album.id, values);
      } else {
        // –Ø–∫—â–æ —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π –∞–ª—å–±–æ–º
        await createAlbum({ ...values, creator_id: 1 });
      }

      onClose();
      onAlbumCreated();
      resetForm();
    } catch (error) {
      console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –∞–ª—å–±–æ–º—É:", error);
    } finally {
      setSubmitting(false);
    }
  };

  return (
    <Dialog open={open} onClose={onClose}>
      <DialogTitle>{album ? "–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∞–ª—å–±–æ–º—É" : "–ù–æ–≤–∏–π –∞–ª—å–±–æ–º"}</DialogTitle>
      <Formik
        initialValues={{
          name: album?.name || "",
          depart_id: album?.depart_id || "",
          unit_id: album?.unit_id || "",
          description: album?.description || "",
        }}
        validationSchema={validationSchema}
        onSubmit={handleSubmit}
        enableReinitialize
      >
        {({ isSubmitting, errors, touched }) => (
          <Form>
            <DialogContent>
              <Field as={TextField} select label="–í—ñ–¥–¥—ñ–ª" name="depart_id" fullWidth>
                {departments.map(dep => (
                  <MenuItem key={dep.id} value={dep.id}>{dep.name}</MenuItem>
                ))}
              </Field>
              <Field as={TextField} select label="–ü—ñ–¥—Ä–æ–∑–¥—ñ–ª" name="unit_id" fullWidth>
                {units.map(unit => (
                  <MenuItem key={unit.id} value={unit.id}>{unit.name}</MenuItem>
                ))}
              </Field>
              <Field as={TextField} label="–ù–∞–∑–≤–∞" name="name" fullWidth />
              <Field as={TextField} label="–û–ø–∏—Å" name="description" fullWidth multiline rows={3} />
            </DialogContent>
            <DialogActions>
              <Button onClick={onClose} color="secondary">–°–∫–∞—Å—É–≤–∞—Ç–∏</Button>
              <Button type="submit" color="primary" variant="contained" disabled={isSubmitting}>
                {album ? "–û–Ω–æ–≤–∏—Ç–∏" : "–î–æ–¥–∞—Ç–∏"}
              </Button>
            </DialogActions>
          </Form>
        )}
      </Formik>
    </Dialog>
  );
}
```
‚úÖ **–©–æ –º–∏ –∑—Ä–æ–±–∏–ª–∏?**
- **–Ø–∫—â–æ `album` –ø–µ—Ä–µ–¥–∞–Ω–æ**, —Ç–æ `initialValues` –æ—Ç—Ä–∏–º—É—î **–ø–æ—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ**.
- **–Ø–∫—â–æ `album` –Ω–µ–º–∞—î**, —Ç–æ —Ñ–æ—Ä–º–∞ –ø–æ—Ä–æ–∂–Ω—è (—Ä–µ–∂–∏–º —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è).
- –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ `enableReinitialize`, —â–æ–± —Ñ–æ—Ä–º–∞ **–∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –æ–Ω–æ–≤–ª—é–≤–∞–ª–∞—Å—è –ø—Ä–∏ –∑–º—ñ–Ω—ñ `album`**.

---

### **üìå 3. –û–Ω–æ–≤–ª–µ–Ω–Ω—è API-–∑–∞–ø–∏—Ç—É**
–§–∞–π–ª `api.js`:
```javascript
export const updateAlbum = async (id, data) => {
  const response = await fetch(`/api/albums/${id}`, {
    method: "PUT",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(data),
  });
  return response.json();
};
```

---

### **üöÄ –í–∏—Å–Ω–æ–≤–æ–∫**
‚úÖ –¢–µ–ø–µ—Ä –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ **Edit**, –∞–ª—å–±–æ–º –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è –≤ **–º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ**.  
‚úÖ **–Ø–∫—â–æ `album` —î**, –∫–Ω–æ–ø–∫–∞ –∑–º—ñ–Ω—é—î—Ç—å—Å—è –Ω–∞ **"–û–Ω–æ–≤–∏—Ç–∏"**, —è–∫—â–æ –Ω—ñ ‚Äî –Ω–∞ **"–î–æ–¥–∞—Ç–∏"**.  
‚úÖ **–î–∞–Ω—ñ —Ä–µ–¥–∞–≥—É—é—Ç—å—Å—è –±–µ–∑ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –∑–∞–ø–∏—Å—É!**  

–Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–æ–ø—Ä–∞—Ü—é–≤–∞–Ω–Ω—è ‚Äî –ø–∏—Ç–∞–π! üòä