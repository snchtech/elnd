–û—Å—å –æ–Ω–æ–≤–ª–µ–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç `NavigationTree`, –¥–µ –¥–æ–¥–∞–Ω–æ **–ø–æ—à—É–∫ –ø–æ –¥–µ—Ä–µ–≤—É –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó**.  

üîπ **–©–æ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ?**  
‚úÖ **–Ü–Ω–ø—É—Ç –¥–ª—è –ø–æ—à—É–∫—É** (Material-UI `TextField`).  
‚úÖ **–§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤** –ø–æ **–≤—ñ–¥–¥—ñ–ª—É, –Ω–∞–∑–≤—ñ –∞–ª—å–±–æ–º—É —Ç–∞ –Ω–∞–∑–≤—ñ —Å—Ö–µ–º–∏**.  
‚úÖ **–î–∏–Ω–∞–º—ñ—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–µ—Ä–µ–≤–∞** –ø—Ä–∏ –≤–≤–µ–¥–µ–Ω–Ω—ñ –ø–æ—à—É–∫–æ–≤–æ–≥–æ –∑–∞–ø–∏—Ç—É.  
‚úÖ **–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –¥–µ—Ä–µ–≤–∞** (–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è/—Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è).  

---

### **üìå –û–Ω–æ–≤–ª–µ–Ω–∏–π –∫–æ–¥ `NavigationTree.js`**
```javascript
import { useEffect, useState } from "react";
import { TreeView, TreeItem } from "@mui/x-tree-view";
import { ExpandMore, ChevronRight } from "@mui/icons-material";
import { TextField, Box, Paper } from "@mui/material";
import { fetchDepartments, fetchAlbums, fetchSchemes } from "@/utils/api";

export default function NavigationTree() {
  const [departments, setDepartments] = useState([]);
  const [albums, setAlbums] = useState([]);
  const [schemes, setSchemes] = useState([]);
  const [expanded, setExpanded] = useState([]);
  const [searchQuery, setSearchQuery] = useState("");

  useEffect(() => {
    async function loadData() {
      setDepartments(await fetchDepartments());
      setAlbums(await fetchAlbums());
      setSchemes(await fetchSchemes());
    }
    loadData();
  }, []);

  // –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –¥–µ—Ä–µ–≤–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó –∑–∞ –ø–æ—à—É–∫–æ–≤–∏–º –∑–∞–ø–∏—Ç–æ–º
  const filterTree = (items, search) => {
    if (!search) return items; // –Ø–∫—â–æ –ø–æ—à—É–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ–≤–Ω–µ –¥–µ—Ä–µ–≤–æ
    
    const lowerSearch = search.toLowerCase();

    return items.filter(department => {
      const departmentAlbums = albums.filter(album => {
        const albumSchemes = schemes.filter(scheme =>
          scheme.name.toLowerCase().includes(lowerSearch)
        );

        return (
          album.name.toLowerCase().includes(lowerSearch) ||
          albumSchemes.length > 0
        );
      });

      return (
        department.name.toLowerCase().includes(lowerSearch) ||
        departmentAlbums.length > 0
      );
    });
  };

  const buildTree = () => {
    const filteredDepartments = filterTree(departments, searchQuery);

    return filteredDepartments.map(department => {
      const departmentAlbums = albums.filter(album => album.department_id === department.id);
      const filteredAlbums = departmentAlbums.filter(album =>
        album.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
        schemes.some(scheme => scheme.album_id === album.id && scheme.name.toLowerCase().includes(searchQuery.toLowerCase()))
      );

      return (
        <TreeItem key={department.id} nodeId={`dep-${department.id}`} label={department.name}>
          {filteredAlbums.map(album => {
            const albumSchemes = schemes.filter(scheme => scheme.album_id === album.id && scheme.name.toLowerCase().includes(searchQuery.toLowerCase()));

            return (
              <TreeItem 
                key={album.id} 
                nodeId={`album-${album.id}`} 
                label={`${album.name} ${albumSchemes.length > 0 ? "+" : ""}`}
              >
                {albumSchemes.map(scheme => (
                  <TreeItem key={scheme.id} nodeId={`scheme-${scheme.id}`} label={scheme.name} />
                ))}
              </TreeItem>
            );
          })}
        </TreeItem>
      );
    });
  };

  return (
    <Paper sx={{ padding: 2 }}>
      {/* –ü–æ–ª–µ –ø–æ—à—É–∫—É */}
      <TextField
        label="–ü–æ—à—É–∫ —É –¥–µ—Ä–µ–≤—ñ"
        variant="outlined"
        fullWidth
        margin="dense"
        value={searchQuery}
        onChange={(e) => setSearchQuery(e.target.value)}
      />

      {/* –î–µ—Ä–µ–≤–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó */}
      <TreeView
        defaultCollapseIcon={<ExpandMore />}
        defaultExpandIcon={<ChevronRight />}
        expanded={expanded}
        onNodeToggle={(event, nodeIds) => setExpanded(nodeIds)}
      >
        {buildTree()}
      </TreeView>
    </Paper>
  );
}
```

---

## **üîπ –©–æ –∑—Ä–æ–±–ª–µ–Ω–æ?**
‚úÖ **–î–æ–¥–∞–Ω–æ –ø–æ—à—É–∫** –∑–∞ –≤—ñ–¥–¥—ñ–ª–æ–º, –∞–ª—å–±–æ–º–æ–º —ñ —Å—Ö–µ–º–æ—é.  
‚úÖ **–î–µ—Ä–µ–≤–æ –¥–∏–Ω–∞–º—ñ—á–Ω–æ –æ–Ω–æ–≤–ª—é—î—Ç—å—Å—è** –ø—Ä–∏ –≤–≤–µ–¥–µ–Ω–Ω—ñ –ø–æ—à—É–∫–æ–≤–æ–≥–æ –∑–∞–ø–∏—Ç—É.  
‚úÖ **–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ Material-UI (`TextField`, `Paper`)** –¥–ª—è –∑—Ä—É—á–Ω–æ–≥–æ UI.  
‚úÖ **–ó–±–µ—Ä–µ–∂–µ–Ω–æ –ø–æ–≤–µ–¥—ñ–Ω–∫—É –∑–≥–æ—Ä—Ç–∞–Ω–Ω—è/—Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è –¥–µ—Ä–µ–≤–∞**.  

üîπ **–¢–µ–ø–µ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—ñ–¥—Ç—Ä–∏–º—É—î –ø–æ—à—É–∫ –ø–æ –≤—Å—ñ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ñ!** üöÄ