–£ –≤–∞—à–æ–º—É –∫–æ–¥—ñ —î –∫—ñ–ª—å–∫–∞ –ø–æ–º–∏–ª–æ–∫, —è–∫—ñ –º–æ–∂—É—Ç—å –≤–∏–∫–ª–∏–∫–∞—Ç–∏ `NJS-013: invalid bind direction`. –û—Å—å —ó—Ö —Ä–æ–∑–±—ñ—Ä —ñ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è:

### **1. –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è `params.new_id`**
–í–∏ –ø–µ—Ä–µ–¥–∞—î—Ç–µ `new_id` –≤ `params`, –∞–ª–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–∫–∞–∑–∞–ª–∏ –π–æ–≥–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É. –í `oracledb` –≤–∏ –ø–æ–≤–∏–Ω–Ω—ñ –≤–∫–∞–∑–∞—Ç–∏ `{ dir: oracledb.BIND_OUT, type: oracledb.NUMBER }`, –∞ –Ω–µ `{ dor: 'out', type: 'NUMBER' }`.

#### **–í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è:**
```js
import oracledb from 'oracledb';

const params = {
    name,
    depart_id,
    unit_id,
    description,
    status_id: 1,  // –¥–æ–¥–∞–π—Ç–µ —Å—Ç–∞—Ç—É—Å, —è–∫—â–æ –≤—ñ–Ω —î –≤ —Ç–∞–±–ª–∏—Ü—ñ
    new_id: { dir: oracledb.BIND_OUT, type: oracledb.NUMBER } // –û—Å—å —Ç—É—Ç –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è
};
```

---

### **2. –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è `RETURNING id INTO :new_id`**
–ö–æ–ª–∏ –≤–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç–µ `RETURNING id INTO :new_id`, –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–æ–±–ª—è—Ç–∏ `outBinds` —É –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ.

#### **–í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è**
```js
const resultAlbum = await OracleDBManager.query(dbName, sqlAlbum, params);
const newAlbumID = resultAlbum.outBinds.new_id[0];  // –î—ñ—Å—Ç–∞—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∑ –º–∞—Å–∏–≤—É
```

---

### **3. –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è `catch {}`**
–í–∞—à `catch {}` –ø–æ—Ä–æ–∂–Ω—ñ–π, —Ç–æ–º—É –≤–∏ –Ω–µ –±–∞—á–∏—Ç–µ –ø–æ–º–∏–ª–∫–∏. –ó–∞–≤–∂–¥–∏ –ª–æ–≥—É–π—Ç–µ `error`.

#### **–í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è**
```js
catch (error) {
    console.error("Error creating album:", error);
    res.status(500).json({ success: false, message: "Database error", error });
}
```

---

### **4. –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ `sqlAlbumVersion`**
–£ `sqlAlbumVersion` –≤–∏ –≤—Å—Ç–∞–≤–ª—è—î—Ç–µ `newAlbumID`, –∞–ª–µ –Ω–µ –ø–µ—Ä–µ–¥–∞—î—Ç–µ –π–æ–≥–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ.

#### **–í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è**
```js
const newParams = {
    newAlbumID,
    creator_id,
    new_vers_id: { dir: oracledb.BIND_OUT, type: oracledb.NUMBER }
};

const sqlAlbumVersion = `
    INSERT INTO SCHEME_VERSION (album_id, version_number, is_stable, is_archived, created_at, updated_at, created_by, updated_by, status_id)
    VALUES (:newAlbumID, 1, 1, 0, SYSDATE, SYSDATE, :creator_id, NULL, 1)
    RETURNING id INTO :new_vers_id
`;

const resultAlbumVersion = await OracleDBManager.query(dbName, sqlAlbumVersion, newParams);
const newAlbumVersionID = resultAlbumVersion.outBinds.new_vers_id[0];  // –î—ñ—Å—Ç–∞—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è
```

---

### **5. –û–Ω–æ–≤–ª–µ–Ω–∞ –≤–µ—Ä—Å—ñ—è –∫–æ–¥—É**
```js
import oracledb from 'oracledb';

class AlbumController {
    async createAlbum(req, res, next) {
        const dbName = req.locals.dbName;
        const { name, depart_id, unit_id, description, creator_id } = req.body;

        try {
            const sqlAlbum = `
                INSERT INTO ALBUM (name, depart_id, unit_id, description, status_id)
                VALUES (:name, :depart_id, :unit_id, :description, :status_id)
                RETURNING id INTO :new_id`;

            const params = {
                name,
                depart_id,
                unit_id,
                description,
                status_id: 1,  // –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É
                new_id: { dir: oracledb.BIND_OUT, type: oracledb.NUMBER }
            };

            const resultAlbum = await OracleDBManager.query(dbName, sqlAlbum, params);
            const newAlbumID = resultAlbum.outBinds.new_id[0];

            const sqlAlbumVersion = `
                INSERT INTO SCHEME_VERSION (album_id, version_number, is_stable, is_archived, created_at, updated_at, created_by, updated_by, status_id)
                VALUES (:newAlbumID, 1, 1, 0, SYSDATE, SYSDATE, :creator_id, NULL, 1)
                RETURNING id INTO :new_vers_id`;

            const newParams = {
                newAlbumID,
                creator_id,
                new_vers_id: { dir: oracledb.BIND_OUT, type: oracledb.NUMBER }
            };

            const resultAlbumVersion = await OracleDBManager.query(dbName, sqlAlbumVersion, newParams);
            const newAlbumVersionID = resultAlbumVersion.outBinds.new_vers_id[0];

            res.status(201).json({
                success: true,
                album_id: newAlbumID,
                album_version_id: newAlbumVersionID
            });

        } catch (error) {
            console.error("Error creating album:", error);
            res.status(500).json({ success: false, message: "Database error", error });
        }
    }
}

export default new AlbumController();
```

---

### **6. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ `routes.js`**
```js
import express from 'express';
import AlbumController from './albumController.js';

const router = express.Router();

router.post('/create-album', (req, res, next) => AlbumController.createAlbum(req, res, next));

export default router;
```

---

### **–í–∏—Å–Ω–æ–≤–æ–∫**
–ü—ñ—Å–ª—è —Ü–∏—Ö –≤–∏–ø—Ä–∞–≤–ª–µ–Ω—å:
‚úÖ –í–∏ –∑–º–æ–∂–µ—Ç–µ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ `album` —ñ `scheme_version`.  
‚úÖ `RETURNING INTO` –ø—Ä–∞—Ü—é–≤–∞—Ç–∏–º–µ –∫–æ—Ä–µ–∫—Ç–Ω–æ.  
‚úÖ –ü–æ–º–∏–ª–∫–∏ –±—É–¥—É—Ç—å –ª–æ–≥—É–≤–∞—Ç–∏—Å—è –≤ –∫–æ–Ω—Å–æ–ª—å.  

–°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–ª–µ–Ω–∏–π –∫–æ–¥ —ñ –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Ä–æ–±–æ—Ç—É! üöÄ