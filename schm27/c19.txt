### üîπ **–ê–Ω–∞–ª—ñ–∑ –ø—Ä–æ–±–ª–µ–º–∏**  
–í–∏ –æ—Ç—Ä–∏–º—É—î—Ç–µ –ø–æ–º–∏–ª–∫—É –Ω–∞ —Ü—å–æ–º—É —Ä—è–¥–∫—É:
```javascript
const responseResults = NextResponse.json(await response.json());
```
> **–ô–º–æ–≤—ñ—Ä–Ω–∞ –ø—Ä–∏—á–∏–Ω–∞:** `response.json()` –≤–∏–∫–ª–∏–∫–∞—î `SyntaxError`, –æ—Å–∫—ñ–ª—å–∫–∏ `response` –º—ñ—Å—Ç–∏—Ç—å –Ω–µ JSON, –∞ HTML –∞–±–æ –≤–∑–∞–≥–∞–ª—ñ –ø–æ—Ä–æ–∂–Ω—é –≤—ñ–¥–ø–æ–≤—ñ–¥—å.

---

### **üîπ –Ø–∫ –∑–Ω–∞–π—Ç–∏ —Ç–æ—á–Ω—É –ø—Ä–∏—á–∏–Ω—É?**
–ü–µ—Ä–µ–¥ —Ç–∏–º, —è–∫ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ `response.json()`, –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏:  
1Ô∏è‚É£ **–ß–∏ –≤–∑–∞–≥–∞–ª—ñ `response` –º–∞—î `Content-Type: application/json`?**  
2Ô∏è‚É£ **–ß–∏ `response.status` –Ω–µ —î 500, 401 –∞–±–æ —ñ–Ω—à–∏–º –ø–æ–º–∏–ª–∫–æ–≤–∏–º?**  
3Ô∏è‚É£ **–©–æ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ `response.text()`, —è–∫—â–æ —Ü–µ –Ω–µ JSON?**

---

### **üîπ –û–Ω–æ–≤–ª–µ–Ω–∏–π –∫–æ–¥ —ñ–∑ –¥–µ—Ç–∞–ª—å–Ω–∏–º –ª–æ–≥—É–≤–∞–Ω–Ω—è–º**
```javascript
import { NextResponse } from 'next/server';
import { logoutUser } from '../../../utils/auth';

export const runtime = 'edge';
const REMOTE_API = process.env.MAIN_API_URL;

export default async function customFetch(req) {
    try {
        // –û—Ç—Ä–∏–º—É—î–º–æ body-–∑–∞–ø–∏—Ç—É
        const { url, options } = await req.json();
        
        // –û—Ç—Ä–∏–º—É—î–º–æ cookies
        const cookieStore = req.cookies;
        let accessToken = cookieStore.get('accessToken')?.value;
        let refreshToken = cookieStore.get('refreshToken')?.value;
        let etlsUser = cookieStore.get('etlsUser')?.value;

        // –Ø–∫—â–æ –Ω–µ–º–∞—î accessToken, –æ–Ω–æ–≤–ª—é—î–º–æ —Ç–æ–∫–µ–Ω–∏ —á–µ—Ä–µ–∑ refreshToken
        if (!accessToken) {
            if (!refreshToken) return logoutUser(req);

            const refreshedTokens = await fetch(`${req.nextUrl.origin}/api/rest/refreshresttokens`, {
                method: 'POST',
                credentials: 'include',
                headers: {
                    'Content-Type': 'application/json',
                    Cookie: req.headers.get('cookie') || ''
                }
            });

            if (!refreshedTokens.ok) {
                console.error('üî¥ Failed to refresh token. Status:', refreshedTokens.status);
                return logoutUser(req);
            }

            const { newAccessToken } = await refreshedTokens.json();
            accessToken = newAccessToken;
        }

        // –í–∏–∑–Ω–∞—á–∞—î–º–æ –º–µ—Ç–æ–¥ –∑–∞–ø–∏—Ç—É
        const apiMethod = options.method || 'GET';

        // –§–æ—Ä–º—É—î–º–æ –∑–∞–ø–∏—Ç –¥–æ REMOTE_API –∑ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º –º–µ—Ç–æ–¥–æ–º
        let fetchOptions = {
            method: apiMethod,
            credentials: 'include',
            headers: {
                Authorization: `Bearer ${accessToken}`,
                'Content-Type': 'application/json'
            }
        };

        if (!['GET', 'DELETE'].includes(apiMethod)) {
            fetchOptions.body = JSON.stringify(options.body || {});
        }

        let response = await fetch(`${REMOTE_API}${url}`, fetchOptions);

        // üî¥ **–î–æ–¥–∞—î–º–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è, —è–∫—â–æ –∑–∞–ø–∏—Ç –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–µ JSON**
        const contentType = response.headers.get('content-type') || 'unknown';
        console.log(`üîµ API response content-type: ${contentType}, status: ${response.status}`);

        if (!response.ok) {
            console.error(`üî¥ API request failed with status ${response.status}`);

            // –Ø–∫—â–æ —Å–µ—Ä–≤–µ—Ä –ø–æ–≤–µ—Ä–Ω—É–≤ HTML-—Å—Ç–æ—Ä—ñ–Ω–∫—É –ø–æ–º–∏–ª–∫–∏, –≤–∏–≤–æ–¥–∏–º–æ —ó—ó —Ç–µ–∫—Å—Ç
            if (!contentType.includes('application/json')) {
                console.error('üî¥ Server returned non-JSON response:', await response.text());
                return NextResponse.json({ error: 'Invalid response format' }, { status: 500 });
            }
        }

        // üîµ **–ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ JSON-–ø–∞—Ä—Å–∏–Ω–≥**
        let responseJson;
        try {
            responseJson = await response.json();
        } catch (jsonError) {
            console.error('‚ùå JSON Parsing Error:', jsonError);
            console.error('‚ùå Response body (text mode):', await response.text());
            return NextResponse.json({ error: 'Invalid JSON response' }, { status: 500 });
        }

        // –§–æ—Ä–º—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
        const responseResults = NextResponse.json(responseJson);

        // –û–Ω–æ–≤–ª—é—î–º–æ cookies
        responseResults.headers.set(
            'Set-Cookie',
            [
                `accessToken=${accessToken}; HttpOnly; Path=/; Max-Age=43200`,
                `refreshToken=${refreshToken}; HttpOnly; Path=/; Max-Age=43200`,
                `etlsUser=${etlsUser}; HttpOnly; Path=/; Secure; Max-Age=43200`,
            ].join(',')
        );

        return responseResults;
    } catch (error) {
        console.error("‚ùå Error in customFetch:", error);
        return NextResponse.json({ error: 'Request failed' }, { status: 500 });
    }
}
```

---

### **üîπ –©–æ –∑–º—ñ–Ω–∏–ª–æ—Å—è?**
‚úÖ **–õ–æ–≥—É—î–º–æ `Content-Type` –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ**, —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏, —á–∏ —Å–µ—Ä–≤–µ—Ä –¥—ñ–π—Å–Ω–æ –ø–æ–≤–µ—Ä—Ç–∞—î JSON.  
‚úÖ **–ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ `response.ok`** ‚Äì —è–∫—â–æ —Å–µ—Ä–≤–µ—Ä –ø–æ–≤–µ—Ä–Ω—É–≤ –ø–æ–º–∏–ª–∫—É (`500`, `401`), –º–∏ –ª–æ–≥—É—î–º–æ —Ç–µ–∫—Å—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ.  
‚úÖ **–î–æ–¥–∞—î–º–æ `try { response.json() } catch (error)`**, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ `SyntaxError` –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥—É.  
‚úÖ **–Ø–∫—â–æ JSON-–ø–∞—Ä—Å–∏–Ω–≥ –Ω–µ –≤–¥–∞–≤—Å—è, –º–∏ –≤–∏–≤–æ–¥–∏–º–æ `response.text()`**, —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏, —â–æ —Å–∞–º–µ –ø–æ–≤–µ—Ä–Ω—É–≤ —Å–µ—Ä–≤–µ—Ä.

---

### **üîπ –©–æ —Ä–æ–±–∏—Ç–∏ –ø—ñ—Å–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–¥—É?**
1Ô∏è‚É£ **–ó–∞–ø—É—Å—Ç—ñ—Ç—å Next.js —ñ –∑—Ä–æ–±—ñ—Ç—å –∑–∞–ø–∏—Ç –ø—ñ—Å–ª—è –ø—Ä–æ—Ç–µ—Ä–º—ñ–Ω—É–≤–∞–Ω–Ω—è `accessToken`.**  
2Ô∏è‚É£ **–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ª–æ–≥–∏ –≤ –∫–æ–Ω—Å–æ–ª—ñ —Å–µ—Ä–≤–µ—Ä–∞ (`npm run dev`).**  
3Ô∏è‚É£ –ù–∞–¥—ñ—à–ª—ñ—Ç—å –º–µ–Ω—ñ –≤ –∫–æ–Ω—Å–æ–ª—å–Ω—ñ–π –ª–æ–≥—ñ–∫–∏:  
   - `üîµ API response content-type: ...`
   - `üî¥ Server returned non-JSON response: ...`
   - `‚ùå JSON Parsing Error: ...`  
4Ô∏è‚É£ –¶–µ –¥–æ–ø–æ–º–æ–∂–µ –∑—Ä–æ–∑—É–º—ñ—Ç–∏, —â–æ —Å–µ—Ä–≤–µ—Ä –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ.

üöÄ **–ü—ñ—Å–ª—è —Ü—å–æ–≥–æ —è —Ç–æ—á–Ω–æ —Å–∫–∞–∂—É, —è–∫ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ –ø—Ä–æ–±–ª–µ–º—É!**