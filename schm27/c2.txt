### **üìå –û–Ω–æ–≤–ª–µ–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç `SearchBar.js`**
–û—Å—å –æ–Ω–æ–≤–ª–µ–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç **–ø–æ—à—É–∫—É**, —è–∫–∏–π –¥–æ–¥–∞—î:  
‚úÖ **–ö–Ω–æ–ø–∫—É "–ü–æ—à—É–∫"**  
‚úÖ **–í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –ø—ñ–¥ –ø–æ–ª–µ–º –≤–≤–æ–¥—É**  
‚úÖ **–ü—Ä–æ–∫—Ä—É—Ç–∫—É (`scroll`) –¥–ª—è –≤–µ–ª–∏–∫–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤**  
‚úÖ **–ü–µ—Ä–µ—Ö—ñ–¥ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –∞–ª—å–±–æ–º—É –∞–±–æ —Å—Ö–µ–º–∏**  
‚úÖ **–û–±—Ä–æ–±–∫—É –ø–æ—à—É–∫–æ–≤–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤ (–ø–æ –Ω–∞–∑–≤—ñ, –≤—ñ–¥–¥—ñ–ª—É, unit, —Ç–∏–ø—É)**  

---

### **üìÅ `components/SearchBar.js`**
```javascript
import { useState } from "react";
import { TextField, Button, Paper, List, ListItem, ListItemText, Divider, Box } from "@mui/material";
import { Search } from "@mui/icons-material";
import { useRouter } from "next/router";

export default function SearchBar({ placeholder, onSearch }) {
  const [query, setQuery] = useState("");
  const [searchResults, setSearchResults] = useState([]);
  const [loading, setLoading] = useState(false);
  const router = useRouter();

  // –û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ –ø–æ—à—É–∫—É
  const handleSearch = async () => {
    if (!query.trim()) return; // –Ø–∫—â–æ –ø–æ–ª–µ –ø—É—Å—Ç–µ, –Ω—ñ—á–æ–≥–æ –Ω–µ —à—É–∫–∞—î–º–æ

    setLoading(true);
    try {
      const response = await fetch(`/api/rest/search?query=${query}`);
      const results = await response.json();
      setSearchResults(results);
    } catch (error) {
      console.error("Error fetching search results:", error);
    } finally {
      setLoading(false);
    }
  };

  // –û–±—Ä–æ–±–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥—É –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  const handleItemClick = (item) => {
    const url = item.type === "album" ? `/albums/${item.id}` : `/editor/${item.id}`;
    router.push(url);
  };

  return (
    <Box>
      {/* –ü–æ—à—É–∫–æ–≤–∏–π –±–ª–æ–∫ */}
      <Box display="flex" gap={1} alignItems="center">
        <TextField 
          label={placeholder || "–ü–æ—à—É–∫"} 
          variant="outlined" 
          fullWidth 
          value={query}
          onChange={(e) => setQuery(e.target.value)}
        />
        <Button 
          variant="contained" 
          color="primary" 
          startIcon={<Search />} 
          onClick={handleSearch}
          disabled={loading}
        >
          –ü–æ—à—É–∫
        </Button>
      </Box>

      {/* –ë–ª–æ–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –ø–æ—à—É–∫—É */}
      {searchResults.length > 0 && (
        <Paper elevation={3} sx={{ mt: 1, maxHeight: 200, overflowY: "auto" }}>
          <List>
            {searchResults.map((item, index) => (
              <div key={item.id}>
                <ListItem button onClick={() => handleItemClick(item)}>
                  <ListItemText 
                    primary={`${item.name} (${item.type === "album" ? "–ê–ª—å–±–æ–º" : "–°—Ö–µ–º–∞"})`}
                    secondary={`${item.department_name} - ${item.unit_name}`}
                  />
                </ListItem>
                {index < searchResults.length - 1 && <Divider />}
              </div>
            ))}
          </List>
        </Paper>
      )}
    </Box>
  );
}
```

---

## **üìå –î–æ–¥–∞—î–º–æ Next.js API –¥–ª—è –ø–æ—à—É–∫—É**
–û—Å–∫—ñ–ª—å–∫–∏ –ø–æ—à—É–∫ –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è —á–µ—Ä–µ–∑ –±–µ–∫–µ–Ω–¥, –Ω–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ API –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è SQL-–∑–∞–ø–∏—Ç—É.

### **üìÅ `pages/api/rest/search.js`**
```javascript
import { queryDatabase } from "@/utils/db";

export default async function handler(req, res) {
  if (req.method !== "GET") {
    return res.status(405).json({ error: "Method Not Allowed" });
  }

  const { query } = req.query;
  if (!query) {
    return res.status(400).json({ error: "Missing search query" });
  }

  try {
    const sql = `
      SELECT id, name, 'album' AS type, department_name, unit_name FROM ALBUM WHERE LOWER(name) LIKE LOWER(:query)
      UNION ALL
      SELECT id, name, 'scheme' AS type, department_name, unit_name FROM SCHEME WHERE LOWER(name) LIKE LOWER(:query)
    `;

    const results = await queryDatabase(sql, { query: `%${query}%` });

    res.status(200).json(results);
  } catch (error) {
    console.error("Search API error:", error);
    res.status(500).json({ error: "Internal Server Error" });
  }
}
```

---

## **üìå –©–æ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ?**
‚úÖ **–ü–æ—à—É–∫ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É** (–±–µ–∑ Ajax-–∑–∞–ø–∏—Ç—ñ–≤ –ø—ñ—Å–ª—è –∫–æ–∂–Ω–æ–≥–æ –≤–≤–µ–¥–µ–Ω–Ω—è).  
‚úÖ **–ë–ª–æ–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –ø—ñ–¥ —ñ–Ω–ø—É—Ç–æ–º** (—ñ–∑ **scroll**, —è–∫—â–æ –±–∞–≥–∞—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤).  
‚úÖ **–§–æ—Ä–º—É–≤–∞–Ω–Ω—è URL –Ω–∞ –æ—Å–Ω–æ–≤—ñ —Ç–∏–ø—É (`album` / `scheme`)**.  
‚úÖ **–ó–∞–ø–∏—Ç –¥–æ Next.js API –¥–ª—è –ø–æ—à—É–∫—É –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö**.  
‚úÖ **–û–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∏–π SQL-–∑–∞–ø–∏—Ç (`LIKE LOWER(:query)`)** –¥–ª—è –∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è –ø–æ **–Ω–∞–∑–≤—ñ, –≤—ñ–¥–¥—ñ–ª—É, unit**.  

üöÄ **–ì–æ—Ç–æ–≤–∏–π –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ Next.js –¥–æ–¥–∞—Ç–∫—É!**