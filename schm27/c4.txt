–û—Å—å –æ–Ω–æ–≤–ª–µ–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç **`AlbumsReport.js`** —ñ–∑ **–ø–∞–≥—ñ–Ω–∞—Ü—ñ—î—é** (–ø–æ 15 –∞–ª—å–±–æ–º—ñ–≤ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É).  
–ù–∞–≤—ñ–≥–∞—Ü—ñ—è –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –∞–ª—å–±–æ–º—ñ–≤ –±—ñ–ª—å—à–µ 15.

---

### **üìÅ –û–Ω–æ–≤–ª–µ–Ω–∏–π `AlbumsReport.js`**
```javascript
import { useState } from "react";
import { useRouter } from "next/router";
import {
  Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, IconButton,
  Dialog, DialogTitle, DialogContent, DialogActions, Button, TablePagination
} from "@mui/material";
import { Visibility, Edit, Delete } from "@mui/icons-material";
import { updateAlbumStatus } from "@/utils/api";

export default function AlbumsReport({ albums, statuses, mode }) {
  const router = useRouter();
  const [selectedAlbum, setSelectedAlbum] = useState(null);
  const [isArchiveModalOpen, setIsArchiveModalOpen] = useState(false);
  const [page, setPage] = useState(0);
  const rowsPerPage = 15;

  // –ü–µ—Ä–µ—Ö–æ–¥–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –∞–ª—å–±–æ–º—É –≤ —Ä–µ–∂–∏–º–∞—Ö viewer/editor
  const handleViewClick = (albumId) => {
    router.push(`/albums/${albumId}?mode=viewer`);
  };

  const handleEditClick = (albumId) => {
    router.push(`/albums/${albumId}?mode=editor`);
  };

  // –í—ñ–¥–∫—Ä–∏–≤–∞—î –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∞—Ä—Ö—ñ–≤–∞—Ü—ñ—ó
  const handleArchiveClick = (album) => {
    setSelectedAlbum(album);
    setIsArchiveModalOpen(true);
  };

  // –ó–∞–ø–∏—Ç –¥–æ API –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –∞–ª—å–±–æ–º—É –Ω–∞ "–ê—Ä—Ö—ñ–≤"
  const confirmArchiveAlbum = async () => {
    if (!selectedAlbum) return;

    try {
      await updateAlbumStatus(selectedAlbum.id, "–ê—Ä—Ö—ñ–≤"); // –ó–∞–ø–∏—Ç –¥–æ API
      setIsArchiveModalOpen(false);
      router.reload(); // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –ø—ñ—Å–ª—è –∞—Ä—Ö—ñ–≤–∞—Ü—ñ—ó
    } catch (error) {
      console.error("Error archiving album:", error);
    }
  };

  // –û–±—Ä–æ–±–∫–∞ –∑–º—ñ–Ω–∏ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
  const handleChangePage = (event, newPage) => {
    setPage(newPage);
  };

  // –í—ñ–¥–æ–±—Ä–∞–∂–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ –∞–ª—å–±–æ–º–∏ –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏
  const paginatedAlbums = albums.slice(page * rowsPerPage, (page + 1) * rowsPerPage);

  return (
    <>
      <TableContainer component={Paper}>
        <Table>
          <TableHead>
            <TableRow>
              <TableCell>–ü–µ—Ä–µ–≥–ª—è–¥</TableCell>
              <TableCell>ID</TableCell>
              <TableCell>–í—ñ–¥–¥—ñ–ª</TableCell>
              <TableCell>Unit</TableCell>
              <TableCell>–ù–∞–∑–≤–∞</TableCell>
              <TableCell>–û–ø–∏—Å</TableCell>
              <TableCell>–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è/–æ–Ω–æ–≤–ª–µ–Ω–Ω—è</TableCell>
              {mode === "editor" && <TableCell>–î—ñ—ó</TableCell>}
            </TableRow>
          </TableHead>
          <TableBody>
            {paginatedAlbums.map((album) => (
              <TableRow key={album.id}>
                {/* –ü–µ—Ä–µ–≥–ª—è–¥ –∞–ª—å–±–æ–º—É */}
                <TableCell>
                  <IconButton color="primary" onClick={() => handleViewClick(album.id)}>
                    <Visibility />
                  </IconButton>
                </TableCell>
                <TableCell>{album.id}</TableCell>
                <TableCell>{album.department_name}</TableCell>
                <TableCell>{album.unit_name}</TableCell>
                <TableCell>{album.name}</TableCell>
                <TableCell>{album.description}</TableCell>
                <TableCell>{album.date_update || album.date_create}</TableCell>

                {/* –î—ñ—ó –¥–ª—è —Ä–æ–ª—ñ editor */}
                {mode === "editor" && (
                  <TableCell>
                    <IconButton color="warning" onClick={() => handleEditClick(album.id)}>
                      <Edit />
                    </IconButton>
                    <IconButton color="error" onClick={() => handleArchiveClick(album)}>
                      <Delete />
                    </IconButton>
                  </TableCell>
                )}
              </TableRow>
            ))}
          </TableBody>
        </Table>
      </TableContainer>

      {/* –ü–∞–≥—ñ–Ω–∞—Ü—ñ—è (–≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –±—ñ–ª—å—à–µ 15 –∞–ª—å–±–æ–º—ñ–≤) */}
      {albums.length > rowsPerPage && (
        <TablePagination
          component="div"
          count={albums.length}
          page={page}
          rowsPerPage={rowsPerPage}
          rowsPerPageOptions={[rowsPerPage]}
          onPageChange={handleChangePage}
        />
      )}

      {/* –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∞—Ä—Ö—ñ–≤–∞—Ü—ñ—ó */}
      <Dialog open={isArchiveModalOpen} onClose={() => setIsArchiveModalOpen(false)}>
        <DialogTitle>–ê—Ä—Ö—ñ–≤–∞—Ü—ñ—è –∞–ª—å–±–æ–º—É</DialogTitle>
        <DialogContent>
          –í–∏ —Ç–æ—á–Ω–æ –±–∞–∂–∞—î—Ç–µ –ø–µ—Ä–µ–º—ñ—Å—Ç–∏—Ç–∏ –∞–ª—å–±–æ–º <b>{selectedAlbum?.name}</b> –≤ –∞—Ä—Ö—ñ–≤?
        </DialogContent>
        <DialogActions>
          <Button onClick={() => setIsArchiveModalOpen(false)} color="secondary">
            –í—ñ–¥–º—ñ–Ω–∏—Ç–∏
          </Button>
          <Button onClick={confirmArchiveAlbum} color="primary" variant="contained">
            –¢–∞–∫
          </Button>
        </DialogActions>
      </Dialog>
    </>
  );
}
```

---

## **üìå –©–æ –æ–Ω–æ–≤–ª–µ–Ω–æ?**
‚úÖ **–î–æ–¥–∞–Ω–æ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—é –ø–æ 15 –∞–ª—å–±–æ–º—ñ–≤ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É** (`TablePagination`).  
‚úÖ **–ü–∞–≥—ñ–Ω–∞—Ü—ñ—è –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –±—ñ–ª—å—à–µ 15 –∑–∞–ø–∏—Å—ñ–≤**.  
‚úÖ **–í—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ –∞–ª—å–±–æ–º–∏ –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏** (`slice()`).  
‚úÖ **–û–±—Ä–æ–±–∫–∞ –ø–æ–¥—ñ–π `onPageChange` –¥–ª—è –∑–º—ñ–Ω–∏ —Å—Ç–æ—Ä—ñ–Ω–∫–∏**.  

üöÄ **–¢–µ–ø–µ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –ø—Ä–∞—Ü—é—î —à–≤–∏–¥—à–µ, —ñ —Å–ø–∏—Å–æ–∫ –∞–ª—å–±–æ–º—ñ–≤ –Ω–µ –≤–∏–≥–ª—è–¥–∞—î –ø–µ—Ä–µ–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–º!**