–û—Å—å **–∫–æ–º–ø–æ–Ω–µ–Ω—Ç `AlbumsFilters.js`**, —è–∫–∏–π –¥–æ–∑–≤–æ–ª—è—î **—Ñ—ñ–ª—å—Ç—Ä—É–≤–∞—Ç–∏ –∑–≤—ñ—Ç `AlbumsReport.js`** –∑–∞ **–≤—ñ–¥–¥—ñ–ª–æ–º, –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª–æ–º (unit) —Ç–∞ —Å—Ç–∞—Ç—É—Å–æ–º (–ê–∫—Ç–∏–≤–Ω—ñ/–ê—Ä—Ö—ñ–≤)**.

---

## **üìÅ `components/AlbumsFilters.js`**
```javascript
import { useState, useEffect } from "react";
import { Box, TextField, MenuItem, Paper } from "@mui/material";

export default function AlbumsFilters({ departments, units, statuses, onFilterChange }) {
  const [selectedDepartment, setSelectedDepartment] = useState("");
  const [selectedUnit, setSelectedUnit] = useState("");
  const [selectedStatus, setSelectedStatus] = useState("–ê–∫—Ç–∏–≤–Ω—ñ");

  useEffect(() => {
    onFilterChange({ department: selectedDepartment, unit: selectedUnit, status: selectedStatus });
  }, [selectedDepartment, selectedUnit, selectedStatus]);

  return (
    <Paper sx={{ p: 2, mb: 2 }}>
      <Box display="flex" gap={2}>
        {/* –§—ñ–ª—å—Ç—Ä –ø–æ –≤—ñ–¥–¥—ñ–ª—É */}
        <TextField
          select
          label="–í—ñ–¥–¥—ñ–ª"
          fullWidth
          value={selectedDepartment}
          onChange={(e) => setSelectedDepartment(e.target.value)}
        >
          <MenuItem value="">–í—Å—ñ</MenuItem>
          {departments.map((dep) => (
            <MenuItem key={dep.id} value={dep.id}>
              {dep.name}
            </MenuItem>
          ))}
        </TextField>

        {/* –§—ñ–ª—å—Ç—Ä –ø–æ –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—É */}
        <TextField
          select
          label="–ü—ñ–¥—Ä–æ–∑–¥—ñ–ª"
          fullWidth
          value={selectedUnit}
          onChange={(e) => setSelectedUnit(e.target.value)}
        >
          <MenuItem value="">–í—Å—ñ</MenuItem>
          {units.map((unit) => (
            <MenuItem key={unit.id} value={unit.id}>
              {unit.name}
            </MenuItem>
          ))}
        </TextField>

        {/* –§—ñ–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å—É */}
        <TextField
          select
          label="–°—Ç–∞—Ç—É—Å"
          fullWidth
          value={selectedStatus}
          onChange={(e) => setSelectedStatus(e.target.value)}
        >
          <MenuItem value="–ê–∫—Ç–∏–≤–Ω—ñ">–ê–∫—Ç–∏–≤–Ω—ñ</MenuItem>
          <MenuItem value="–ê—Ä—Ö—ñ–≤">–ê—Ä—Ö—ñ–≤</MenuItem>
        </TextField>
      </Box>
    </Paper>
  );
}
```

---

## **üìå 2. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ `AlbumsPage.js`**
–¢–µ–ø–µ—Ä **–¥–æ–¥–∞—î–º–æ —Ü–µ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —É `AlbumsPage.js`** —Ç–∞ –ø–µ—Ä–µ–¥–∞—î–º–æ –≤–∏–±—Ä–∞–Ω—ñ —Ñ—ñ–ª—å—Ç—Ä–∏ –¥–æ `AlbumsReport.js`.

### **üìÅ –û–Ω–æ–≤–ª—é—î–º–æ `AlbumsPage.js`**
```javascript
import { useEffect, useState } from "react";
import { useRouter } from "next/router";
import { fetchDepartments, fetchUnits, fetchAlbums, fetchAlbumStatuses } from "@/utils/api";
import { Container, Box, Button } from "@mui/material";
import { Add } from "@mui/icons-material";
import NewAlbumModal from "@/components/NewAlbumModal";
import AlbumsReport from "@/components/AlbumsReport";
import AlbumsFilters from "@/components/AlbumsFilters";

export default function AlbumsPage() {
  const router = useRouter();
  const { mode } = router.query;
  const [albums, setAlbums] = useState([]);
  const [departments, setDepartments] = useState([]);
  const [units, setUnits] = useState([]);
  const [statuses, setStatuses] = useState([]);
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [filteredAlbums, setFilteredAlbums] = useState([]);

  useEffect(() => {
    async function loadData() {
      setDepartments(await fetchDepartments());
      setUnits(await fetchUnits());
      setAlbums(await fetchAlbums());
      setStatuses(await fetchAlbumStatuses());
    }
    loadData();
  }, []);

  // –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –∞–ª—å–±–æ–º—ñ–≤
  const handleFilterChange = ({ department, unit, status }) => {
    let filtered = albums;

    if (department) {
      filtered = filtered.filter((album) => album.department_id === Number(department));
    }
    if (unit) {
      filtered = filtered.filter((album) => album.unit_id === Number(unit));
    }
    if (status === "–ê–∫—Ç–∏–≤–Ω—ñ") {
      filtered = filtered.filter((album) => album.status_id !== 2); // –ù–∞–ø—Ä–∏–∫–ª–∞–¥, —Å—Ç–∞—Ç—É—Å "–ê—Ä—Ö—ñ–≤" –º–∞—î id=2
    } else if (status === "–ê—Ä—Ö—ñ–≤") {
      filtered = filtered.filter((album) => album.status_id === 2);
    }

    setFilteredAlbums(filtered);
  };

  return (
    <Container maxWidth="xl">
      <Box display="flex" justifyContent="space-between" alignItems="center" mb={2}>
        <h2>–ö–∞—Ç–∞–ª–æ–≥ –∞–ª—å–±–æ–º—ñ–≤</h2>
        {mode === "editor" && (
          <Button variant="contained" color="success" startIcon={<Add />} onClick={() => setIsModalOpen(true)}>
            –ù–æ–≤–∏–π –∞–ª—å–±–æ–º
          </Button>
        )}
      </Box>

      {/* –ë–ª–æ–∫ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ */}
      <AlbumsFilters departments={departments} units={units} statuses={statuses} onFilterChange={handleFilterChange} />

      {/* –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–≤—ñ—Ç—É –∞–ª—å–±–æ–º—ñ–≤ */}
      <AlbumsReport albums={filteredAlbums.length > 0 ? filteredAlbums : albums} statuses={statuses} mode={mode} />

      {/* –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–ª—å–±–æ–º—É */}
      <NewAlbumModal
        open={isModalOpen}
        onClose={() => setIsModalOpen(false)}
        onAlbumCreated={() => setAlbums([...albums])}
      />
    </Container>
  );
}
```

---

## **üìå –©–æ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ?**
‚úÖ **–ö–æ–º–ø–æ–Ω–µ–Ω—Ç `AlbumsFilters.js`** ‚Üí —Ç—Ä–∏ `select` (**–í—ñ–¥–¥—ñ–ª, Unit, –°—Ç–∞—Ç—É—Å**).  
‚úÖ **–§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è `AlbumsReport.js`** ‚Üí –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î —Ç—ñ–ª—å–∫–∏ —Ç—ñ –∞–ª—å–±–æ–º–∏, —è–∫—ñ –ø—ñ–¥—Ö–æ–¥—è—Ç—å –ø—ñ–¥ —Ñ—ñ–ª—å—Ç—Ä.  
‚úÖ **–°—Ç–∞—Ç—É—Å (–ê–∫—Ç–∏–≤–Ω—ñ/–ê—Ä—Ö—ñ–≤)** ‚Üí –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º **"–ê–∫—Ç–∏–≤–Ω—ñ"**.  
‚úÖ **–î–∏–Ω–∞–º—ñ—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è `AlbumsReport.js`** –ø—Ä–∏ –∑–º—ñ–Ω—ñ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤.  

üöÄ **–¢–µ–ø–µ—Ä —Ñ—ñ–ª—å—Ç—Ä–∏ –¥–∏–Ω–∞–º—ñ—á–Ω–æ –ø—Ä–∞—Ü—é—é—Ç—å —Ç–∞ –≤–ø–ª–∏–≤–∞—é—Ç—å –Ω–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∞–ª—å–±–æ–º—ñ–≤ —É –∑–≤—ñ—Ç—ñ!**