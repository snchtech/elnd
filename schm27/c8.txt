–û—Å—å –æ–Ω–æ–≤–ª–µ–Ω–∏–π –∫–æ–¥ **`SchemeReport`**, —è–∫–∏–π –¥–æ–¥–∞—î —Ä–æ–∑–±–∏–≤–∫—É –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ (–ø–∞–≥—ñ–Ω–∞—Ü—ñ—é) –ø–æ 15 —Å—Ö–µ–º –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É. –ü–∞–≥—ñ–Ω–∞—Ü—ñ—è –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è –ª–∏—à–µ, —è–∫—â–æ —Å—Ö–µ–º –±—ñ–ª—å—à–µ 15.

---

### **–û–Ω–æ–≤–ª–µ–Ω–∏–π `SchemeReport`**
```tsx
import { useState, useEffect } from "react";
import { useRouter } from "next/router";
import {
  Table, TableBody, TableCell, TableContainer, TableHead, TableRow, IconButton,
  Typography, Button, Dialog, DialogActions, DialogContent, DialogContentText,
  DialogTitle, Paper, TablePagination
} from "@mui/material";
import { Visibility, Edit, Archive, Sort } from "@mui/icons-material";
import { fetchSchemes, archiveScheme } from "@/utils/api";

const SchemeReport = ({ albumId, userRole, mode }) => {
  const router = useRouter();
  const [schemes, setSchemes] = useState([]);
  const [sortAsc, setSortAsc] = useState(true);
  const [archiveDialog, setArchiveDialog] = useState({ open: false, schemeId: null });
  const [page, setPage] = useState(0);
  const [rowsPerPage] = useState(15); // –§—ñ–∫—Å–æ–≤–∞–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–ø–∏—Å—ñ–≤ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É

  useEffect(() => {
    const loadSchemes = async () => {
      try {
        const data = await fetchSchemes(albumId);
        setSchemes(data);
      } catch (error) {
        console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ö–µ–º:", error);
      }
    };

    loadSchemes();
  }, [albumId]);

  const handleSort = () => {
    const sorted = [...schemes].sort((a, b) =>
      sortAsc ? new Date(a.updated_at) - new Date(b.updated_at) : new Date(b.updated_at) - new Date(a.updated_at)
    );
    setSchemes(sorted);
    setSortAsc(!sortAsc);
  };

  const handleViewScheme = (schemeId) => {
    router.push(`/schemes/${schemeId}?mode=viewer`);
  };

  const handleEditScheme = (schemeId) => {
    router.push(`/schemes/${schemeId}?mode=editor`);
  };

  const handleArchiveConfirm = async () => {
    try {
      await archiveScheme(archiveDialog.schemeId);
      setSchemes(schemes.filter((s) => s.id !== archiveDialog.schemeId));
      setArchiveDialog({ open: false, schemeId: null });
    } catch (error) {
      console.error("–ü–æ–º–∏–ª–∫–∞ –∞—Ä—Ö—ñ–≤—É–≤–∞–Ω–Ω—è —Å—Ö–µ–º–∏:", error);
    }
  };

  const handleChangePage = (event, newPage) => {
    setPage(newPage);
  };

  if (schemes.length === 0) {
    return <Typography variant="body1">–ù–∞ –¥–∞–Ω–∏–π –º–æ–º–µ–Ω—Ç –¥–ª—è —Ü—å–æ–≥–æ –∞–ª—å–±–æ–º—É –Ω–µ–º–∞—î –∂–æ–¥–Ω–æ—ó —Å—Ö–µ–º–∏.</Typography>;
  }

  return (
    <>
      <TableContainer component={Paper}>
        <Table>
          <TableHead>
            <TableRow>
              <TableCell>–ü–µ—Ä–µ–≥–ª—è–¥</TableCell>
              <TableCell>ID</TableCell>
              <TableCell>–í—ñ–¥–¥—ñ–ª</TableCell>
              <TableCell>Unit</TableCell>
              <TableCell>–ù–∞–∑–≤–∞</TableCell>
              <TableCell>–û–ø–∏—Å</TableCell>
              <TableCell onClick={handleSort} style={{ cursor: "pointer" }}>
                –î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è/–æ–Ω–æ–≤–ª–µ–Ω–Ω—è <Sort fontSize="small" />
              </TableCell>
              {mode === "editor" && userRole === "editor" && <TableCell>–î—ñ—ó</TableCell>}
            </TableRow>
          </TableHead>
          <TableBody>
            {schemes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((scheme) => (
              <TableRow key={scheme.id}>
                <TableCell>
                  <IconButton onClick={() => handleViewScheme(scheme.id)}>
                    <Visibility />
                  </IconButton>
                </TableCell>
                <TableCell>{scheme.id}</TableCell>
                <TableCell>{scheme.department_name}</TableCell>
                <TableCell>{scheme.unit_name}</TableCell>
                <TableCell>{scheme.name}</TableCell>
                <TableCell>{scheme.description}</TableCell>
                <TableCell>{new Date(scheme.updated_at).toLocaleString()}</TableCell>
                {mode === "editor" && userRole === "editor" && (
                  <TableCell>
                    <IconButton onClick={() => handleEditScheme(scheme.id)}>
                      <Edit />
                    </IconButton>
                    <IconButton onClick={() => setArchiveDialog({ open: true, schemeId: scheme.id })}>
                      <Archive />
                    </IconButton>
                  </TableCell>
                )}
              </TableRow>
            ))}
          </TableBody>
        </Table>
      </TableContainer>

      {/* –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—é —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —Å—Ö–µ–º –±—ñ–ª—å—à–µ 15 */}
      {schemes.length > rowsPerPage && (
        <TablePagination
          component="div"
          count={schemes.length}
          rowsPerPage={rowsPerPage}
          page={page}
          onPageChange={handleChangePage}
          rowsPerPageOptions={[]} // –•–æ–≤–∞—î–º–æ –≤–∏–±—ñ—Ä –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Ä—è–¥–∫—ñ–≤
        />
      )}

      {/* –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∞—Ä—Ö—ñ–≤—É–≤–∞–Ω–Ω—è */}
      <Dialog open={archiveDialog.open} onClose={() => setArchiveDialog({ open: false, schemeId: null })}>
        <DialogTitle>–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∞—Ä—Ö—ñ–≤—É–≤–∞–Ω–Ω—è</DialogTitle>
        <DialogContent>
          <DialogContentText>–í–∏ —Ç–æ—á–Ω–æ —Ö–æ—á–µ—Ç–µ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ —Ü—é —Å—Ö–µ–º—É –≤ –∞—Ä—Ö—ñ–≤?</DialogContentText>
        </DialogContent>
        <DialogActions>
          <Button onClick={() => setArchiveDialog({ open: false, schemeId: null })} color="primary">
            –í—ñ–¥–º—ñ–Ω–∏—Ç–∏
          </Button>
          <Button onClick={handleArchiveConfirm} color="secondary">
            –¢–∞–∫
          </Button>
        </DialogActions>
      </Dialog>
    </>
  );
};

export default SchemeReport;
```

---

### **–©–æ –∑–º—ñ–Ω–∏–ª–æ—Å—è –≤ —Ü—å–æ–º—É –∫–æ–¥—ñ?**
‚úÖ **–î–æ–¥–∞–Ω–æ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—é** (–ø–æ 15 –∑–∞–ø–∏—Å—ñ–≤ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É).  
‚úÖ **–ü—Ä–∏—Ö–æ–≤—É—î–º–æ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—é, —è–∫—â–æ —Å—Ö–µ–º –º–µ–Ω—à–µ 15**.  
‚úÖ **–°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è —Ç–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—è –∑–∞–ª–∏—à–∞—é—Ç—å—Å—è —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–º–∏**.  
‚úÖ **–ü—ñ—Å–ª—è –∞—Ä—Ö—ñ–≤—É–≤–∞–Ω–Ω—è —Å—Ö–µ–º–∏, —Å–ø–∏—Å–æ–∫ –æ–Ω–æ–≤–ª—é—î—Ç—å—Å—è**.  

–¢–µ–ø–µ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç `SchemeReport` –¥–æ–∑–≤–æ–ª—è—î –∑—Ä—É—á–Ω–æ –ø–µ—Ä–µ–≥–ª—è–¥–∞—Ç–∏ —Å—Ö–µ–º–∏ –Ω–∞–≤—ñ—Ç—å —É –≤–µ–ª–∏–∫–∏—Ö –∞–ª—å–±–æ–º–∞—Ö! üöÄ