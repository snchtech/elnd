–û—Å—å SQL-–∑–∞–ø–∏—Ç –¥–ª—è –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–Ω—è —Å—Ö–µ–º–∏ –≤ –∞—Ä—Ö—ñ–≤, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—é—á–∏ `status_id = 0`:

```sql
UPDATE SCHEME
SET status_id = 0
WHERE id = :schemeId
RETURNING id INTO :updatedSchemeId;
```

---

### **–°—Ç–≤–æ—Ä—é—î–º–æ API `/api/rest/archiveScheme.js`**
–¶–µ–π API –ø—Ä–∏–π–º–∞—î `schemeId`, –∑–º—ñ–Ω—é—î —Å—Ç–∞—Ç—É—Å —Å—Ö–µ–º–∏ –Ω–∞ **–∞—Ä—Ö—ñ–≤–Ω–∏–π (`status_id = 0`)** —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è.

```javascript
import { queryDatabase } from "@/utils/db";

export default async function handler(req, res) {
  if (req.method !== "PUT") {
    return res.status(405).json({ error: "Method Not Allowed" });
  }

  try {
    const { schemeId } = req.body;

    if (!schemeId) {
      return res.status(400).json({ error: "–ù–µ–æ–±—Ö—ñ–¥–Ω–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä schemeId" });
    }

    const sql = `
      UPDATE SCHEME
      SET status_id = 0
      WHERE id = :schemeId
      RETURNING id INTO :updatedSchemeId
    `;

    const params = {
      schemeId,
      updatedSchemeId: { dir: "out", type: "NUMBER" },
    };

    const result = await queryDatabase(sql, params);

    res.status(200).json({ success: true, schemeId: result.outBinds.updatedSchemeId });
  } catch (error) {
    console.error("–ü–æ–º–∏–ª–∫–∞ –∞—Ä—Ö—ñ–≤—É–≤–∞–Ω–Ω—è —Å—Ö–µ–º–∏:", error);
    res.status(500).json({ error: "Internal Server Error" });
  }
}
```

---

### **–î–æ–¥–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é `archiveScheme` —É `utils/api.js`**
```javascript
export const archiveScheme = async (schemeId) => {
  const response = await fetch("/api/rest/archiveScheme", {
    method: "PUT",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ schemeId }),
  });

  if (!response.ok) {
    throw new Error("–ü–æ–º–∏–ª–∫–∞ –∞—Ä—Ö—ñ–≤—É–≤–∞–Ω–Ω—è —Å—Ö–µ–º–∏");
  }

  return response.json();
};
```

---

### **–Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î?**
1Ô∏è‚É£ **–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞—Ç–∏—Å–∫–∞—î –∫–Ω–æ–ø–∫—É "–í –∞—Ä—Ö—ñ–≤" —É `SchemeReport.js`**.  
2Ô∏è‚É£ **–í—ñ–¥–∫—Ä–∏–≤–∞—î—Ç—å—Å—è –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è**.  
3Ô∏è‚É£ **–í–∏–∫–æ–Ω—É—î—Ç—å—Å—è `PUT` –∑–∞–ø–∏—Ç –Ω–∞ `/api/rest/archiveScheme`**.  
4Ô∏è‚É£ **SQL-–∑–∞–ø–∏—Ç –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î `status_id = 0` –¥–ª—è `schemeId`**.  
5Ô∏è‚É£ **–ü—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –∞—Ä—Ö—ñ–≤—É–≤–∞–Ω–Ω—è —Å—Ö–µ–º–∞ –≤–∏–¥–∞–ª—è—î—Ç—å—Å—è –∑—ñ —Å–ø–∏—Å–∫—É** —É `SchemeReport`.  

---

–ì–æ—Ç–æ–≤–æ! üéØ **–¢–µ–ø–µ—Ä —Å—Ö–µ–º–∞ –º–æ–∂–µ –±—É—Ç–∏ –∞—Ä—Ö—ñ–≤–æ–≤–∞–Ω–∞ –∫–æ—Ä–µ–∫—Ç–Ω–æ.** üöÄ  
–Ø–∫—â–æ —î –Ω—é–∞–Ω—Å–∏ ‚Äî –ø–∏—Ç–∞–π! üòä