### **üöÄ –û–Ω–æ–≤–ª–µ–Ω–∏–π `NavigationTree.js` —ñ–∑ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è–º `TreeView deprecated`**
–û—Å–∫—ñ–ª—å–∫–∏ **`@mui/x-tree-view`** –æ–Ω–æ–≤–∏–≤ API, **`TreeView` –±—ñ–ª—å—à–µ –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è –≤ MUI Lab**.  
‚úÖ **–†—ñ—à–µ–Ω–Ω—è**: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ **`TreeView` –∑ `@mui/x-tree-view/TreeView`**.

---

### ‚úÖ **–û–Ω–æ–≤–ª–µ–Ω–∏–π `NavigationTree.js`**
```javascript
import { useEffect, useState } from "react";
import { TreeView } from "@mui/x-tree-view/TreeView";
import { TreeItem } from "@mui/x-tree-view/TreeItem";
import { ExpandMore, ChevronRight } from "@mui/icons-material";
import { fetchDepartments, fetchAlbums, fetchSchemes } from "@/utils/api";
import { Box, TextField, Paper } from "@mui/material";

export default function NavigationTree() {
  const [departments, setDepartments] = useState([]);
  const [albums, setAlbums] = useState([]);
  const [schemes, setSchemes] = useState([]);
  const [expanded, setExpanded] = useState([]);
  const [searchTerm, setSearchTerm] = useState("");

  useEffect(() => {
    async function loadData() {
      setDepartments(await fetchDepartments());
      setAlbums(await fetchAlbums());
      setSchemes(await fetchSchemes());
    }
    loadData();
  }, []);

  // –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –¥–µ—Ä–µ–≤–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó –ø–æ –≤–≤–µ–¥–µ–Ω–æ–º—É —Ç–µ–∫—Å—Ç—É
  const filterTree = (items, searchKey) => {
    return items.filter((item) =>
      item.name.toLowerCase().includes(searchKey.toLowerCase())
    );
  };

  const filteredDepartments = filterTree(departments, searchTerm);
  const filteredAlbums = filterTree(albums, searchTerm);
  const filteredSchemes = filterTree(schemes, searchTerm);

  // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–µ—Ä–µ–≤–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
  const buildTree = () => {
    return filteredDepartments.map((department) => {
      const departmentAlbums = filteredAlbums.filter(album => album.department_id === department.id);

      return (
        <TreeItem key={`dep-${department.id}`} itemId={`dep-${department.id}`} label={department.name}>
          {departmentAlbums.map(album => {
            const albumSchemes = filteredSchemes.filter(scheme => scheme.album_id === album.id);

            return (
              <TreeItem 
                key={`album-${album.id}`} 
                itemId={`album-${album.id}`} 
                label={album.name}
              >
                {albumSchemes.map(scheme => (
                  <TreeItem key={`scheme-${scheme.id}`} itemId={`scheme-${scheme.id}`} label={scheme.name} />
                ))}
              </TreeItem>
            );
          })}
        </TreeItem>
      );
    });
  };

  return (
    <Paper sx={{ padding: 2 }}>
      {/* –ü–æ–ª–µ –ø–æ—à—É–∫—É */}
      <TextField
        label="–ü–æ—à—É–∫"
        variant="outlined"
        fullWidth
        value={searchTerm}
        onChange={(e) => setSearchTerm(e.target.value)}
        sx={{ mb: 2 }}
      />

      {/* –î–µ—Ä–µ–≤–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó */}
      <TreeView
        expanded={expanded}
        onNodeToggle={(event, nodeIds) => setExpanded(nodeIds)}
        defaultCollapseIcon={<ExpandMore />}
        defaultExpandIcon={<ChevronRight />}
      >
        {buildTree()}
      </TreeView>
    </Paper>
  );
}
```

---

### **üîπ –©–æ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–æ?**
‚úÖ **–ó–∞–º—ñ—Å—Ç—å `TreeView` –∑ `@mui/x-tree-view`** ‚Üí –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è `TreeView` –∑ **`@mui/x-tree-view/TreeView`**.  
‚úÖ **–ó–∞–º—ñ—Å—Ç—å `nodeId`** ‚Üí –¢–µ–ø–µ—Ä –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è **`itemId`** (–≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ –æ–Ω–æ–≤–ª–µ–Ω–æ–≥–æ API MUI).  
‚úÖ **–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–æ–≤–Ω—ñ—Å—Ç—é –æ–Ω–æ–≤–ª–µ–Ω–∏–π —Ç–∞ –ø—Ä–∞—Ü—é—î –±–µ–∑ `deprecated` –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω—å**.  

üí° **–ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ —É –≤–∞—Å –æ–Ω–æ–≤–ª–µ–Ω–∞ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞ MUI X TreeView:**
```sh
npm install @mui/x-tree-view
```

üöÄ **–¢–µ–ø–µ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç `NavigationTree` –ø—Ä–∞—Ü—é—î –∫–æ—Ä–µ–∫—Ç–Ω–æ –±–µ–∑ –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤!**