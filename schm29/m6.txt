–û—Å—å SQL-–∑–∞–ø–∏—Ç –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∞–ª—å–±–æ–º—É —Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–∫—Ä–µ–º–æ–≥–æ **endpoint** `/api/rest/getAlbumById.js` —É `utils/api.js`.

---

### **1. SQL-–∑–∞–ø–∏—Ç –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–ª—å–±–æ–º—É –∑–∞ `albumId`**
```sql
SELECT 
    a.id,
    a.name,
    a.depart_id,
    d.name AS department_name,
    a.unit_id,
    u.name AS unit_name,
    a.description,
    a.date_create,
    a.version,
    a.stable,
    a.creator_id,
    a.last_editor_id
FROM ALBUM a
LEFT JOIN DEPARTMENT d ON a.depart_id = d.id
LEFT JOIN UNIT u ON a.unit_id = u.id
WHERE a.id = :albumId;
```

---

### **2. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ endpoint `/pages/api/rest/getAlbumById.js`**
```javascript
import { queryDatabase } from "@/utils/db";

export default async function handler(req, res) {
  if (req.method !== "GET") {
    return res.status(405).json({ error: "Method Not Allowed" });
  }

  try {
    const { albumId } = req.query;

    if (!albumId) {
      return res.status(400).json({ error: "–ù–µ–æ–±—Ö—ñ–¥–Ω–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä albumId" });
    }

    const sql = `
      SELECT 
          a.id,
          a.name,
          a.depart_id,
          d.name AS department_name,
          a.unit_id,
          u.name AS unit_name,
          a.description,
          TO_CHAR(a.date_create, 'YYYY-MM-DD HH24:MI:SS') AS date_create,
          a.version,
          a.stable,
          a.creator_id,
          a.last_editor_id
      FROM ALBUM a
      LEFT JOIN DEPARTMENT d ON a.depart_id = d.id
      LEFT JOIN UNIT u ON a.unit_id = u.id
      WHERE a.id = :albumId
    `;

    const params = { albumId };
    const result = await queryDatabase(sql, params);

    if (result.rows.length === 0) {
      return res.status(404).json({ error: "–ê–ª—å–±–æ–º –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ" });
    }

    res.status(200).json(result.rows[0]);
  } catch (error) {
    console.error("–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–ª—å–±–æ–º—É:", error);
    res.status(500).json({ error: "Internal Server Error" });
  }
}
```

---

### **3. –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó `fetchAlbumById` —É `utils/api.js`**
```javascript
export const fetchAlbumById = async (albumId) => {
  const response = await fetch(`/api/rest/getAlbumById?albumId=${albumId}`);
  if (!response.ok) {
    throw new Error("–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–ª—å–±–æ–º—É");
  }
  return response.json();
};
```

---

### **–Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î?**
1Ô∏è‚É£ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –≤–∏–∫–ª–∏–∫–∞—î `fetchAlbumById(albumId)`.  
2Ô∏è‚É£ –í–∏–∫–æ–Ω—É—î—Ç—å—Å—è `GET` –∑–∞–ø–∏—Ç –Ω–∞ **`/api/rest/getAlbumById?albumId={albumId}`**.  
3Ô∏è‚É£ **SQL-–∑–∞–ø–∏—Ç** –≤–∏—Ç—è–≥—É—î –≤—Å—ñ –¥–∞–Ω—ñ –ø—Ä–æ –∞–ª—å–±–æ–º + –Ω–∞–∑–≤–∏ –≤—ñ–¥–¥—ñ–ª—É —Ç–∞ –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—É.  
4Ô∏è‚É£ –Ø–∫—â–æ –∞–ª—å–±–æ–º –∑–Ω–∞–π–¥–µ–Ω–æ ‚Üí API –ø–æ–≤–µ—Ä—Ç–∞—î –π–æ–≥–æ —É `JSON` —Ñ–æ—Ä–º–∞—Ç—ñ.  
5Ô∏è‚É£ –Ø–∫—â–æ **–∞–ª—å–±–æ–º –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ**, –ø–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è `404`.  
6Ô∏è‚É£ –Ø–∫—â–æ –≤–∏–Ω–∏–∫–∞—î –ø–æ–º–∏–ª–∫–∞ ‚Üí –ø–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è `500 Internal Server Error`.  

---

–¶–µ –¥–æ–∑–≤–æ–ª—è—î **–æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–æ** –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∞–ª—å–±–æ–º —á–µ—Ä–µ–∑ **–æ–∫—Ä–µ–º–∏–π API endpoint**! üöÄ  
–î–∞–π –∑–Ω–∞—Ç–∏, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –∑–º—ñ–Ω–∏. üòä