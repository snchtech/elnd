### **1. SQL-–∑–∞–ø–∏—Ç –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∞–ª—å–±–æ–º—É**
```sql
UPDATE ALBUM
SET 
    name = :name,
    unit_id = :unitId,
    description = :description,
    last_editor_id = :editorId,
    date_update = SYSDATE
WHERE id = :albumId
RETURNING date_update INTO :updatedAt;
```

---

### **2. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ endpoint `/pages/api/rest/updateAlbum.js`**
```javascript
import { queryDatabase } from "@/utils/db";

export default async function handler(req, res) {
  if (req.method !== "PUT") {
    return res.status(405).json({ error: "Method Not Allowed" });
  }

  try {
    const { albumId, name, unitId, description, editorId } = req.body;

    if (!albumId || !name || !unitId || !editorId) {
      return res.status(400).json({ error: "–ó–∞–ø–æ–≤–Ω—ñ—Ç—å –≤—Å—ñ –æ–±–æ–≤'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è" });
    }

    const sql = `
      UPDATE ALBUM
      SET 
          name = :name,
          unit_id = :unitId,
          description = :description,
          last_editor_id = :editorId,
          date_update = SYSDATE
      WHERE id = :albumId
      RETURNING TO_CHAR(date_update, 'YYYY-MM-DD HH24:MI:SS') INTO :updatedAt
    `;

    const params = { albumId, name, unitId, description, editorId, updatedAt: { dir: "out", type: "STRING" } };
    const result = await queryDatabase(sql, params);

    res.status(200).json({ success: true, updatedAt: result.outBinds.updatedAt });
  } catch (error) {
    console.error("–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–ª—å–±–æ–º—É:", error);
    res.status(500).json({ error: "Internal Server Error" });
  }
}
```

---

### **3. –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó `updateAlbum` —É `utils/api.js`**
```javascript
export const updateAlbum = async (albumId, albumData) => {
  const response = await fetch("/api/rest/updateAlbum", {
    method: "PUT",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ albumId, ...albumData }),
  });

  if (!response.ok) {
    throw new Error("–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–ª—å–±–æ–º—É");
  }

  return response.json();
};
```

---

### **–Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î?**
1Ô∏è‚É£ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –≤–∏–∫–ª–∏–∫–∞—î `updateAlbum(albumId, { name, unitId, description, editorId })`.  
2Ô∏è‚É£ –í–∏–∫–æ–Ω—É—î—Ç—å—Å—è `PUT` –∑–∞–ø–∏—Ç –Ω–∞ **`/api/rest/updateAlbum`**.  
3Ô∏è‚É£ **SQL-–∑–∞–ø–∏—Ç** –æ–Ω–æ–≤–ª—é—î **–Ω–∞–∑–≤—É, unit, –æ–ø–∏—Å, –¥–∞—Ç—É –æ–Ω–æ–≤–ª–µ–Ω–Ω—è** —Ç–∞ **–æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞**.  
4Ô∏è‚É£ –ü–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è –æ–Ω–æ–≤–ª–µ–Ω–∞ `date_update` (—É —Ñ–æ—Ä–º–∞—Ç—ñ `YYYY-MM-DD HH24:MI:SS`).  
5Ô∏è‚É£ –Ø–∫—â–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–µ ‚Üí **API –ø–æ–≤–µ—Ä—Ç–∞—î `success: true` —ñ `updatedAt`**.  
6Ô∏è‚É£ –Ø–∫—â–æ –≤–∏–Ω–∏–∫–∞—î –ø–æ–º–∏–ª–∫–∞ ‚Üí –ø–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è `500 Internal Server Error`.  

---

### **–©–æ —â–µ –º–æ–∂–Ω–∞ –ø–æ–∫—Ä–∞—â–∏—Ç–∏?**
‚úÖ **–î–æ–¥–∞—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —Ä–æ–ª—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞**, —â–æ–± —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ –º—ñ–≥ —Ç—ñ–ª—å–∫–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä.  
‚úÖ **–õ–æ–≥—É–≤–∞—Ç–∏ –∑–º—ñ–Ω–∏** –≤ –æ–∫—Ä–µ–º—ñ–π —Ç–∞–±–ª–∏—Ü—ñ (`ALBUM_HISTORY`).  
‚úÖ **–ó–∞—Ö–∏—Å—Ç –≤—ñ–¥ –æ–¥–Ω–æ—á–∞—Å–Ω–æ–≥–æ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è**, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ —á–µ—Ä–µ–∑ `SELECT FOR UPDATE`.  

–¶–µ –≥–æ—Ç–æ–≤–µ API –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–ª—å–±–æ–º—É! üöÄ  
–Ø–∫—â–æ —î –Ω—é–∞–Ω—Å–∏ ‚Äî –ø–∏—Ç–∞–π! üòä