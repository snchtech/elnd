–û–Ω–æ–≤–ª–µ–Ω–∏–π –∫–æ–¥ **`AlbumPage`**, –¥–µ –¥–æ–¥–∞—î—Ç—å—Å—è **NewSchemeModal** —ñ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∫–Ω–æ–ø–∫—É **"–ù–æ–≤–∏–π –∞—Ä–∫—É—à"**.

---

### **–û–Ω–æ–≤–ª–µ–Ω–∏–π –∫–æ–¥ `AlbumPage.js`**
```tsx
import { useState, useEffect } from "react";
import { useRouter } from "next/router";
import {
  Box, Button, Typography, IconButton, Paper, Tab, Tabs
} from "@mui/material";
import {
  ArrowBack, Description, PictureAsPdf, Print, Add, Layers
} from "@mui/icons-material";
import NavigationTree from "@/components/NavigationTree";
import AlbumEditForm from "@/components/AlbumEditForm";
import SchemeReport from "@/components/SchemeReport";
import SearchComponent from "@/components/SearchComponent";
import NewSchemeModal from "@/components/NewSchemeModal";
import { fetchAlbumById } from "@/utils/api";

const AlbumPage = () => {
  const router = useRouter();
  const { albumId, mode } = router.query;
  const [album, setAlbum] = useState(null);
  const [activeTab, setActiveTab] = useState(0);
  const [isNewSchemeModalOpen, setIsNewSchemeModalOpen] = useState(false);

  useEffect(() => {
    if (albumId) {
      const loadAlbum = async () => {
        try {
          const data = await fetchAlbumById(albumId);
          setAlbum(data);
        } catch (error) {
          console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞–ª—å–±–æ–º—É:", error);
        }
      };

      loadAlbum();
    }
  }, [albumId]);

  const handleOpenNewSchemeModal = () => {
    setIsNewSchemeModalOpen(true);
  };

  const handleCloseNewSchemeModal = () => {
    setIsNewSchemeModalOpen(false);
  };

  if (!album) {
    return <Typography variant="h6">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</Typography>;
  }

  return (
    <Box display="flex" height="100vh">
      {/* –õ—ñ–≤–∞ –ø–∞–Ω–µ–ª—å */}
      <Box width="300px" p={2} borderRight="1px solid #ddd">
        <Tabs value={activeTab} onChange={(e, newValue) => setActiveTab(newValue)} variant="fullWidth">
          <Tab label="–ù–∞–≤—ñ–≥–∞—Ü—ñ—è" />
          <Tab label="–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∞–ª—å–±–æ–º—É" />
        </Tabs>

        <Box hidden={activeTab !== 0}>
          <NavigationTree albumId={albumId} />
        </Box>
        <Box hidden={activeTab !== 1}>
          <AlbumEditForm albumId={albumId} />
        </Box>
      </Box>

      {/* –û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <Box flexGrow={1} p={3}>
        {/* –í–µ—Ä—Ö–Ω—è –ø–∞–Ω–µ–ª—å */}
        <Box display="flex" alignItems="center" mb={2} gap={1}>
          <IconButton onClick={() => router.push("/albums")} title="–î–æ –∫–∞—Ç–∞–ª–æ–≥—É –∞–ª—å–±–æ–º—ñ–≤">
            <ArrowBack />
          </IconButton>
          <SearchComponent />
          <IconButton title="–í–µ—Ä—Å—ñ—ó –∞–ª—å–±–æ–º—É">
            <Layers />
          </IconButton>
          <IconButton title="–î–æ–∫—É–º–µ–Ω—Ç–∏ –∞–ª—å–±–æ–º—É">
            <Description />
          </IconButton>
          <IconButton title="–ï–∫—Å–ø–æ—Ä—Ç –∞–ª—å–±–æ–º—É">
            <PictureAsPdf />
          </IconButton>
          <IconButton title="–î—Ä—É–∫ –∞–ª—å–±–æ–º—É">
            <Print />
          </IconButton>
          <Button
            variant="contained"
            startIcon={<Add />}
            title="–ù–æ–≤–∏–π –∞—Ä–∫—É—à –∞–ª—å–±–æ–º—É —Å—Ö–µ–º"
            onClick={handleOpenNewSchemeModal}
          >
            –ù–æ–≤–∏–π –∞—Ä–∫—É—à
          </Button>
        </Box>

        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <Paper sx={{ p: 2, mb: 2, textAlign: "center" }}>
          <Typography variant="h5">–°–ø–∏—Å–æ–∫ —Å—Ö–µ–º –∞–ª—å–±–æ–º—É {album.name}</Typography>
        </Paper>

        {/* –ë–ª–æ–∫ –∑–≤—ñ—Ç—É */}
        <SchemeReport albumId={albumId} userRole={album.userRole} mode={mode} />

        {/* –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ—ó —Å—Ö–µ–º–∏ */}
        <NewSchemeModal open={isNewSchemeModalOpen} onClose={handleCloseNewSchemeModal} onSchemeCreated={() => {}} />
      </Box>
    </Box>
  );
};

export default AlbumPage;
```

---

### **–©–æ –∑–º—ñ–Ω–∏–ª–æ—Å—å?**
‚úÖ **–î–æ–¥–∞–Ω–æ `useState` –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—é –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞** (`isNewSchemeModalOpen`).  
‚úÖ **–ö–Ω–æ–ø–∫–∞ "–ù–æ–≤–∏–π –∞—Ä–∫—É—à" —Ç–µ–ø–µ—Ä –≤—ñ–¥–∫—Ä–∏–≤–∞—î `NewSchemeModal` –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ**.  
‚úÖ **–ü–µ—Ä–µ–¥–∞—î–º–æ `albumId` —É `NewSchemeModal`** –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –≤–∏–±–æ—Ä—É –∞–ª—å–±–æ–º—É.  
‚úÖ **–ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∑–∞–∫—Ä–∏–≤–∞—î—Ç—å—Å—è –ø—ñ—Å–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ö–µ–º–∏**.  

–ì–æ—Ç–æ–≤–æ! üéØ **–¢–µ–ø–µ—Ä –∫–Ω–æ–ø–∫–∞ "–ù–æ–≤–∏–π –∞—Ä–∫—É—à" –≤—ñ–¥–∫—Ä–∏–≤–∞—î `NewSchemeModal` —É Next.js!** üöÄ  
–Ø–∫—â–æ —î —â–µ –ø–∏—Ç–∞–Ω–Ω—è —á–∏ –Ω—é–∞–Ω—Å–∏ ‚Äî –ø–∏—Ç–∞–π! üòä