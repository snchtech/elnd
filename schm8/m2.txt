–î–∞–≤–∞–π –¥–æ–¥–∞–º–æ –¥–æ –ª—ñ–≤–æ–≥–æ —Å–∞–π–¥–±–∞—Ä—É —â–µ –æ–¥–∏–Ω –±–ª–æ–∫ **"–®–∞—Ä–∏ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è"** —ñ–∑ —á–µ–∫–±–æ–∫—Å–∞–º–∏, –∞ —Ç–∞–∫–æ–∂ —Ä–µ–∞–ª—ñ–∑—É—î–º–æ –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–≥–æ—Ä—Ç–∞–Ω–Ω—è/—Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è –≤—Å—å–æ–≥–æ —Å–∞–π–¥–±–∞—Ä—É.

---

## üì¶ **–û–Ω–æ–≤–ª–µ–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤**

```
components/
‚îú‚îÄ‚îÄ Editor/
‚îÇ   ‚îú‚îÄ‚îÄ LeftSidebar/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ LayersVisibility.js      // ‚úÖ –ù–æ–≤–∏–π –±–ª–æ–∫ "–®–∞—Ä–∏ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è"
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ SchemeSelector.js        
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ SchemeInfoCard.js        
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ PersonalElements.js      
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ StandardElements.js      
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ DepartmentElements.js    
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ TextElements.js          
‚îÇ   ‚îú‚îÄ‚îÄ LeftSidebar.js               // –û–Ω–æ–≤–ª–µ–Ω–∞ –ª—ñ–≤–∞ –ø–∞–Ω–µ–ª—å
‚îÇ   ‚îî‚îÄ‚îÄ TopNavBar.js
pages/
‚îî‚îÄ‚îÄ editor/
    ‚îî‚îÄ‚îÄ index.js                    
```

---

## 1Ô∏è‚É£ **LayersVisibility.js** (–ë–ª–æ–∫ "–®–∞—Ä–∏ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è")

```javascript
import React, { useState } from 'react';
import { FormControlLabel, Checkbox, FormGroup } from '@mui/material';

const LayersVisibility = ({ onLayerChange }) => {
  const [layers, setLayers] = useState({
    textFields: true,
    options: true,
    rooms: true,
    devices: true,
  });

  const handleChange = (event) => {
    const { name, checked } = event.target;
    const updatedLayers = { ...layers, [name]: checked };
    setLayers(updatedLayers);
    onLayerChange(updatedLayers);  // –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–º—ñ–Ω–∏
  };

  return (
    <FormGroup>
      <FormControlLabel
        control={<Checkbox checked={layers.textFields} onChange={handleChange} name="textFields" />}
        label="–¢–µ–∫—Å—Ç–æ–≤—ñ –ø–æ–ª—è"
      />
      <FormControlLabel
        control={<Checkbox checked={layers.options} onChange={handleChange} name="options" />}
        label="–û–ø—Ü—ñ—ó"
      />
      <FormControlLabel
        control={<Checkbox checked={layers.rooms} onChange={handleChange} name="rooms" />}
        label="–ü—Ä–∏–º—ñ—â–µ–Ω–Ω—è"
      />
      <FormControlLabel
        control={<Checkbox checked={layers.devices} onChange={handleChange} name="devices" />}
        label="–í–∏–º—ñ—Ä—é–≤–∞–ª—å–Ω—ñ –ø—Ä–∏–ª–∞–¥–∏"
      />
    </FormGroup>
  );
};

export default LayersVisibility;
```

---

## 2Ô∏è‚É£ **–û–Ω–æ–≤–ª–µ–Ω–∏–π LeftSidebar.js** (–î–æ–¥–∞–Ω–∞ –ø–∞–Ω–µ–ª—å —à–∞—Ä—ñ–≤ + –∫–Ω–æ–ø–∫–∞ –∑–≥–æ—Ä—Ç–∞–Ω–Ω—è)

```javascript
'use client';
import React, { useState } from 'react';
import { Box, Accordion, AccordionSummary, AccordionDetails, Typography, IconButton, Divider } from '@mui/material';
import ExpandMoreIcon from '@mui/icons-material/ExpandMore';
import ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';
import ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';
import SchemeSelector from './LeftSidebar/SchemeSelector';
import SchemeInfoCard from './LeftSidebar/SchemeInfoCard';
import PersonalElements from './LeftSidebar/PersonalElements';
import StandardElements from './LeftSidebar/StandardElements';
import DepartmentElements from './LeftSidebar/DepartmentElements';
import TextElements from './LeftSidebar/TextElements';
import LayersVisibility from './LeftSidebar/LayersVisibility';

const LeftSidebar = ({ onLayerChange }) => {
  const [expanded, setExpanded] = useState(['schemeSelector', 'infoCard']);
  const [isSidebarVisible, setIsSidebarVisible] = useState(true); // –°—Ç–∞–Ω –¥–ª—è –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è

  const handleExpand = (panel) => (event, isExpanded) => {
    setExpanded(isExpanded ? [...expanded, panel] : expanded.filter((p) => p !== panel));
  };

  const toggleSidebar = () => {
    setIsSidebarVisible(!isSidebarVisible);
  };

  return (
    <Box sx={{ display: 'flex' }}>
      {isSidebarVisible && (
        <Box sx={{ width: 300, height: '100vh', overflowY: 'auto', backgroundColor: '#f5f5f5', padding: 2 }}>
          {/* –í–∏–±—ñ—Ä —Å—Ö–µ–º–∏ */}
          <Accordion expanded={expanded.includes('schemeSelector')} onChange={handleExpand('schemeSelector')}>
            <AccordionSummary expandIcon={<ExpandMoreIcon />}>
              <Typography>–í–∏–±—ñ—Ä —Å—Ö–µ–º–∏</Typography>
            </AccordionSummary>
            <AccordionDetails>
              <SchemeSelector />
            </AccordionDetails>
          </Accordion>

          {/* –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω–∞ –∫–∞—Ä—Ç–∫–∞ —Å—Ö–µ–º–∏ */}
          <Accordion expanded={expanded.includes('infoCard')} onChange={handleExpand('infoCard')}>
            <AccordionSummary expandIcon={<ExpandMoreIcon />}>
              <Typography>–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω–∞ –∫–∞—Ä—Ç–∫–∞ —Å—Ö–µ–º–∏</Typography>
            </AccordionSummary>
            <AccordionDetails>
              <SchemeInfoCard />
            </AccordionDetails>
          </Accordion>

          {/* –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ */}
          <Accordion expanded={expanded.includes('standardElements')} onChange={handleExpand('standardElements')}>
            <AccordionSummary expandIcon={<ExpandMoreIcon />}>
              <Typography>–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏</Typography>
            </AccordionSummary>
            <AccordionDetails>
              <StandardElements />
            </AccordionDetails>
          </Accordion>

          {/* –®–∞—Ä–∏ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è */}
          <Accordion expanded={expanded.includes('layersVisibility')} onChange={handleExpand('layersVisibility')}>
            <AccordionSummary expandIcon={<ExpandMoreIcon />}>
              <Typography>–®–∞—Ä–∏ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è</Typography>
            </AccordionSummary>
            <AccordionDetails>
              <LayersVisibility onLayerChange={onLayerChange} />
            </AccordionDetails>
          </Accordion>
        </Box>
      )}

      {/* –ö–Ω–æ–ø–∫–∞ –∑–≥–æ—Ä—Ç–∞–Ω–Ω—è/—Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è */}
      <IconButton
        onClick={toggleSidebar}
        sx={{
          height: '40px',
          width: '40px',
          margin: '10px',
          backgroundColor: '#ddd',
        }}
      >
        {isSidebarVisible ? <ArrowBackIosNewIcon /> : <ArrowForwardIosIcon />}
      </IconButton>
    </Box>
  );
};

export default LeftSidebar;
```

---

## 3Ô∏è‚É£ **–û–Ω–æ–≤–ª–µ–Ω–∏–π Editor Page (index.js)**

```javascript
'use client';
import dynamic from 'next/dynamic';
import LeftSidebar from '../../components/Editor/LeftSidebar';

const EditorCanvas = dynamic(() => import('../../components/Editor/EditorCanvas'), {
  ssr: false,
});

export default function EditorPage() {
  const handleLayerChange = (layers) => {
    console.log('–û–Ω–æ–≤–ª–µ–Ω—ñ —à–∞—Ä–∏:', layers);
    // –¢—É—Ç –º–æ–∂–Ω–∞ –ø–µ—Ä–µ–¥–∞—Ç–∏ —Å—Ç–∞–Ω —à–∞—Ä—ñ–≤ —É Canvas –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–∏–¥–∏–º–æ—Å—Ç—ñ
  };

  return (
    <div style={{ display: 'flex', height: '100vh' }}>
      <LeftSidebar onLayerChange={handleLayerChange} />
      <EditorCanvas />
    </div>
  );
}
```

---

## ‚úÖ **–©–æ –∑—Ä–æ–±–ª–µ–Ω–æ:**

1. **–î–æ–¥–∞–Ω–æ –±–ª–æ–∫ "–®–∞—Ä–∏ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è"** –∑ —á–µ–∫–±–æ–∫—Å–∞–º–∏.  
2. **–î–æ–¥–∞–Ω–æ –∫–Ω–æ–ø–∫—É** –¥–ª—è –∑–≥–æ—Ä—Ç–∞–Ω–Ω—è/—Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è –ª—ñ–≤–æ—ó –ø–∞–Ω–µ–ª—ñ.  
3. **–û–±—Ä–æ–±–∫–∞ —Å—Ç–∞–Ω—É —á–µ–∫–±–æ–∫—Å—ñ–≤** –ø–µ—Ä–µ–¥–∞—î—Ç—å—Å—è –≤ `EditorCanvas` –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—é –≤–∏–¥–∏–º–æ—Å—Ç—ñ —à–∞—Ä—ñ–≤.  

---

üìå **–ù–∞—Å—Ç—É–ø–Ω—ñ –∫—Ä–æ–∫–∏:**  
- –î–æ–¥–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è/–ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –Ω–∞ —Å—Ö–µ–º—ñ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –æ–±—Ä–∞–Ω–∏—Ö —á–µ–∫–±–æ–∫—Å—ñ–≤.  
- –†–æ–∑—à–∏—Ä–∏—Ç–∏ –±–ª–æ–∫–∏ —ñ–∑ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏–º–∏ —Ç–∞ –≤—ñ–¥–¥—ñ–ª—å–Ω–∏–º–∏ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏.  

–Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ ‚Äî –¥–∞–π –∑–Ω–∞—Ç–∏! üòâ