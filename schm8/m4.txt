–î–∞–≤–∞–π —Ä–µ–∞–ª—ñ–∑—É—î–º–æ –æ—Å–Ω–æ–≤–Ω—É —á–∞—Å—Ç–∏–Ω—É —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –∑ —É—Å—ñ–º–∞ –∑–∞–∑–Ω–∞—á–µ–Ω–∏–º–∏ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–º–∏ –±–ª–æ–∫–∞–º–∏. –ú–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—î–º–æ **Material UI** –¥–ª—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É —ñ **React-Konva** –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –≥—Ä–∞—Ñ—ñ–∫–æ—é.

---

### üì¶ **–û–Ω–æ–≤–ª–µ–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤**

```
components/
‚îú‚îÄ‚îÄ Editor/
‚îÇ   ‚îú‚îÄ‚îÄ CanvasArea/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ CanvasHeader.js         // –ü—ñ–¥–ø–∏—Å–∏ –¥–æ —Å—Ö–µ–º–∏ (–®–∏—Ñ—Ä –∞–ª—å–±–æ–º—É, –ü—É–Ω–∫—Ç —Ç–æ—â–æ)
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ KonvaStage.js           // –ì–æ–ª–æ–≤–Ω–∞ –∫–∞–Ω–≤–∞ Konva
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ SchemeTable.js          // –¢–∞–±–ª–∏—Ü—è –¥–ª—è –ø–æ–∑–∏—Ü—ñ–π
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ NotesBlock.js           // –ë–ª–æ–∫ –¥–ª—è –ø—Ä–∏–º—ñ—Ç–∫–∏
‚îÇ   ‚îú‚îÄ‚îÄ Modals/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ AddTableModal.js        // –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ AddNoteModal.js         // –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–∏–º—ñ—Ç–∫–∏
‚îÇ   ‚îî‚îÄ‚îÄ CanvasArea.js               // –û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–∞–Ω–≤–∏
```

---

## 1Ô∏è‚É£ **CanvasHeader.js** (–ü—ñ–¥–ø–∏—Å–∏ –¥–æ —Å—Ö–µ–º–∏)

```javascript
import React from 'react';
import { Box, Typography } from '@mui/material';

const CanvasHeader = ({ albumCode, point, system, schemeName, sheetNumber }) => {
  return (
    <Box sx={{ position: 'absolute', top: 10, left: 10 }}>
      <Typography variant="subtitle2">–®–∏—Ñ—Ä –∞–ª—å–±–æ–º—É: {albumCode}</Typography>
      <Typography variant="subtitle2">–ü—É–Ω–∫—Ç: {point}</Typography>
      <Typography variant="subtitle2">–°–∏—Å—Ç–µ–º–∞: {system}</Typography>
      <Typography variant="subtitle2">–ù–∞–∑–≤–∞ —Å—Ö–µ–º–∏: {schemeName}</Typography>
      <Typography variant="subtitle2">–ê—Ä–∫—É—à: {sheetNumber}</Typography>
    </Box>
  );
};

export default CanvasHeader;
```

---

## 2Ô∏è‚É£ **KonvaStage.js** (–û—Å–Ω–æ–≤–Ω–∞ –∫–∞–Ω–≤–∞)

```javascript
import React, { useRef } from 'react';
import { Stage, Layer } from 'react-konva';

const KonvaStage = ({ width, height, elements, onSelectElement }) => {
  const stageRef = useRef();

  return (
    <Stage
      width={width}
      height={height}
      style={{ border: '1px solid black', backgroundColor: '#fff' }}
      ref={stageRef}
    >
      <Layer>
        {elements.map((el) => {
          const ElementComponent = el.component;
          return (
            <ElementComponent
              key={el.id}
              {...el.props}
              onClick={() => onSelectElement(el.id)}
            />
          );
        })}
      </Layer>
    </Stage>
  );
};

export default KonvaStage;
```

---

## 3Ô∏è‚É£ **SchemeTable.js** (–¢–∞–±–ª–∏—Ü—è –ø–æ–∑–∏—Ü—ñ–π)

```javascript
import React from 'react';
import { Table, TableBody, TableCell, TableHead, TableRow, IconButton, Box, Button } from '@mui/material';
import AddIcon from '@mui/icons-material/Add';

const SchemeTable = ({ rows, onAddRow }) => {
  return (
    <Box sx={{ position: 'absolute', bottom: 10, right: 10 }}>
      <Table size="small" sx={{ border: '1px solid black' }}>
        <TableHead>
          <TableRow>
            <TableCell>–ü–æ–∑–∏—Ü—ñ—è</TableCell>
            <TableCell>–ü–æ–∑–Ω–∞—á–µ–Ω–Ω—è</TableCell>
            <TableCell>–ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è</TableCell>
            <TableCell>–ö—ñ–ª—å–∫—ñ—Å—Ç—å</TableCell>
            <TableCell>–ü—Ä–∏–º—ñ—Ç–∫–∞</TableCell>
          </TableRow>
        </TableHead>
        <TableBody>
          {rows.map((row, index) => (
            <TableRow key={index}>
              <TableCell>{row.position}</TableCell>
              <TableCell>{row.designation}</TableCell>
              <TableCell>{row.name}</TableCell>
              <TableCell>{row.quantity}</TableCell>
              <TableCell>{row.note}</TableCell>
            </TableRow>
          ))}
        </TableBody>
      </Table>

      <Button
        variant="outlined"
        startIcon={<AddIcon />}
        onClick={onAddRow}
        sx={{ mt: 1 }}
      >
        –î–æ–¥–∞—Ç–∏ —Ä—è–¥–æ–∫
      </Button>
    </Box>
  );
};

export default SchemeTable;
```

---

## 4Ô∏è‚É£ **NotesBlock.js** (–ë–ª–æ–∫ –ø—Ä–∏–º—ñ—Ç–∫–∏)

```javascript
import React from 'react';
import { Box, Typography } from '@mui/material';

const NotesBlock = ({ note }) => {
  return (
    <Box sx={{ position: 'absolute', bottom: 120, right: 10, border: '1px dashed gray', padding: 1 }}>
      <Typography variant="caption">–ü—Ä–∏–º—ñ—Ç–∫–∞:</Typography>
      <Typography variant="body2">{note}</Typography>
    </Box>
  );
};

export default NotesBlock;
```

---

## 5Ô∏è‚É£ **AddTableModal.js** (–ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ñ)

```javascript
import React, { useState } from 'react';
import { Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField } from '@mui/material';

const AddTableModal = ({ open, onClose, onAddRow }) => {
  const [row, setRow] = useState({ position: '', designation: '', name: '', quantity: '', note: '' });

  const handleChange = (field) => (e) => {
    setRow({ ...row, [field]: e.target.value });
  };

  const handleSubmit = () => {
    onAddRow(row);
    onClose();
  };

  return (
    <Dialog open={open} onClose={onClose}>
      <DialogTitle>–î–æ–¥–∞—Ç–∏ —Ä—è–¥–æ–∫ –¥–æ —Ç–∞–±–ª–∏—Ü—ñ</DialogTitle>
      <DialogContent>
        <TextField label="–ü–æ–∑–∏—Ü—ñ—è" fullWidth margin="dense" onChange={handleChange('position')} />
        <TextField label="–ü–æ–∑–Ω–∞—á–µ–Ω–Ω—è" fullWidth margin="dense" onChange={handleChange('designation')} />
        <TextField label="–ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è" fullWidth margin="dense" onChange={handleChange('name')} />
        <TextField label="–ö—ñ–ª—å–∫—ñ—Å—Ç—å" fullWidth margin="dense" onChange={handleChange('quantity')} />
        <TextField label="–ü—Ä–∏–º—ñ—Ç–∫–∞" fullWidth margin="dense" onChange={handleChange('note')} />
      </DialogContent>
      <DialogActions>
        <Button onClick={onClose}>–°–∫–∞—Å—É–≤–∞—Ç–∏</Button>
        <Button onClick={handleSubmit}>–î–æ–¥–∞—Ç–∏</Button>
      </DialogActions>
    </Dialog>
  );
};

export default AddTableModal;
```

---

## 6Ô∏è‚É£ **CanvasArea.js** (–û—Å–Ω–æ–≤–Ω–∏–π –±–ª–æ–∫)

```javascript
import React, { useState } from 'react';
import KonvaStage from './CanvasArea/KonvaStage';
import CanvasHeader from './CanvasArea/CanvasHeader';
import SchemeTable from './CanvasArea/SchemeTable';
import NotesBlock from './CanvasArea/NotesBlock';
import AddTableModal from './Modals/AddTableModal';

const CanvasArea = () => {
  const [elements, setElements] = useState([]);
  const [rows, setRows] = useState([]);
  const [note, setNote] = useState('');
  const [isTableModalOpen, setTableModalOpen] = useState(false);

  const handleAddRow = (row) => {
    setRows([...rows, row]);
  };

  return (
    <div style={{ position: 'relative', width: '1123px', height: '794px', margin: 'auto', border: '1px solid black' }}>
      <CanvasHeader albumCode="3.–¢–¢.000-–°–®" point="55" system="–°1" schemeName="–°—Ö–µ–º–∞ —Ä–æ–∑–º—ñ—â–µ–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏ –°1" sheetNumber="3" />
      <KonvaStage width={1123} height={794} elements={elements} />
      <SchemeTable rows={rows} onAddRow={() => setTableModalOpen(true)} />
      <NotesBlock note={note} />
      <AddTableModal open={isTableModalOpen} onClose={() => setTableModalOpen(false)} onAddRow={handleAddRow} />
    </div>
  );
};

export default CanvasArea;
```

---

## ‚úÖ **–§—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª**

- **–†–∞–º–∫–∞** 1px —ñ –ø—ñ–¥–ø–∏—Å–∏ –∑–≥–æ—Ä–∏.  
- **–¢–∞–±–ª–∏—Ü—è** –∑ –¥–æ–¥–∞–≤–∞–Ω–Ω—è–º —Ä—è–¥–∫—ñ–≤.  
- **–ü—Ä–∏–º—ñ—Ç–∫–∞** –Ω–∞–¥ —Ç–∞–±–ª–∏—Ü–µ—é.

–ì–æ—Ç–æ–≤–∏–π –¥–æ–¥–∞—Ç–∏ –±—ñ–ª—å—à–µ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—É! üòâ