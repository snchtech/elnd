–î–∞–≤–∞–π —Ä–µ–∞–ª—ñ–∑—É—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É **Creator** –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ—ó —Å—Ö–µ–º–∏. –ú–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—î–º–æ **Material UI** –¥–ª—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É, –∑–∞–±–µ–∑–ø–µ—á–∏–º–æ **–≤–∞–ª—ñ–¥–∞—Ü—ñ—é** —Ñ–æ—Ä–º–∏, –∞ —Ç–∞–∫–æ–∂ —Ä–µ–∞–ª—ñ–∑—É—î–º–æ –ª–æ–≥—ñ–∫—É –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å—Ö–µ–º–∏ –≤ –±–∞–∑—É –¥–∞–Ω–∏—Ö **Oracle** —Ç–∞ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É **Editor**.

---

### üìÇ **–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç—É**

```
components/
‚îú‚îÄ‚îÄ Creator/
‚îÇ   ‚îú‚îÄ‚îÄ CreatorForm.js      // –§–æ—Ä–º–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ö–µ–º–∏
‚îÇ   ‚îî‚îÄ‚îÄ CreatorPage.js      // –û—Å–Ω–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ Creator
api/
‚îú‚îÄ‚îÄ createScheme.js         // API –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å—Ö–µ–º–∏ –≤ –ë–î
pages/
‚îú‚îÄ‚îÄ creator/
‚îÇ   ‚îî‚îÄ‚îÄ index.js            // Next.js —Å—Ç–æ—Ä—ñ–Ω–∫–∞ Creator
```

---

## 1Ô∏è‚É£ **CreatorForm.js** (–§–æ—Ä–º–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ö–µ–º–∏)

```javascript
import React, { useState, useEffect } from 'react';
import {
  Box, Button, TextField, Select, MenuItem, InputLabel,
  FormControl, Typography, Snackbar, Alert
} from '@mui/material';
import { useRouter } from 'next/navigation';

const CreatorForm = () => {
  const router = useRouter();

  // –°—Ç–∞–Ω —Ñ–æ—Ä–º–∏
  const [formData, setFormData] = useState({
    album: '',
    schemeName: '',
    department: '',
    unit: '',
    format: '',
    description: ''
  });

  // –°—Ç–∞–Ω –¥–ª—è —Å–µ–ª–µ–∫—Ç—ñ–≤ (–ø–æ–∫–∏ –ø–æ—Ä–æ–∂–Ω—ñ)
  const [albums, setAlbums] = useState([]);
  const [departments, setDepartments] = useState([]);
  const [units, setUnits] = useState([]);
  const [formats, setFormats] = useState(['A4', 'A3', 'A2', 'A1', 'A0']);

  const [error, setError] = useState('');
  const [success, setSuccess] = useState('');

  // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –¥–ª—è —Å–µ–ª–µ–∫—Ç—ñ–≤
  useEffect(() => {
    // –ü–æ–∫–∏ –¥–∞–Ω—ñ —Ñ—ñ–∫—Ç–∏–≤–Ω—ñ, –ø—ñ–∑–Ω—ñ—à–µ –±—É–¥—É—Ç—å –∑ –ë–î
    setAlbums([{ id: 1, name: '–ê–ª—å–±–æ–º 1' }, { id: 2, name: '–ê–ª—å–±–æ–º 2' }]);
    setDepartments([{ id: 1, name: '–¢–¶' }, { id: 2, name: '–†–¶' }]);
    setUnits([{ id: 1, name: '–ü—É–Ω–∫—Ç 1' }, { id: 2, name: '–ü—É–Ω–∫—Ç 2' }]);
  }, []);

  // –û–±—Ä–æ–±–Ω–∏–∫ –∑–º—ñ–Ω–∏ –ø–æ–ª—ñ–≤
  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData((prev) => ({ ...prev, [name]: value }));
  };

  // –í–∞–ª—ñ–¥–∞—Ü—ñ—è —Ñ–æ—Ä–º–∏
  const validateForm = () => {
    const { album, schemeName, department, unit, format } = formData;
    if (!album || !schemeName || !department || !unit || !format) {
      setError('–í—Å—ñ –ø–æ–ª—è (–∫—Ä—ñ–º –æ–ø–∏—Å—É) –æ–±–æ–≤ º—è–∑–∫–æ–≤—ñ –¥–ª—è –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è.');
      return false;
    }
    return true;
  };

  // –û–±—Ä–æ–±–∫–∞ —Å–∞–±–º—ñ—Ç—É —Ñ–æ—Ä–º–∏
  const handleSubmit = async (e) => {
    e.preventDefault();

    if (!validateForm()) return;

    try {
      const response = await fetch('/api/createScheme', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(formData),
      });

      const result = await response.json();

      if (response.ok) {
        setSuccess('–°—Ö–µ–º—É —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!');
        router.push(`/editor?id=${result.scheme_id}`);
      } else {
        setError(result.message || '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ —Å—Ö–µ–º–∏.');
      }
    } catch (err) {
      setError('–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è.');
    }
  };

  return (
    <Box sx={{ width: '500px', margin: 'auto', padding: 4, boxShadow: 3, borderRadius: 2 }}>
      <Typography variant="h5" gutterBottom>–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ—ó —Å—Ö–µ–º–∏</Typography>
      
      <form onSubmit={handleSubmit}>
        {/* –ê–ª—å–±–æ–º */}
        <FormControl fullWidth margin="normal">
          <InputLabel>–ê–ª—å–±–æ–º</InputLabel>
          <Select name="album" value={formData.album} onChange={handleChange}>
            {albums.map((album) => (
              <MenuItem key={album.id} value={album.id}>{album.name}</MenuItem>
            ))}
          </Select>
        </FormControl>

        {/* –ù–∞–∑–≤–∞ —Å—Ö–µ–º–∏ */}
        <TextField
          label="–ù–∞–∑–≤–∞ —Å—Ö–µ–º–∏"
          name="schemeName"
          value={formData.schemeName}
          onChange={handleChange}
          fullWidth
          margin="normal"
          required
        />

        {/* –í—ñ–¥–¥—ñ–ª */}
        <FormControl fullWidth margin="normal">
          <InputLabel>–í—ñ–¥–¥—ñ–ª</InputLabel>
          <Select name="department" value={formData.department} onChange={handleChange}>
            {departments.map((dep) => (
              <MenuItem key={dep.id} value={dep.id}>{dep.name}</MenuItem>
            ))}
          </Select>
        </FormControl>

        {/* –ü—É–Ω–∫—Ç */}
        <FormControl fullWidth margin="normal">
          <InputLabel>–ü—É–Ω–∫—Ç</InputLabel>
          <Select name="unit" value={formData.unit} onChange={handleChange}>
            {units.map((unit) => (
              <MenuItem key={unit.id} value={unit.id}>{unit.name}</MenuItem>
            ))}
          </Select>
        </FormControl>

        {/* –§–æ—Ä–º–∞—Ç */}
        <FormControl fullWidth margin="normal">
          <InputLabel>–§–æ—Ä–º–∞—Ç</InputLabel>
          <Select name="format" value={formData.format} onChange={handleChange}>
            {formats.map((fmt) => (
              <MenuItem key={fmt} value={fmt}>{fmt}</MenuItem>
            ))}
          </Select>
        </FormControl>

        {/* –û–ø–∏—Å */}
        <TextField
          label="–û–ø–∏—Å"
          name="description"
          value={formData.description}
          onChange={handleChange}
          fullWidth
          multiline
          rows={3}
          margin="normal"
        />

        {/* –ö–Ω–æ–ø–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è */}
        <Button type="submit" variant="contained" fullWidth sx={{ mt: 2 }}>
          –°—Ç–≤–æ—Ä–∏—Ç–∏
        </Button>
      </form>

      {/* –í–∏–≤—ñ–¥ –ø–æ–º–∏–ª–æ–∫ –∞–±–æ —É—Å–ø—ñ—Ö—É */}
      {error && <Snackbar open autoHideDuration={6000}><Alert severity="error">{error}</Alert></Snackbar>}
      {success && <Snackbar open autoHideDuration={6000}><Alert severity="success">{success}</Alert></Snackbar>}
    </Box>
  );
};

export default CreatorForm;
```

---

## 2Ô∏è‚É£ **API: createScheme.js**

```javascript
import oracledb from 'oracledb';
import dbConfig from '../../config/dbConfig';

export default async function handler(req, res) {
  if (req.method !== 'POST') {
    return res.status(405).json({ message: '–ú–µ—Ç–æ–¥ –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è' });
  }

  const { album, schemeName, department, unit, format, description } = req.body;

  try {
    const connection = await oracledb.getConnection(dbConfig);

    const result = await connection.execute(
      `INSERT INTO scheme (scheme_album_id, scheme_name, scheme_department, scheme_unit, scheme_format, scheme_description)
       VALUES (:album, :schemeName, :department, :unit, :format, :description)
       RETURNING id INTO :id`,
      { album, schemeName, department, unit, format, description, id: { dir: oracledb.BIND_OUT, type: oracledb.NUMBER } }
    );

    await connection.commit();
    res.status(200).json({ scheme_id: result.outBinds.id[0] });

  } catch (err) {
    res.status(500).json({ message: err.message });
  }
}
```

---

## ‚úÖ **–§—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª**

1. **–í–∞–ª—ñ–¥–∞—Ü—ñ—è –ø–æ–ª—ñ–≤** —Ñ–æ—Ä–º–∏.  
2. **–ó–∞–ø–∏—Å —Å—Ö–µ–º–∏** –≤ –ë–î Oracle.  
3. **–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è** –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É **Editor** –ø—ñ—Å–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è.

–Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –¥–æ–ø–æ–≤–Ω–µ–Ω–Ω—è ‚Äî —Å–∫–∞–∂–∏! üòâ