–©–æ–± —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ **–≤–∏–¥—ñ–ª–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ—á–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤** —ñ–∑ —Ä–∞–º–∫–æ—é —Ç–∞ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—é –º–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è, –ø–æ–≤–æ—Ä–æ—Ç—É —ñ –ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—î–º–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç **`Transformer`** –∑ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ **`react-konva`**. –¶–µ –¥–æ–∑–≤–æ–ª–∏—Ç—å –Ω–∞–º –¥–æ—Å—è–≥—Ç–∏ —Ç–∞–∫–æ–≥–æ –∂ –µ—Ñ–µ–∫—Ç—É, —è–∫ —É –≥—Ä–∞—Ñ—ñ—á–Ω–∏—Ö —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞—Ö (Visio, Figma, AutoCAD).

---

## üî• **1. –©–æ –º–∏ —Ä–µ–∞–ª—ñ–∑—É—î–º–æ**
- –í–∏–¥—ñ–ª–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ –∑ —Ä–∞–º–∫–æ—é –ø—Ä–∏ –∫–ª—ñ–∫—É.  
- –ú–æ–∂–ª–∏–≤—ñ—Å—Ç—å **–º–∞—Å—à—Ç–∞–±—É–≤–∞—Ç–∏** —ñ **–æ–±–µ—Ä—Ç–∞—Ç–∏** –µ–ª–µ–º–µ–Ω—Ç.  
- –í–∏–¥—ñ–ª–µ–Ω–Ω—è **–æ–¥–Ω–æ–≥–æ** –∞–±–æ **–¥–µ–∫—ñ–ª—å–∫–æ—Ö** –µ–ª–µ–º–µ–Ω—Ç—ñ–≤.  
- **–ó–Ω—è—Ç—Ç—è –≤–∏–¥—ñ–ª–µ–Ω–Ω—è** –ø—Ä–∏ –∫–ª—ñ–∫—É –Ω–∞ –ø–æ—Ä–æ–∂–Ω—é –æ–±–ª–∞—Å—Ç—å.

---

## üì¶ **–û–Ω–æ–≤–ª–µ–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç—É**

```
/components
  ‚îú‚îÄ‚îÄ GraphLibrary
  ‚îÇ     ‚îú‚îÄ‚îÄ GraphLibrary.js
  ‚îÇ     ‚îú‚îÄ‚îÄ elements
  ‚îÇ     ‚îÇ     ‚îú‚îÄ‚îÄ RectElement.js
  ‚îÇ     ‚îÇ     ‚îú‚îÄ‚îÄ CircleElement.js
  ‚îÇ     ‚îÇ     ‚îú‚îÄ‚îÄ LineElement.js
  ‚îÇ     ‚îÇ     ‚îî‚îÄ‚îÄ TextElement.js
  ‚îú‚îÄ‚îÄ Canvas
  ‚îÇ     ‚îú‚îÄ‚îÄ KonvaCanvas.js
  ‚îÇ     ‚îî‚îÄ‚îÄ TransformerComponent.js
  ‚îî‚îÄ‚îÄ LeftSidebar
        ‚îî‚îÄ‚îÄ StandardElements.js
```

---

## üîß **2. –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –≤–∏–¥—ñ–ª–µ–Ω–Ω—è ‚Äî Transformer**

### üìÑ **TransformerComponent.js**

```javascript
import React, { useEffect } from 'react';
import { Transformer } from 'react-konva';

const TransformerComponent = ({ selectedShape, stageRef }) => {
  const trRef = React.useRef();

  useEffect(() => {
    if (selectedShape && trRef.current) {
      trRef.current.nodes([selectedShape]);
      trRef.current.getLayer().batchDraw();
    }
  }, [selectedShape]);

  return (
    <Transformer
      ref={trRef}
      rotateEnabled={true}
      enabledAnchors={['top-left', 'top-right', 'bottom-left', 'bottom-right']}
      boundBoxFunc={(oldBox, newBox) => {
        // –û–±–º–µ–∂–µ–Ω–Ω—è –º—ñ–Ω—ñ–º–∞–ª—å–Ω–æ–≥–æ —Ä–æ–∑–º—ñ—Ä—É –µ–ª–µ–º–µ–Ω—Ç–∞
        if (newBox.width < 20 || newBox.height < 20) {
          return oldBox;
        }
        return newBox;
      }}
    />
  );
};

export default TransformerComponent;
```

**üîë –ü–æ—è—Å–Ω–µ–Ω–Ω—è:**  
- **`Transformer`** –æ–±–≥–æ—Ä—Ç–∞—î –µ–ª–µ–º–µ–Ω—Ç —Ä–∞–º–∫–æ—é –∑ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—é –º–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è —ñ –ø–æ–≤–æ—Ä–æ—Ç—É.  
- –í–∏–¥—ñ–ª–µ–Ω–Ω—è –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–¥–∞–Ω–∏–π **`selectedShape`**.

---

## üñº **3. –û–Ω–æ–≤–ª–µ–Ω–∞ Canvas –∑ –≤–∏–¥—ñ–ª–µ–Ω–Ω—è–º**

### üìÑ **KonvaCanvas.js**

```javascript
import React, { useRef, useState } from 'react';
import { Stage, Layer } from 'react-konva';
import { v4 as uuidv4 } from 'uuid';
import GraphLibrary from '../GraphLibrary/GraphLibrary';
import StandardElements from '../LeftSidebar/StandardElements';
import TransformerComponent from './TransformerComponent';

const KonvaCanvas = () => {
  const stageRef = useRef(null);
  const [elements, setElements] = useState([]);
  const [selectedElId, setSelectedElId] = useState(null);

  // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –µ–ª–µ–º–µ–Ω—Ç
  const handleAddElement = (type) => {
    const newElement = {
      id: uuidv4(),
      type,
      x: 100,
      y: 100,
      width: 100,
      height: 100,
      radius: 50,
      fill: 'gray',
      draggable: true,
      rotation: 0,
      points: [0, 0, 100, 100],
    };
    setElements((prev) => [...prev, newElement]);
  };

  // –û–±—Ä–æ–±–Ω–∏–∫ –ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è
  const handleDragEnd = (id, e) => {
    setElements((prev) =>
      prev.map((el) =>
        el.id === id ? { ...el, x: e.target.x(), y: e.target.y() } : el
      )
    );
  };

  // –í–∏–¥—ñ–ª–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞
  const handleSelectElement = (id) => {
    setSelectedElId(id);
  };

  // –ó–Ω—è—Ç—Ç—è –≤–∏–¥—ñ–ª–µ–Ω–Ω—è –ø—Ä–∏ –∫–ª—ñ–∫—É –Ω–∞ –ø–æ—Ä–æ–∂–Ω—é –æ–±–ª–∞—Å—Ç—å
  const handleStageClick = (e) => {
    if (e.target === e.target.getStage()) {
      setSelectedElId(null);
    }
  };

  // –ü–æ—à—É–∫ –≤–∏–¥—ñ–ª–µ–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞
  const selectedShape = elements.find((el) => el.id === selectedElId);

  return (
    <div style={{ display: 'flex' }}>
      <StandardElements onAddElement={handleAddElement} />
      <Stage
        ref={stageRef}
        width={window.innerWidth - 250}
        height={window.innerHeight}
        onMouseDown={handleStageClick}
        style={{ backgroundColor: '#f0f0f0', border: '1px solid black' }}
      >
        <Layer>
          {elements.map((el) => {
            const ElementComponent = GraphLibrary[el.type];
            if (!ElementComponent) return null;

            return (
              <ElementComponent
                key={el.id}
                el={el}
                isSelected={el.id === selectedElId}
                onDragEnd={handleDragEnd}
                onClickEl={() => handleSelectElement(el.id)}
              />
            );
          })}

          {/* –î–æ–¥–∞—î–º–æ Transformer */}
          {selectedShape && (
            <TransformerComponent
              selectedShape={stageRef.current.findOne(`#${selectedElId}`)}
              stageRef={stageRef}
            />
          )}
        </Layer>
      </Stage>
    </div>
  );
};

export default KonvaCanvas;
```

---

## üé® **4. –û–Ω–æ–≤–ª–µ–Ω–∏–π –≥—Ä–∞—Ñ—ñ—á–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫)**

### üìÑ **RectElement.js**

```javascript
import React from 'react';
import { Rect } from 'react-konva';

const RectElement = ({ el, onDragEnd, onClickEl }) => {
  return (
    <Rect
      id={el.id}
      x={el.x}
      y={el.y}
      width={el.width}
      height={el.height}
      fill={el.fill}
      draggable
      rotation={el.rotation}
      onDragEnd={(e) => onDragEnd(el.id, e)}
      onClick={onClickEl}
      stroke={el.isSelected ? 'blue' : 'transparent'}
      strokeWidth={el.isSelected ? 2 : 0}
    />
  );
};

export default RectElement;
```

---

## ‚úÖ **–©–æ –º–∏ –æ—Ç—Ä–∏–º–∞–ª–∏**

1. **–í–∏–¥—ñ–ª–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞** –∑ —Ä–∞–º–∫–æ—é.  
2. **–ú–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è** —ñ **–æ–±–µ—Ä—Ç–∞–Ω–Ω—è** —á–µ—Ä–µ–∑ `Transformer`.  
3. **–ó–Ω—è—Ç—Ç—è –≤–∏–¥—ñ–ª–µ–Ω–Ω—è** –ø—Ä–∏ –∫–ª—ñ–∫—É –Ω–∞ –ø–æ—Ä–æ–∂–Ω—é –æ–±–ª–∞—Å—Ç—å.  
4. **–ì–æ—Ç–æ–≤—É –æ—Å–Ω–æ–≤—É** –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –∫—ñ–ª—å–∫–æ–º–∞ –æ–±'—î–∫—Ç–∞–º–∏.

–¶–µ —Ä–æ–±–∏—Ç—å –≤–∑–∞—î–º–æ–¥—ñ—é –∑ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∑—Ä—É—á–Ω–æ—é —ñ —ñ–Ω—Ç—É—ó—Ç–∏–≤–Ω–æ –∑—Ä–æ–∑—É–º—ñ–ª–æ—é!