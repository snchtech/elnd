–©–æ–± –ø–æ–∫—Ä–∞—â–∏—Ç–∏ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—é –∫–æ–¥—É, –º–∏ –≤–ø—Ä–æ–≤–∞–¥–∏–º–æ –æ–∫—Ä–µ–º—É **–≥—Ä–∞—Ñ—ñ—á–Ω—É –±—ñ–±–ª—ñ–æ—Ç–µ–∫—É** –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ Konva. –¶–µ –∑—Ä–æ–±–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –º–∞—Å—à—Ç–∞–±–æ–≤–∞–Ω–∏–º, –≥–Ω—É—á–∫–∏–º —ñ –∑—Ä—É—á–Ω–∏–º –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤.

---

### üìÇ **–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ—î–∫—Ç—É**

```
/components
  ‚îú‚îÄ‚îÄ GraphLibrary
  ‚îÇ     ‚îú‚îÄ‚îÄ GraphLibrary.js
  ‚îÇ     ‚îú‚îÄ‚îÄ elements
  ‚îÇ     ‚îÇ     ‚îú‚îÄ‚îÄ RectElement.js
  ‚îÇ     ‚îÇ     ‚îú‚îÄ‚îÄ CircleElement.js
  ‚îÇ     ‚îÇ     ‚îú‚îÄ‚îÄ LineElement.js
  ‚îÇ     ‚îÇ     ‚îî‚îÄ‚îÄ TextElement.js
  ‚îú‚îÄ‚îÄ Canvas
  ‚îÇ     ‚îî‚îÄ‚îÄ KonvaCanvas.js
  ‚îú‚îÄ‚îÄ LeftSidebar
  ‚îÇ     ‚îî‚îÄ‚îÄ StandardElements.js
  ‚îî‚îÄ‚îÄ Editor
        ‚îî‚îÄ‚îÄ EditorPage.js
```

---

## üî• **1. GraphLibrary: –ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∞ –≥—Ä–∞—Ñ—ñ—á–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤**

### üìÑ **GraphLibrary.js**

```javascript
import RectElement from './elements/RectElement';
import CircleElement from './elements/CircleElement';
import TextElement from './elements/TextElement';
import LineElement from './elements/LineElement';

const GraphLibrary = {
  rect: RectElement,
  circle: CircleElement,
  text: TextElement,
  line: LineElement,
};

export default GraphLibrary;
```

---

## üé® **2. –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤**

### üìÑ **RectElement.js**

```javascript
import React from 'react';
import { Rect } from 'react-konva';

const RectElement = ({ el, onDragEnd, onClickEl, onTransformEnd }) => {
  return (
    <Rect
      key={el.id}
      x={el.x}
      y={el.y}
      width={el.width}
      height={el.height}
      fill={el.fill}
      draggable
      rotation={el.rotation}
      onDragEnd={(e) => onDragEnd(el.id, e)}
      onClick={() => onClickEl(el.id)}
      onTransformEnd={(e) => onTransformEnd(el.id, e)}
    />
  );
};

export default RectElement;
```

### üìÑ **CircleElement.js**

```javascript
import React from 'react';
import { Circle } from 'react-konva';

const CircleElement = ({ el, onDragEnd, onClickEl, onTransformEnd }) => {
  return (
    <Circle
      key={el.id}
      x={el.x}
      y={el.y}
      radius={el.radius}
      fill={el.fill}
      draggable
      rotation={el.rotation}
      onDragEnd={(e) => onDragEnd(el.id, e)}
      onClick={() => onClickEl(el.id)}
      onTransformEnd={(e) => onTransformEnd(el.id, e)}
    />
  );
};

export default CircleElement;
```

### üìÑ **LineElement.js**

```javascript
import React from 'react';
import { Line } from 'react-konva';

const LineElement = ({ el, onDragEnd, onClickEl, onTransformEnd }) => {
  return (
    <Line
      key={el.id}
      points={el.points}
      stroke="black"
      strokeWidth={2}
      draggable
      onDragEnd={(e) => onDragEnd(el.id, e)}
      onClick={() => onClickEl(el.id)}
      onTransformEnd={(e) => onTransformEnd(el.id, e)}
    />
  );
};

export default LineElement;
```

### üìÑ **TextElement.js**

```javascript
import React from 'react';
import { Text } from 'react-konva';

const TextElement = ({ el, onDragEnd, onClickEl, onTransformEnd }) => {
  return (
    <Text
      key={el.id}
      x={el.x}
      y={el.y}
      text={el.text}
      fontSize={20}
      fill={el.fill}
      draggable
      onDragEnd={(e) => onDragEnd(el.id, e)}
      onClick={() => onClickEl(el.id)}
      onTransformEnd={(e) => onTransformEnd(el.id, e)}
    />
  );
};

export default TextElement;
```

---

## üìå **3. –†–æ–±–æ—á–∞ –æ–±–ª–∞—Å—Ç—å Konva Canvas**

### üìÑ **KonvaCanvas.js**

```javascript
import React, { useRef, useState } from 'react';
import { Stage, Layer } from 'react-konva';
import { v4 as uuidv4 } from 'uuid';
import GraphLibrary from '../GraphLibrary/GraphLibrary';
import StandardElements from '../LeftSidebar/StandardElements';

const KonvaCanvas = () => {
  const stageRef = useRef(null);
  const [elements, setElements] = useState([]);
  const [selectedElId, setSelectedElId] = useState(null);

  const handleAddElement = (type) => {
    const newElement = {
      id: uuidv4(),
      type,
      x: 100,
      y: 100,
      width: 100,
      height: 100,
      radius: 50,
      fill: 'gray',
      draggable: true,
      rotation: 0,
      points: [0, 0, 100, 100],
    };
    setElements((prev) => [...prev, newElement]);
  };

  const handleDragEnd = (id, e) => {
    setElements((prev) =>
      prev.map((el) =>
        el.id === id ? { ...el, x: e.target.x(), y: e.target.y() } : el
      )
    );
  };

  const handleSelectElement = (id) => {
    setSelectedElId(id);
  };

  return (
    <div style={{ display: 'flex' }}>
      <StandardElements onAddElement={handleAddElement} />
      <Stage
        ref={stageRef}
        width={window.innerWidth - 250}
        height={window.innerHeight}
        style={{ backgroundColor: '#f0f0f0', border: '1px solid black' }}
      >
        <Layer>
          {elements.map((el) => {
            const ElementComponent = GraphLibrary[el.type];
            if (!ElementComponent) return null;
            return (
              <ElementComponent
                key={el.id}
                el={el}
                onDragEnd={handleDragEnd}
                onClickEl={handleSelectElement}
              />
            );
          })}
        </Layer>
      </Stage>
    </div>
  );
};

export default KonvaCanvas;
```

---

## üîπ **4. –ü–∞–Ω–µ–ª—å –¥–æ–¥–∞–≤–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤**

### üìÑ **StandardElements.js**

```javascript
import React from 'react';
import { Box, IconButton, Tooltip } from '@mui/material';
import CropSquareIcon from '@mui/icons-material/CropSquare';
import RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked';
import ShowChartIcon from '@mui/icons-material/ShowChart';
import TitleIcon from '@mui/icons-material/Title';

const StandardElements = ({ onAddElement }) => {
  return (
    <Box sx={{ width: 250, p: 2, borderRight: '1px solid #ccc' }}>
      <h3>–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏</h3>
      <Tooltip title="–ü—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫">
        <IconButton onClick={() => onAddElement('rect')}>
          <CropSquareIcon />
        </IconButton>
      </Tooltip>
      <Tooltip title="–ö–æ–ª–æ">
        <IconButton onClick={() => onAddElement('circle')}>
          <RadioButtonUncheckedIcon />
        </IconButton>
      </Tooltip>
      <Tooltip title="–õ—ñ–Ω—ñ—è">
        <IconButton onClick={() => onAddElement('line')}>
          <ShowChartIcon />
        </IconButton>
      </Tooltip>
      <Tooltip title="–¢–µ–∫—Å—Ç">
        <IconButton onClick={() => onAddElement('text')}>
          <TitleIcon />
        </IconButton>
      </Tooltip>
    </Box>
  );
};

export default StandardElements;
```

---

## üéâ **–ü—ñ–¥—Å—É–º–æ–∫**

1. **–ì–Ω—É—á–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞** –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–∏—Ö –≥—Ä–∞—Ñ—ñ—á–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤.  
2. **–†–æ–∑–¥—ñ–ª–µ–Ω–Ω—è –ª–æ–≥—ñ–∫–∏** –º—ñ–∂ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Ç–∞ –æ—Å–Ω–æ–≤–Ω–∏–º `Stage`.  
3. **–ó—Ä—É—á–Ω–µ –º–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è** —Ç–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞ –∫–æ–¥—É.  

–î–æ–¥–∞—Ç–∏ –Ω–æ–≤—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –¥—É–∂–µ –ø—Ä–æ—Å—Ç–æ ‚Äî –ª–∏—à–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —ñ –¥–æ–¥–∞—Ç–∏ –π–æ–≥–æ –¥–æ `GraphLibrary.js`.