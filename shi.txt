RAG (Retrieval-Augmented Generation) ‚Äî –¶–µ –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∞, –¥–µ LLM –Ω–µ –ø–æ–∫–ª–∞–¥–∞—î—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ –Ω–∞ —Å–≤–æ—é –ø–∞–º‚Äô—è—Ç—å, –∞ –æ—Ç—Ä–∏–º—É—î —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∏ –∑–Ω–∞–Ω—å –∑ –±–∞–∑–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ —ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —ó—Ö –¥–ª—è —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ.

RAG = –ü–æ—à—É–∫ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–∏—Ö —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ñ–≤ + –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –Ω–∞ —ó—Ö –æ—Å–Ω–æ–≤—ñ

–ü—Ä–∏–Ω—Ü–∏–ø —Ä–æ–±–æ—Ç–∏ RAG:
1. –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–∫–æ–Ω—ñ–≤/–ø—Ä–∞–≤–∏–ª (PDF)
- –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è PDF-—Ñ–∞–π–ª—ñ–≤ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –ó–∞–∫–æ–Ω ¬´–ü—Ä–æ –æ—Å–≤—ñ—Ç—É¬ª, –ö–ó–ø–ü —Ç–æ—â–æ)
- –†–æ–∑–±–∏—Ç—Ç—è –Ω–∞ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∏ (–ø–æ 100-300 —Å–ª—ñ–≤)
- –ó–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —Ü–∏—Ö —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ñ–≤ —É –≤–µ–∫—Ç–æ—Ä–Ω–æ–º—É —Å—Ö–æ–≤–∏—â—ñ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, FAISS, Chroma, Weaviate ‚Äì –≤—Å–µ –ª–æ–∫–∞–ª—å–Ω–æ)

2. –í–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è
- –ö–æ–∂–µ–Ω —Ñ—Ä–∞–≥–º–µ–Ω—Ç –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î—Ç—å—Å—è –Ω–∞ –≤–µ–∫—Ç–æ—Ä –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –µ–º–±–µ–¥–¥–∏–Ω–≥–æ–≤–æ—ó –º–æ–¥–µ–ª—ñ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, sentence-transformers, GritLM, LaBSE ‚Äî –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó –º–æ–≤–∏)

3. –ê–Ω–∞–ª—ñ–∑ –ø–æ–¥–∞–Ω–æ–≥–æ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞
- –ü–µ—Ä–µ–¥–∞—á–∞ —Ç–µ–∫—Å—Ç—É –¥–æ–∫—É–º–µ–Ω—Ç–∞ (–∞–±–æ –∞–±–∑–∞—Ü) ‚Üí –≤—ñ–Ω —Ç–µ–∂ –≤–µ–∫—Ç–æ—Ä–∏–∑—É—î—Ç—å—Å—è
- –ó–¥—ñ–π—Å–Ω—é—î—Ç—å—Å—è –ø–æ—à—É–∫ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–∏—Ö —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ñ–≤ —ñ–∑ –∑–∞–∫–æ–Ω—ñ–≤ (–Ω–∞–π–±–ª–∏–∂—á—ñ –∑–∞ –∑–º—ñ—Å—Ç–æ–º)
- LLM (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, Mistral, XGLM, LLaMA) –æ—Ç—Ä–∏–º—É—î:
- –≤–∞—à —Ç–µ–∫—Å—Ç
- –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∏ —ñ–∑ –∑–∞–∫–æ–Ω—ñ–≤
- —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—é: "–ü–µ—Ä–µ–≤—ñ—Ä, —á–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞–∫–æ–Ω–æ–¥–∞–≤—Å—Ç–≤—É/–ø—Ä–∞–≤–∏–ª–∞–º"

4. –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
- LLM —Ñ–æ—Ä–º—É—î –ø–æ—è—Å–Ω–µ–Ω–Ω—è: –Ω–∞–ø—Ä–∏–∫–ª–∞–¥: "–£ –≤–∞—à–æ–º—É –¥–æ–∫—É–º–µ–Ω—Ç—ñ –∑–∞–∑–Ω–∞—á–µ–Ω–æ, —â–æ ¬´–ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞ –º–æ–∂–Ω–∞ –∑–≤—ñ–ª—å–Ω–∏—Ç–∏ –±–µ–∑ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è¬ª. –¶–µ —Å—É–ø–µ—Ä–µ—á–∏—Ç—å —Å—Ç–∞—Ç—Ç—ñ 149 –ö–ó–ø–ü –£–∫—Ä–∞—ó–Ω–∏, –¥–µ –∑–∞–∑–Ω–∞—á–µ–Ω–æ..."

–ö–æ–º–ø–æ–Ω–µ–Ω—Ç	–ü—Ä–∏–∫–ª–∞–¥	–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è
–ï–º–±–µ–¥–¥–∏–Ω–≥-–º–æ–¥–µ–ª—å	LaBSE, distiluse-base-multilingual	–í–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —Ç–µ–∫—Å—Ç—É (—É–∫—Ä–∞—ó–Ω—Å—å–∫–∞)
–í–µ–∫—Ç–æ—Ä–Ω–∞ –±–∞–∑–∞	FAISS, Chroma, Weaviate	–ü–æ—à—É–∫ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–∏—Ö —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ñ–≤
LLM	Mistral 7B, XGLM, LLaMA	–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
–†–æ–∑–±—ñ—Ä PDF	PyMuPDF, pdfminer, pdfplumber	–í–∏—Ç—è–≥ —Ç–µ–∫—Å—Ç—É —ñ–∑ PDF
–û–±–≥–æ—Ä—Ç–∫–∞	LangChain, Haystack, –≤—Ä—É—á–Ω—É	–Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –ø–æ—à—É–∫—É —ñ LLM
API / —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å	Flask / FastAPI / Node.js + UI	–î–ª—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –≤ –º–µ—Ä–µ–∂—ñ


+------------------+       +-------------------+       +---------------+
| –í–∞—à –¥–æ–∫—É–º–µ–Ω—Ç     | --->  | –í–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è      | --->  | –ü–æ—à—É–∫ –≤ –±–∞–∑—ñ  |
+------------------+       +-------------------+       +---------------+
                                                              |
                                                              v
                          +----------------------------+       +-----------------------+
                          | –†–µ–ª–µ–≤–∞–Ω—Ç–Ω—ñ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∏ –∑–∞–∫–æ–Ω—ñ–≤| -->  | –ú–æ–¥–µ–ª—å LLM (–≥–µ–Ω–µ—Ä–∞—Ü—ñ—è)|
                          +----------------------------+       +-----------------------+
                                                              |
                                                              v
                                                +------------------------------+
                                                | –í—ñ–¥–ø–æ–≤—ñ–¥—å: –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å / –Ω—ñ |
                                                +------------------------------+

–©–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏:
- –û–±—Ä–æ–±–Ω–∏–∫ PDF (–≤–∏—Ç—è–≥ —Ç–µ–∫—Å—Ç—É)
- –§—Ä–∞–≥–º–µ–Ω—Ç–∞—Ü—ñ—è —Ç–µ–∫—Å—Ç—É (–Ω–∞ –∞–±–∑–∞—Ü–∏ / –±–ª–æ–∫–∏)
- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤–µ–∫—Ç–æ—Ä–Ω–æ—ó –±–∞–∑–∏
- –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è LLM (Mistral –∞–±–æ —ñ–Ω—à–∞)
- –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∞–±–æ API –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤

–ü—Ä–∏–∫–ª–∞–¥ —Å—Ç–µ–∫—É –¥–ª—è RAG –ª–æ–∫–∞–ª—å–Ω–æ:
- Python + LangChain + FAISS + SentenceTransformers + Mistral 7B (Ollama)
    –∞–±–æ
- Node.js + Haystack + ChromaDB + LLaMA 2 (–ø—Ä–∞—Ü—é—î –æ—Ñ–ª–∞–π–Ω —É –ª–æ–∫–∞–ª—å–Ω—ñ–π –º–µ—Ä–µ–∂—ñ)

–û–ø–∏—Å —Ç–µ—Ä–º—ñ–Ω—ñ–≤:
–ï–º–±–µ–¥–¥–∏–Ω–≥-–º–æ–¥–µ–ª—å (–∞–±–æ –º–æ–¥–µ–ª—å –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó) ‚Äî —Ü–µ –®–Ü-–º–æ–¥–µ–ª—å, —è–∫–∞ –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î —Ç–µ–∫—Å—Ç —É –≤–µ–∫—Ç–æ—Ä —á–∏—Å–µ–ª, —Ç–æ–±—Ç–æ —É —Ñ–æ—Ä–º—É, –∑—Ä–æ–∑—É–º—ñ–ª—É –¥–ª—è –∫–æ–º–ø‚Äô—é—Ç–µ—Ä–∞.
–©–æ–± –®–Ü –º—ñ–≥:
- –ø–æ—Ä—ñ–≤–Ω—é–≤–∞—Ç–∏ —Ç–µ–∫—Å—Ç–∏ –∑–∞ —Å–º–∏—Å–ª–æ–º, –∞ –Ω–µ –ª–∏—à–µ –∑–∞ —Å–ª–æ–≤–∞–º–∏
- –∑–Ω–∞—Ö–æ–¥–∏—Ç–∏ —Å—Ö–æ–∂—ñ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∏ —É –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö
- —Ä–æ–∑—É–º—ñ—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è —Ñ—Ä–∞–∑ (–Ω–∞–≤—ñ—Ç—å —è–∫—â–æ –≤–æ–Ω–∏ —Å—Ñ–æ—Ä–º—É–ª—å–æ–≤–∞–Ω—ñ –ø–æ-—Ä—ñ–∑–Ω–æ–º—É)

–ü—Ä–∏–∫–ª–∞–¥:
"–°—Ç—É–¥–µ–Ω—Ç –º–∞—î –ø—Ä–∞–≤–æ –Ω–∞ —Å—Ç–∏–ø–µ–Ω–¥—ñ—é"	[0.12, 0.87, 0.03, ..., 0.44]
"–£—á–Ω—ñ –æ—Ç—Ä–∏–º—É—é—Ç—å —Ñ—ñ–Ω–∞–Ω—Å–æ–≤—É –¥–æ–ø–æ–º–æ–≥—É"	[0.11, 0.85, 0.02, ..., 0.46]

–ü—Ä–∏–∫–ª–∞–¥ —Ç–∞–∫–∏—Ö —Å–∏—Å—Ç–µ–º.
LaBSE (Language-agnostic BERT)	–î—É–∂–µ —è–∫—ñ—Å–Ω–∞, –º—É–ª—å—Ç–æ–º–æ–≤–Ω–∞
sentence-transformers/distiluse-multilingual	–õ–µ–≥–∫–∞, —à–≤–∏–¥–∫–∞, –±–∞–≥–∞—Ç–æ–º–æ–≤–Ω–∞
GritLM, XLM-R, SlavicBERT	–ü—ñ–¥—Ç—Ä–∏–º–∫–∞ —Å–ª–æ–≤'—è–Ω—Å—å–∫–∏—Ö –º–æ–≤

–ü—Ä–∏–∫–ª–∞–¥ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤–µ–∫—Ç–æ—Ä–∞ —É –≤–µ–∫—Ç–æ—Ä–Ω—ñ–π –±–∞–∑—ñ:
{
  "id": "law_001_5",
  "text": "–ü—Ä–∞—Ü—ñ–≤–Ω–∏–∫ –º–∞—î –ø—Ä–∞–≤–æ –Ω–∞ –æ–ø–ª–∞—Ç—É –ø—Ä–∞—Ü—ñ –Ω–µ –Ω–∏–∂—á—É, –Ω—ñ–∂ –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–æ –∑–∞–∫–æ–Ω–æ–º...",
  "vector": [0.34, 0.72, 0.15, ..., 0.48]
}

LLM (Large Language Model) ‚Äî —Ü–µ –≤–µ–ª–∏–∫–∞ –º–æ–≤–Ω–∞ –º–æ–¥–µ–ª—å, —Ç–æ–±—Ç–æ —à—Ç—É—á–Ω–∏–π —ñ–Ω—Ç–µ–ª–µ–∫—Ç, –Ω–∞—Ç—Ä–µ–Ω–æ–≤–∞–Ω–∏–π –Ω–∞ –≤–µ–ª–∏—á–µ–∑–Ω—ñ–π –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Ç–µ–∫—Å—Ç—ñ–≤, —â–æ–±:
- —Ä–æ–∑—É–º—ñ—Ç–∏ —Ç–µ–∫—Å—Ç
- –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ –Ω–∞ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è
- –ø–∏—Å–∞—Ç–∏ —Ç–µ–∫—Å—Ç–∏
- –∞–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏

–†–æ–∑–±—ñ—Ä PDF-—Ñ–∞–π–ª—É:

import fitz  # PyMuPDF

doc = fitz.open("zakon_pro_osvitu.pdf")
all_text = ""

for page in doc:
    all_text += page.get_text()

print(all_text[:1000])  # –≤–∏–≤–µ–¥–µ –ø–µ—Ä—à—ñ 1000 —Å–∏–º–≤–æ–ª—ñ–≤

–î–∞–ª—ñ —Ü–µ–π all_text –º–æ–∂–Ω–∞:
- —Ä–æ–∑–±–∏—Ç–∏ –Ω–∞ —Å—Ç–∞—Ç—Ç—ñ
- –ø–æ–¥—ñ–ª–∏—Ç–∏ –Ω–∞ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∏ –ø–æ 200‚Äì300 —Å–ª—ñ–≤
- –≤–µ–∫—Ç–æ—Ä–∏–∑—É–≤–∞—Ç–∏ (–µ–º–±–µ–¥–¥–∏–Ω–≥)
- –∑–±–µ—Ä–µ–≥—Ç–∏ —É –≤–µ–∫—Ç–æ—Ä–Ω—É –±–∞–∑—É

–Ø–∫—â–æ —Ü–µ —Å–∫–∞–Ω. –ü–æ—Ç—Ä—ñ–±–µ–Ω OCR (—Ä–æ–∑–ø—ñ–∑–Ω–∞–≤–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É), –Ω–∞–ø—Ä. Tesseract



–û–±–≥–æ—Ä—Ç–∫–∞ (–∞–Ω–≥–ª. wrapper) ‚Äî —Ü–µ –ø—Ä–æ–≥—Ä–∞–º–Ω–∏–π —à–∞—Ä –∞–±–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å, —è–∫–∏–π –ø–æ–ª–µ–≥—à—É—î —Ä–æ–±–æ—Ç—É –∑ —á–∏–º–æ—Å—å —Å–∫–ª–∞–¥–Ω–∏–º. –£ –Ω–∞—à–æ–º—É –≤–∏–ø–∞–¥–∫—É ‚Äî –∑ –®–Ü-–º–æ–¥–µ–ª–ª—é, PDF-–¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏, –≤–µ–∫—Ç–æ—Ä–Ω–æ—é –±–∞–∑–æ—é —Ç–æ—â–æ.

- –Ü–Ω–∞–∫—à–µ –∫–∞–∂—É—á–∏, –æ–±–≥–æ—Ä—Ç–∫–∞ ‚Äî —Ü–µ "–ø–æ—Å–µ—Ä–µ–¥–Ω–∏–∫", —è–∫–∏–π —Å–ø—Ä–æ—â—É—î –≤–∑–∞—î–º–æ–¥—ñ—é –º—ñ–∂ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ —Å–∏—Å—Ç–µ–º–∏.

–ë–µ–∑ –æ–±–≥–æ—Ä—Ç–∫–∏:
–í–∞–º —Ç—Ä–µ–±–∞ –≤—Ä—É—á–Ω—É:

    —Ä–æ–∑–ø–∞—Ä—Å–∏—Ç–∏ PDF,

    –≤–∏—Ç—è–≥–Ω—É—Ç–∏ —Ç–µ–∫—Å—Ç,

    –≤–∏–∫–ª–∏–∫–∞—Ç–∏ –µ–º–±–µ–¥–¥–∏–Ω–≥,

    –∑–±–µ—Ä–µ–≥—Ç–∏ —É FAISS,

    –∑—Ä–æ–±–∏—Ç–∏ –∑–∞–ø–∏—Ç,

    –ø–µ—Ä–µ–¥–∞—Ç–∏ –≤ LLM...

üòµ‚Äçüí´ –ë–∞–≥–∞—Ç–æ –∫–æ–¥—É —Ç–∞ —Å–∫–ª–∞–¥–Ω–æ—â—ñ–≤.

üîπ –ó –æ–±–≥–æ—Ä—Ç–∫–æ—é:
–í–∏ –ø–∏—à–µ—Ç–µ —â–æ—Å—å –Ω–∞ –∫—à—Ç–∞–ª—Ç:

response = rag_system.query("–ß–∏ –ø–æ—Ä—É—à—É—î —Ü–µ–π –¥–æ–∫—É–º–µ–Ω—Ç –∑–∞–∫–æ–Ω –ø—Ä–æ –ø—Ä–∞—Ü—é?")

–û–±–≥–æ—Ä—Ç–∫–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ñ RAG-—Å–∏—Å—Ç–µ–º–∏

–í–æ–Ω–∞ –æ–±‚Äô—î–¥–Ω—É—î –≤ —Å–æ–±—ñ:
–ö–æ–º–ø–æ–Ω–µ–Ω—Ç	–©–æ —Ä–æ–±–∏—Ç—å
üìÑ –†–æ–∑–±—ñ—Ä PDF	–í–∏—Ç—è–≥—É—î —Ç–µ–∫—Å—Ç –∑ —Ñ–∞–π–ª—ñ–≤
üî¢ –ï–º–±–µ–¥–¥–∏–Ω–≥	–ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∏ –Ω–∞ –≤–µ–∫—Ç–æ—Ä–∏
üìö –í–µ–∫—Ç–æ—Ä–Ω–∞ –±–∞–∑–∞	–ó–±–µ—Ä—ñ–≥–∞—î —Ç–∞ —à—É–∫–∞—î –ø–æ–¥—ñ–±–Ω—ñ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∏
üß† LLM	–ì–µ–Ω–µ—Ä—É—î –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –æ—Å–Ω–æ–≤—ñ –∑–Ω–∞–π–¥–µ–Ω–∏—Ö —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ñ–≤

–û–±–≥–æ—Ä—Ç–∫–∞ –∫–µ—Ä—É—î –≤—Å—ñ–º —Ü–∏–º ‚Äî –≤–∏ –ø—Ä–∞—Ü—é—î—Ç–µ –∑ –æ–¥–Ω–∏–º –∑—Ä—É—á–Ω–∏–º —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –º–µ—Ç–æ–¥–æ–º query()).

LangChain	–ù–∞–π–ø–æ–ø—É–ª—è—Ä–Ω—ñ—à–∞ –æ–±–≥–æ—Ä—Ç–∫–∞ –¥–ª—è LLM + RAG	‚úÖ (—á–µ—Ä–µ–∑ —Å–≤–æ—ó –º–æ–¥—É–ª—ñ)
Haystack	–°–∏–ª—å–Ω–∞ —É QA-—Å–∏—Å—Ç–µ–º–∞—Ö, PDF, –≤–µ–∫—Ç–æ—Ä–Ω–∏—Ö –±–∞–∑–∞—Ö	‚úÖ
LlamaIndex	–ó—Ä—É—á–Ω–∞ –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ —ñ –±–∞–∑ –∑–Ω–∞–Ω—å

from langchain.chains import RetrievalQA

qa_chain = RetrievalQA.from_chain_type(
    llm=mistral_model,
    retriever=vector_db.as_retriever()
)

result = qa_chain.run("–Ø–∫—ñ –ø—Ä–∞–≤–∞ –º–∞—é—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∏ –∑–≥—ñ–¥–Ω–æ –∑ –∑–∞–∫–æ–Ω–æ–º?")
print(result)










–ß—É–¥–æ–≤–æ, –¥–∞–≤–∞–π —Ä–æ–∑–≥–ª—è–Ω–µ–º–æ, —è–∫ —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ **–ø—Ä–æ—Å—Ç—É RAG-—Å–∏—Å—Ç–µ–º—É –∑ API**, —è–∫—É –º–æ–∂–Ω–∞ –∑–∞–ø—É—Å–∫–∞—Ç–∏ **–ª–æ–∫–∞–ª—å–Ω–æ** –π –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –¥–ª—è **–ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å –∑–∞–∫–æ–Ω–∞–º**. üéØ

---

## üîß –©–æ –º–∏ —Ä–µ–∞–ª—ñ–∑—É—î–º–æ?

–ú–∏ —Å—Ç–≤–æ—Ä–∏–º–æ **–ª–æ–∫–∞–ª—å–Ω–∏–π REST API**, –¥–µ:

- üü¢ –¢–∏ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î—à —Ç–µ–∫—Å—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∞–±–æ –∑–∞–ø–∏—Ç (—á–µ—Ä–µ–∑ `POST`)
- üß† –°–∏—Å—Ç–µ–º–∞ –æ–±—Ä–æ–±–ª—è—î –π–æ–≥–æ:
  - –∑–Ω–∞—Ö–æ–¥–∏—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∏ —ñ–∑ –∑–∞–∫–æ–Ω—ñ–≤ (RAG)
  - –ø–µ—Ä–µ–¥–∞—î —ó—Ö —É LLM
  - —Ñ–æ—Ä–º—É—î –≤—ñ–¥–ø–æ–≤—ñ–¥—å
- üì¨ –û—Ç—Ä–∏–º—É—î—à –≥–æ—Ç–æ–≤—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å —É JSON

---

## üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ—î–∫—Ç—É (–ø—Ä–∏–∫–ª–∞–¥)

```
rag-api/
‚îÇ
‚îú‚îÄ‚îÄ app.py               ‚Üê Flask API
‚îú‚îÄ‚îÄ load_documents.py    ‚Üê –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–∫–æ–Ω—ñ–≤ —ñ–∑ PDF ‚Üí –≤–µ–∫—Ç–æ—Ä–Ω–∞ –±–∞–∑–∞
‚îú‚îÄ‚îÄ rag_chain.py         ‚Üê –õ–æ–≥—ñ–∫–∞ RAG: –ø–æ—à—É–∫ + LLM
‚îú‚îÄ‚îÄ models/
‚îÇ   ‚îî‚îÄ‚îÄ vector_store.faiss
‚îú‚îÄ‚îÄ pdfs/
‚îÇ   ‚îî‚îÄ‚îÄ zakon_pro_osvitu.pdf
‚îî‚îÄ‚îÄ requirements.txt
```

---

## üì¶ –ü—Ä–∏–∫–ª–∞–¥ API-—Å–µ—Ä–≤–µ—Ä—É (Flask)

```python
# app.py
from flask import Flask, request, jsonify
from rag_chain import answer_query

app = Flask(__name__)

@app.route("/ask", methods=["POST"])
def ask():
    data = request.json
    query = data.get("query")
    
    if not query:
        return jsonify({"error": "No query provided"}), 400

    result = answer_query(query)
    return jsonify(result)

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)
```

---

## üß† –õ–æ–≥—ñ–∫–∞ RAG (–ø—Ä–∏–∫–ª–∞–¥ ‚Äî `rag_chain.py`)

```python
# rag_chain.py
from langchain.chains import RetrievalQA
from langchain.vectorstores import FAISS
from langchain.embeddings import HuggingFaceEmbeddings
from langchain.llms import Ollama

# –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –µ–º–±–µ–¥–¥–∏–Ω–≥-–º–æ–¥–µ–ª—å —ñ –±–∞–∑—É
embedding = HuggingFaceEmbeddings(model_name="sentence-transformers/distiluse-base-multilingual-cased-v2")
db = FAISS.load_local("models/vector_store", embeddings=embedding)

retriever = db.as_retriever(search_type="similarity", k=3)
llm = Ollama(model="mistral")  # –ª–æ–∫–∞–ª—å–Ω–∞ –º–æ–¥–µ–ª—å —á–µ—Ä–µ–∑ Ollama

qa = RetrievalQA.from_chain_type(llm=llm, retriever=retriever)

def answer_query(query):
    response = qa.run(query)
    return {"query": query, "answer": response}
```

---

## üìÑ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–∫–æ–Ω—ñ–≤ –∑ PDF ‚Üí –≤–µ–∫—Ç–æ—Ä–Ω–∞ –±–∞–∑–∞ (`load_documents.py`)

```python
# load_documents.py
import os
from langchain.vectorstores import FAISS
from langchain.embeddings import HuggingFaceEmbeddings
from langchain.text_splitter import RecursiveCharacterTextSplitter
from langchain.document_loaders import PyMuPDFLoader

embedding = HuggingFaceEmbeddings(model_name="sentence-transformers/distiluse-base-multilingual-cased-v2")

loader = PyMuPDFLoader("pdfs/zakon_pro_osvitu.pdf")
documents = loader.load()

# –†–æ–∑–±–∏–≤–∞—î–º–æ –Ω–∞ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∏
splitter = RecursiveCharacterTextSplitter(chunk_size=300, chunk_overlap=50)
docs = splitter.split_documents(documents)

# –°—Ç–≤–æ—Ä—é—î–º–æ –≤–µ–∫—Ç–æ—Ä–Ω—É –±–∞–∑—É
db = FAISS.from_documents(docs, embedding)
db.save_local("models/vector_store")
```

---

## üì¨ –Ø–∫ –ø—Ä–∞—Ü—é—î –∑–∞–ø–∏—Ç –¥–æ API

### üîπ –ü—Ä–∏–∫–ª–∞–¥ `POST`-–∑–∞–ø–∏—Ç—É:

```http
POST http://localhost:5000/ask
Content-Type: application/json

{
  "query": "–ß–∏ –º–æ–∂–µ —Å—Ç—É–¥–µ–Ω—Ç –±—É—Ç–∏ –≤—ñ–¥—Ä–∞—Ö–æ–≤–∞–Ω–∏–π –±–µ–∑ –ø–æ—è—Å–Ω–µ–Ω–Ω—è –ø—Ä–∏—á–∏–Ω?"
}
```

### üîπ –í—ñ–¥–ø–æ–≤—ñ–¥—å (`JSON`):

```json
{
  "query": "–ß–∏ –º–æ–∂–µ —Å—Ç—É–¥–µ–Ω—Ç –±—É—Ç–∏ –≤—ñ–¥—Ä–∞—Ö–æ–≤–∞–Ω–∏–π –±–µ–∑ –ø–æ—è—Å–Ω–µ–Ω–Ω—è –ø—Ä–∏—á–∏–Ω?",
  "answer": "–í—ñ–¥—Ä–∞—Ö—É–≤–∞–Ω–Ω—è —Å—Ç—É–¥–µ–Ω—Ç–∞ –±–µ–∑ –ø–æ—è—Å–Ω–µ–Ω–Ω—è –ø—Ä–∏—á–∏–Ω —Å—É–ø–µ—Ä–µ—á–∏—Ç—å –ó–∞–∫–æ–Ω—É –£–∫—Ä–∞—ó–Ω–∏ ¬´–ü—Ä–æ –æ—Å–≤—ñ—Ç—É¬ª, –¥–µ –≤–∫–∞–∑–∞–Ω–æ..."
}
```

---

## ‚úÖ –©–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–ª—è –∑–∞–ø—É—Å–∫—É:

1. –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ:
```bash
pip install flask langchain faiss-cpu sentence-transformers pymupdf
```

2. –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ PDF —ñ –∑–∞–ø—É—Å—Ç–∏—Ç–∏ `load_documents.py`
3. –ó–∞–ø—É—Å—Ç–∏—Ç–∏ `app.py`
4. –†–æ–±–∏—Ç–∏ –∑–∞–ø–∏—Ç–∏ —á–µ—Ä–µ–∑ Postman / cURL / –∑ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É

---

## üß± –ü–µ—Ä–µ–≤–∞–≥–∏ —Ü—å–æ–≥–æ –ø—ñ–¥—Ö–æ–¥—É:

- ‚úÖ –ü–æ–≤–Ω—ñ—Å—Ç—é **–ª–æ–∫–∞–ª—å–Ω–∞ —Å–∏—Å—Ç–µ–º–∞**
- ‚úÖ –ü—ñ–¥—Ç—Ä–∏–º–∫–∞ **—É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó –º–æ–≤–∏**
- ‚úÖ –ú–æ–∂–Ω–∞ –ª–µ–≥–∫–æ —ñ–Ω—Ç–µ–≥—Ä—É–≤–∞—Ç–∏ —É –≤–Ω—É—Ç—Ä—ñ—à–Ω—é –º–µ—Ä–µ–∂—É
- ‚úÖ –ú–æ–∂–Ω–∞ –∞–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏ **–±—É–¥—å-—è–∫—ñ PDF-–∑–∞–∫–æ–Ω–∏**
- ‚úÖ –ü—Ä–æ—Å—Ç–∏–π REST API

---

üîß –Ø–∫—â–æ —Ö–æ—á–µ—à ‚Äî —è –º–æ–∂—É:
- –ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –ø–æ–≤–Ω–∏–π —à–∞–±–ª–æ–Ω –ø—Ä–æ—î–∫—Ç—É
- –î–æ–ø–æ–º–æ–≥—Ç–∏ –∑ Docker-–≤–µ—Ä—Å—ñ—î—é –¥–ª—è —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è –≤ –º–µ—Ä–µ–∂—ñ
- –î–æ–¥–∞—Ç–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—é, –ª–æ–≥—É–≤–∞–Ω–Ω—è, –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–æ–≤–∏—Ö PDF —á–µ—Ä–µ–∑ API

–•–æ—á–µ—à –∑–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –≤–µ—Å—å —à–∞–±–ª–æ–Ω –ø—Ä–æ—î–∫—Ç—É —É –≤–∏–≥–ª—è–¥—ñ –∞—Ä—Ö—ñ–≤—É –∞–±–æ –∫–æ–¥—É –Ω–∞ Canvas?