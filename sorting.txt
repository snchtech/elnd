processing
declare
l_modules_ids VARCHAR2(255);
l_order_numbers VARCHAR2(255);
l_app_id NUMBER;
l_app_page_id NUMBER;
l_user_login VARCHAR2(255);
begin
l_modules_ids := apex_application.g_x01;
l_order_numbers := apex_application.g_x02;
l_app_id := v('APP_ID');
l_user_login := v('APP_USER');
l_app_page_id := v('APP_PAGE_ID');



apex_debug_message.log_message('-->idAPP: '||l_app_id);
apex_debug_message.log_message('-->idPage: '||l_app_page_id);
apex_debug_message.log_message('-->login: '||l_user_login);
apex_debug_message.log_message('-->orderNumber: '||l_order_numbers);

UPDATE_MODULE_ORDER_NUMBERS (
    l_modules_ids,
    l_order_numbers,
    l_app_page_id,
    l_user_login
);
end;

-------------------------------------------

prerendering

declare
l_module_id NUMBER;
l_order_number NUMBER;
begin

    FOR c IN (SELECT APP_LIST_ID, ORDER_NUMBER FROM ARM_ORDER_L WHERE LOGIN = v('APP_USER')) LOOP
        l_module_id := c.APP_LIST_ID;
        l_order_number := c.ORDER_NUMBER;
        
        IF l_module_id = 1 THEN
            apex_util.set_session_state('P1_M11', l_order_number);
        ELSIF l_module_id = 2 THEN
            apex_util.set_session_state('P1_M12', l_order_number);
        ELSIF l_module_id = 3 THEN
            apex_util.set_session_state('P1_M14', l_order_number);
        END IF;

    END LOOP;

end;

--------------------------------------------------

procedure


create or replace PROCEDURE UPDATE_MODULE_ORDER_NUMBERS (
    p_module_ids IN VARCHAR2,
    p_order_numbers IN VARCHAR2,
    p_app_page_id IN NUMBER,
    p_user_login IN VARCHAR2
) AS
    l_module_id_list VARCHAR2(4000) := p_module_ids;
    l_order_number_list VARCHAR2(4000) := p_order_numbers;
    l_app_page_id NUMBER := p_app_page_id;
    l_page_src NUMBER;
    l_user_app_item NUMBER;
    l_user_login VARCHAR2(255) := p_user_login;
    l_check_order NUMBER;
BEGIN
    FOR i IN 1..LENGTH(p_module_ids) - LENGTH(REPLACE(p_module_ids, ',', '')) + 1 LOOP
        DECLARE
            l_module_id VARCHAR2(20);
            l_order_number VARCHAR2(20);
        BEGIN
            IF i = 1 THEN
                l_module_id := TO_NUMBER(SUBSTR(l_module_id_list, 1, INSTR(l_module_id_list, ',', 1, 1) - 1));
                l_order_number := TO_NUMBER(SUBSTR(l_order_number_list, 1, INSTR(l_order_number_list, ',', 1, 1) - 1));
            ELSIF i = (LENGTH(p_module_ids) - LENGTH(REPLACE(p_module_ids, ',', '')) + 1) THEN
                l_module_id := TO_NUMBER(SUBSTR(l_module_id_list, INSTR(l_module_id_list, ',', 1, i - 1) + 1));
                l_order_number := TO_NUMBER(SUBSTR(l_order_number_list, INSTR(l_order_number_list, ',', 1, i - 1) + 1));
            ELSE
                l_module_id := TO_NUMBER(SUBSTR(l_module_id_list, INSTR(l_module_id_list, ',', 1, i - 1) + 1, INSTR(l_module_id_list, ',', 1, i) - INSTR(l_module_id_list, ',', 1, i - 1) - 1));
                l_order_number := TO_NUMBER(SUBSTR(l_order_number_list, INSTR(l_order_number_list, ',', 1, i - 1) + 1, INSTR(l_order_number_list, ',', 1, i) - INSTR(l_order_number_list, ',', 1, i - 1) - 1));
            END IF;

            apex_debug_message.log_message('-->step: '||'STEP');

            SELECT t.ID INTO l_page_src FROM PAGE_LIST t WHERE t.APP_LIST_ID = l_module_id AND t.PAGE_ID = l_app_page_id;

            apex_debug_message.log_message('-->pageSRC: '||l_page_src);
            apex_debug_message.log_message('-->login: '||l_user_login);
            apex_debug_message.log_message('-->index: '||i);

            

            -- Check if LOGIN exists in Table2
            SELECT al.ID INTO l_user_app_item
            FROM ARM_USER_APP_LIST al
            WHERE al.LOGIN = l_user_login AND al.P_ID = l_page_src;

            apex_debug_message.log_message('-->find: '||l_user_app_item);

            -- Check if ORDER_NUMBER is set for the ID_USR
            SELECT COUNT(*)
            INTO l_check_order
            FROM ARM_USER_APP_ORDER uo
            WHERE uo.AUL_ID = l_user_app_item;
            apex_debug_message.log_message('-->checkorder: '||l_check_order);

             

            IF l_check_order = 0 THEN
                -- Insert new record into Table3
                INSERT INTO ARM_USER_APP_ORDER (AUL_ID, ORDER_NUMBER) VALUES (l_user_app_item, l_order_number);
            ELSE
                -- Update existing record in Table3
                UPDATE ARM_USER_APP_ORDER SET ORDER_NUMBER = l_order_number WHERE AUL_ID = l_user_app_item;
            END IF;
            

            EXCEPTION
            WHEN NO_DATA_FOUND THEN

             -- Insert new record into Table2
            INSERT INTO ARM_USER_APP_LIST (P_ID, LOGIN)
            VALUES (l_page_src, l_user_login);

            SELECT al.ID INTO l_user_app_item
            FROM ARM_USER_APP_LIST al
            WHERE al.LOGIN = l_user_login AND al.P_ID = l_page_src;

            SELECT COUNT(*)
            INTO l_check_order
            FROM ARM_USER_APP_ORDER uo
            WHERE uo.AUL_ID = l_user_app_item;

            IF l_check_order = 0 THEN
                -- Insert new record into Table3
                INSERT INTO ARM_USER_APP_ORDER (AUL_ID, ORDER_NUMBER) VALUES (l_user_app_item, l_order_number);
            ELSE
                -- Update existing record in Table3
                UPDATE ARM_USER_APP_ORDER SET ORDER_NUMBER = l_order_number WHERE AUL_ID = l_user_app_item;
            END IF;
           

            

            -- Update the module order number in the database table using the extracted values
            -- UPDATE MODULE_ORDER
            -- SET ORDER_NUMBER = l_order_number
            -- WHERE MODULE_ID = l_module_id;
        END;
    END LOOP;
    
    COMMIT;
END;


-------------------------------------------
tables

PAGE_LIST
ID,
APP_LIST_ID,
PAGE_ID


ARM_USER_APP_LIST
ID
P_ID
LOGIN

ARM_USER_APP_ORDER
ID
AUL_ID
ORDER_NUMBER
------------------------------------------

view

ARM_ORDER_L

CREATE OR REPLACE FORCE EDITIONABLE VIEW "ARM_ORDER_L" ("APP_LIST_ID", "ORDER_NUMBER", "LOGIN") AS 
  select p.APP_LIST_ID, t.ORDER_NUMBER, m.LOGIN from ARM_USER_APP_ORDER t
LEFT JOIN ARM_USER_APP_LIST m ON t.AUL_ID = m.ID
LEFT JOIN PAGE_LIST p ON m.P_ID = p.ID
ORDER BY p.APP_LIST_ID

----------------------------------------------
