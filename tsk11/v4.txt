–ß—É–¥–æ–≤–æ, –¥–∞–≤–∞–π —Ä–µ–∞–ª—ñ–∑—É—î–º–æ –¥—É–±–ª—é–≤–∞–Ω–Ω—è –ø—ñ–¥—à–∞–±–ª–æ–Ω—É (`TASK_TEMPLATE_SUBTASKS`) —Ä–∞–∑–æ–º –∑ –π–æ–≥–æ –≤–∫–ª–∞–¥–µ–Ω–∏–º–∏ –¥–æ—á—ñ—Ä–Ω—ñ–º–∏ –ø—ñ–¥—à–∞–±–ª–æ–Ω–∞–º–∏.

---

## üîß –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–¥–∞—á—ñ:

1. **–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞—Ç–∏—Å–∫–∞—î –∫–Ω–æ–ø–∫—É "–î—É–±–ª—é–≤–∞—Ç–∏ –ø—ñ–¥—à–∞–±–ª–æ–Ω"** —É custom-–º–µ–Ω—é.
2. **–í–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è `Ajax Process`: `DUPLICATE_TEMPLATE_SUBTASK`**
3. –î—É–±–ª—é—î—Ç—å—Å—è –ø—ñ–¥—à–∞–±–ª–æ–Ω –∑ –Ω–æ–≤–∏–º `ID`, `PARENT_ID = NULL`
4. –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –¥—É–±–ª—é—é—Ç—å—Å—è –≤—Å—ñ –¥–æ—á—ñ—Ä–Ω—ñ –ø—ñ–¥—à–∞–±–ª–æ–Ω–∏ –∑ –æ–Ω–æ–≤–ª–µ–Ω–∏–º–∏ `PARENT_ID`
5. –ü—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è ‚Äì –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–µ–≥—ñ–æ–Ω—É IG.

---

## ‚úÖ PL/SQL Process: `DUPLICATE_TEMPLATE_SUBTASK`

```plsql
DECLARE
  v_new_id TASK_TEMPLATE_SUBTASKS.ID%TYPE;

  -- –ú–∞–ø–∞: —Å—Ç–∞—Ä–∏–π ID -> –Ω–æ–≤–∏–π ID
  TYPE t_id_map IS TABLE OF NUMBER INDEX BY NUMBER;
  l_id_map t_id_map;

  -- –†–µ–∫—É—Ä—Å–∏–≤–Ω–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ –¥—É–±–ª—é–≤–∞–Ω–Ω—è
  PROCEDURE duplicate_node(p_old_id NUMBER, p_new_parent_id NUMBER, p_template_id NUMBER) IS
    v_new_subtask_id TASK_TEMPLATE_SUBTASKS.ID%TYPE;
  BEGIN
    INSERT INTO TASK_TEMPLATE_SUBTASKS (
      ID, TEMPLATE_ID, SUBTASK_CONTENT, STATUS_ID, PARENT_ID, SUBTASK_ORDER
    )
    SELECT
      TASK_TEMPLATE_SUBTASKS_SEQ.NEXTVAL,
      TEMPLATE_ID,
      SUBTASK_CONTENT,
      STATUS_ID,
      p_new_parent_id,
      SUBTASK_ORDER
    FROM TASK_TEMPLATE_SUBTASKS
    WHERE ID = p_old_id
    RETURNING ID INTO v_new_subtask_id;

    -- –î–æ–¥–∞—î–º–æ –≤ –º–∞–ø—É
    l_id_map(p_old_id) := v_new_subtask_id;

    -- –†–µ–∫—É—Ä—Å—ñ—è –¥–ª—è –¥–æ—á—ñ—Ä–Ω—ñ—Ö
    FOR r_child IN (
      SELECT ID FROM TASK_TEMPLATE_SUBTASKS WHERE PARENT_ID = p_old_id
    ) LOOP
      duplicate_node(r_child.ID, v_new_subtask_id, p_template_id);
    END LOOP;
  END;

BEGIN
  duplicate_node(APEX_APPLICATION.G_X01, NULL, :P5_TASK_ID);

  APEX_JSON.OPEN_OBJECT;
  APEX_JSON.WRITE('status', 'ok');
  APEX_JSON.CLOSE_OBJECT;

EXCEPTION
  WHEN OTHERS THEN
    APEX_JSON.OPEN_OBJECT;
    APEX_JSON.WRITE('status', 'error');
    APEX_JSON.WRITE('message', SQLERRM);
    APEX_JSON.CLOSE_OBJECT;
END;
```

---

## ‚úÖ JavaScript –≤–∏–∫–ª–∏–∫ (–≤ custom-–º–µ–Ω—é):

```js
document.getElementById("menu-duplicate-subtemplate").addEventListener("click", function () {
  const id = this.dataset.id;
  if (!id) return;

  apex.server.process("DUPLICATE_TEMPLATE_SUBTASK", {
    x01: id
  }, {
    dataType: "json",
    success: function (pData) {
      if (pData.status === "ok") {
        apex.region("TASK_TEMPLATE_SUBTASKS_IG_2").refresh();
      } else {
        apex.message.alert("‚ùå –ü–æ–º–∏–ª–∫–∞: " + (pData.message || "–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞"));
      }
    },
    error: function () {
      apex.message.alert("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑‚Äô—î–¥–Ω–∞—Ç–∏—Å—å —ñ–∑ —Å–µ—Ä–≤–µ—Ä–æ–º.");
    }
  });

  document.getElementById("custom-ig-menu").style.display = "none";
});
```

---

## üîÑ –©–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ —â–µ:

* –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Å—è, —â–æ `TASK_TEMPLATE_SUBTASKS_SEQ` —ñ—Å–Ω—É—î.
* AJAX-–ø—Ä–æ—Ü–µ—Å `DUPLICATE_TEMPLATE_SUBTASK` –¥–æ–¥–∞–Ω–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É.
* –Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ä–µ–≥—ñ–æ–Ω—É IG ‚Äì `TASK_TEMPLATE_SUBTASKS_IG_2` (–∞–±–æ —Ç–≤—ñ–π).

---

–•–æ—á–µ—à —Ç–∞–∫–æ–∂ –¥–æ–¥–∞—Ç–∏ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –ø–µ—Ä–µ–¥ –¥—É–±–ª—é–≤–∞–Ω–Ω—è–º –∞–±–æ –∞–≤—Ç–æ-—Ñ–æ–∫—É—Å –Ω–∞ –Ω–æ–≤–∏–π —Ä—è–¥–æ–∫ –ø—ñ—Å–ª—è –¥—É–±–ª—é–≤–∞–Ω–Ω—è?
