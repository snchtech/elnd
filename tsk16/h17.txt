–û—Å—å –æ–Ω–æ–≤–ª–µ–Ω–∏–π –∫–æ–¥ –¥–ª—è **–æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è –∞–±–æ —à–∞–±–ª–æ–Ω—É** —Ç–∞ –æ–±—Ä–æ–±–∫–∏ –ø–æ–≤‚Äô—è–∑–∞–Ω–∏—Ö **–ø—ñ–¥–∑–∞–≤–¥–∞–Ω—å –∞–±–æ –ø—ñ–¥—à–∞–±–ª–æ–Ω—ñ–≤** –Ω–∞ –æ—Å–Ω–æ–≤—ñ **–Ω–æ–≤–æ—ó —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –∫–æ–ª–µ–∫—Ü—ñ—ó**, —è–∫—É —Ç–∏ –Ω–∞–¥–∞–≤:

---

### ‚úÖ **–û–Ω–æ–≤–ª–µ–Ω–∏–π –∫–æ–¥**

```plsql
DECLARE
  v_task_id   NUMBER := :P8_TASK_ID;
  v_task_mode NUMBER := :P8_TASK_MODE;
  l_coll_name VARCHAR2(50);
BEGIN
  -- 1. –û–ù–û–í–õ–ï–ù–ù–Ø –ì–û–õ–û–í–ù–û–ì–û –ó–ê–ü–ò–°–£
  IF v_task_mode = 0 THEN
    UPDATE TASKS
    SET 
      TASK_CONTENT         = :P8_TASK_CONTENT,
      PLANNING_DATE_START  = :P8_PLANNING_DATE_START,
      PLANNING_DATE_END    = :P8_PLANNING_DATE_END,
      NOTE                 = :P8_NOTE,
      TYPE_ID              = :P8_TYPE_ID,
      UNIT_ID              = :P8_UNIT
    WHERE ID = v_task_id;

    l_coll_name := 'TASK_SUBTASKS_COLLECTION';

  ELSIF v_task_mode = 1 THEN
    UPDATE TASK_TEMPLATES
    SET
      TASK_CONTENT     = :P8_TASK_CONTENT,
      NOTE             = :P8_NOTE,
      TYPE_ID          = :P8_TYPE_ID,
      UNIT_ID          = :P8_UNIT,
      PERIOD_MODE      = :P8_PERIOD_MODE,
      PERIOD_INTERVAL  = :P8_PERIOD_INTERVAL,
      PERIOD_TIME      = :P8_PERIOD_TIME,
      WEEKLY_DAYS      = :P8_WEEKLY_DAYS,
      WEEKLY_TIME      = :P8_WEEKLY_TIME,
      DATE_END         = :P8_DATE_END
    WHERE ID = v_task_id;

    l_coll_name := 'TASK_TEMPLATE_SUBTASKS_COLLECTION';
  END IF;

  -- 2. –û–ë–†–û–ë–ö–ê –ö–û–õ–ï–ö–¶–Ü–á
  FOR r IN (
    SELECT *
    FROM APEX_COLLECTIONS
    WHERE COLLECTION_NAME = l_coll_name
      AND TO_NUMBER(n001) = v_task_mode
  ) LOOP

    -- –í–ò–î–ê–õ–ï–ù–ù–Ø
    IF r.c010 = 'DELETE' AND r.c007 IS NOT NULL THEN
      IF v_task_mode = 0 THEN
        DELETE FROM TASK_SUBTASKS WHERE ID = TO_NUMBER(r.c007);
      ELSE
        DELETE FROM TASK_TEMPLATE_SUBTASKS WHERE ID = TO_NUMBER(r.c007);
      END IF;

    -- –ù–û–í–ò–ô –ó–ê–ü–ò–°
    ELSIF r.c007 IS NULL THEN
      IF v_task_mode = 0 THEN
        INSERT INTO TASK_SUBTASKS (
          TASK_ID, SUBTASK_CONTENT, PLANNING_DATE_END, PARENT_ID,
          SUBTASK_ORDER, STATUS_ID, DATE_CREATE, DATE_UPDATE, CREATOR, UPDATOR
        ) VALUES (
          v_task_id,
          r.c002,
          r.d001,
          TO_NUMBER(r.c003),
          TO_NUMBER(r.c004),
          TO_NUMBER(r.c005),
          r.d002,
          r.d003,
          TO_NUMBER(r.c006),
          TO_NUMBER(r.c007)
        );
      ELSE
        INSERT INTO TASK_TEMPLATE_SUBTASKS (
          TEMPLATE_ID, SUBTASK_CONTENT, PARENT_ID, SUBTASK_ORDER,
          STATUS_ID, DATE_CREATE, DATE_UPDATE, CREATOR, UPDATOR
        ) VALUES (
          v_task_id,
          r.c002,
          TO_NUMBER(r.c003),
          TO_NUMBER(r.c004),
          TO_NUMBER(r.c005),
          r.d002,
          r.d003,
          TO_NUMBER(r.c006),
          TO_NUMBER(r.c007)
        );
      END IF;

    -- –û–ù–û–í–õ–ï–ù–ù–Ø
    ELSE
      IF v_task_mode = 0 THEN
        UPDATE TASK_SUBTASKS
        SET 
          SUBTASK_CONTENT    = r.c002,
          PLANNING_DATE_END  = r.d001,
          PARENT_ID          = TO_NUMBER(r.c003),
          SUBTASK_ORDER      = TO_NUMBER(r.c004),
          STATUS_ID          = TO_NUMBER(r.c005),
          DATE_UPDATE        = r.d003,
          UPDATOR            = TO_NUMBER(r.c007)
        WHERE ID = TO_NUMBER(r.c007);
      ELSE
        UPDATE TASK_TEMPLATE_SUBTASKS
        SET 
          SUBTASK_CONTENT    = r.c002,
          PARENT_ID          = TO_NUMBER(r.c003),
          SUBTASK_ORDER      = TO_NUMBER(r.c004),
          STATUS_ID          = TO_NUMBER(r.c005),
          DATE_UPDATE        = r.d003,
          UPDATOR            = TO_NUMBER(r.c007)
        WHERE ID = TO_NUMBER(r.c007);
      END IF;

    END IF;
  END LOOP;

  -- 3. –û–ß–ò–©–ï–ù–ù–Ø –ö–û–õ–ï–ö–¶–Ü–á
  APEX_COLLECTION.DELETE_COLLECTION(l_coll_name);

EXCEPTION
  WHEN OTHERS THEN
    raise_application_error(-20001, '‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ: ' || SQLERRM);
END;
```

---

### üìù –ö–æ–º–µ–Ω—Ç–∞—Ä—ñ:

* `r.c007` –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è —è–∫ `ID` —É –ë–î. –Ø–∫—â–æ `NULL` ‚Äî —Ü–µ –Ω–æ–≤–∏–π –∑–∞–ø–∏—Å.
* `c010 = 'DELETE'` ‚Äî –ø–æ–∑–Ω–∞—á–∫–∞ –Ω–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è.
* `n001` = `TASK_MODE` ‚Äî –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó –º—ñ–∂ –∑–∞–≤–¥–∞–Ω–Ω—è–º–∏ —Ç–∞ —à–∞–±–ª–æ–Ω–∞–º–∏.
* –ü–æ–ª—è `DATE_CREATE`, `DATE_UPDATE`, `CREATOR`, `UPDATOR` –∑–∞–ø–∏—Å—É—é—Ç—å—Å—è –±–µ–∑ –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω—å, –æ—Å–∫—ñ–ª—å–∫–∏ –≤–∂–µ —Ñ–æ—Ä–º—É—é—Ç—å—Å—è –≤ –∫–æ–ª–µ–∫—Ü—ñ—ó.

–Ø–∫—â–æ —Ö–æ—á–µ—à ‚Äî –º–æ–∂—É —Ç–∞–∫–æ–∂ –¥–æ–¥–∞—Ç–∏ –ª–æ–≥—ñ–∫—É –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ **–æ–Ω–æ–≤–ª–µ–Ω–Ω—è SUBTASK\_ORDER –ø—Ä–∏ –∑–º—ñ–Ω—ñ** –∞–±–æ **—Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—ñ –≤ IG**.
