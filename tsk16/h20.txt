–û–Ω–æ–≤–ª–µ–Ω–∏–π –∫–æ–¥ –ø—Ä–æ—Ü–µ–¥—É—Ä–∏ `DUPLICATE_TASK_OR_TEMPLATE` —ñ–∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º **–∫–æ–ª–µ–∫—Ü—ñ–π** `TASK_SUBTASKS_COLLECTION` —Ç–∞ `TASK_TEMPLATE_SUBTASKS_COLLECTION` —ñ –∫—É—Ä—Å–æ—Ä—ñ–≤ –±–µ–∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è `APEX_COLLECTION.GET_...` –≤–∏–≥–ª—è–¥–∞—î —Ç–∞–∫:

```plsql
DECLARE
  v_new_id          NUMBER;
  v_seq_id          NUMBER;
  l_collection_name VARCHAR2(50);
  l_id_map          DBMS_SQL.NUMBER_TABLE;

  -- –¢–∏–ø–∏ —Ä–µ–∂–∏–º—ñ–≤
  c_task_mode     CONSTANT NUMBER := 0;
  c_template_mode CONSTANT NUMBER := 1;

  -- –ö—É—Ä—Å–æ—Ä –ø–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ–π –∫–æ–ª–µ–∫—Ü—ñ—ó
  CURSOR c_items(p_coll_name VARCHAR2) IS
    SELECT *
    FROM apex_collections
    WHERE collection_name = p_coll_name
      AND NVL(c010, 'ACTIVE') != 'DELETE';

BEGIN
  -- –í–∏–∑–Ω–∞—á–∞—î–º–æ —â–æ –¥—É–±–ª—é—î–º–æ
  IF :P5_SWITCH = c_task_mode THEN
    -- üìå TASK
    SELECT TASKS_SEQ.NEXTVAL INTO v_new_id FROM DUAL;

    INSERT INTO TASKS (
      ID, DATE_CREATE, TASK_CONTENT, CREATOR_ID, PLANNING_DATE_START,
      PLANNING_DATE_END, STATUS_ID, DEPARTMENT_ID, UNIT_ID, TYPE_ID,
      PAGE_LIST_ID, IS_GENERATED, GENERATED_DATE, TEMPLATE_ID, NOTE
    )
    SELECT
      v_new_id, SYSDATE, TASK_CONTENT, CREATOR_ID, SYSDATE,
      PLANNING_DATE_END, STATUS_ID, DEPARTMENT_ID, UNIT_ID, TYPE_ID,
      PAGE_LIST_ID, IS_GENERATED, GENERATED_DATE, TEMPLATE_ID, NOTE
    FROM TASKS WHERE ID = :P5_TASK_ID;

    l_collection_name := 'TASK_SUBTASKS_COLLECTION';

  ELSE
    -- üìå TEMPLATE
    SELECT TASK_TEMPLATE_SEQ.NEXTVAL INTO v_new_id FROM DUAL;

    INSERT INTO TASK_TEMPLATES (
      ID, DATE_CREATE, TASK_CONTENT, CREATOR_ID, STATUS_ID,
      DEPARTMENT_ID, UNIT_ID, TYPE_ID, PAGE_LIST_ID,
      PERIOD_MODE, PERIOD_INTERVAL, PERIOD_TIME,
      HOURLY_TIMES, NEXT_RUN_DATE, DATE_END
    )
    SELECT
      v_new_id, SYSDATE, TASK_CONTENT, CREATOR_ID, STATUS_ID,
      DEPARTMENT_ID, UNIT_ID, TYPE_ID, PAGE_LIST_ID,
      PERIOD_MODE, PERIOD_INTERVAL, PERIOD_TIME,
      HOURLY_TIMES, NEXT_RUN_DATE, DATE_END
    FROM TASK_TEMPLATES WHERE ID = :P5_TASK_ID;

    l_collection_name := 'TASK_TEMPLATE_SUBTASKS_COLLECTION';
  END IF;

  -- –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∫–æ–ª–µ–∫—Ü—ñ—ó
  IF APEX_COLLECTION.COLLECTION_EXISTS(l_collection_name) THEN
    -- üîÅ –î—É–±–ª—é–≤–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
    FOR r IN c_items(l_collection_name) LOOP
      v_seq_id := APEX_COLLECTION.ADD_MEMBER(
        p_collection_name => l_collection_name,
        p_c001 => v_new_id,                -- TASK_ID or TEMPLATE_ID
        p_c002 => r.c002,                  -- CONTENT
        p_d001 => r.d001,                  -- PLANNING_DATE_END
        p_c003 => r.c003,                  -- PARENT_ID (—Ç–∏–º—á–∞—Å–æ–≤–æ —Å—Ç–∞—Ä–∏–π)
        p_c004 => r.c004,                  -- SUBTASK_ORDER
        p_c005 => r.c005,                  -- STATUS_ID
        p_d002 => SYSDATE,                 -- DATE_CREATE
        p_d003 => NULL,                    -- DATE_UPDATE
        p_c006 => r.c006,                  -- CREATOR
        p_c007 => NULL,                    -- UPDATOR
        p_n001 => :P5_SWITCH               -- TASK_MODE
      );

      l_id_map(r.seq_id) := v_seq_id;
    END LOOP;

    -- üîÅ –û–Ω–æ–≤–ª—é—î–º–æ PARENT_ID
    FOR i IN 1 .. l_id_map.COUNT LOOP
      DECLARE
        v_old_seq_id NUMBER := l_id_map.FIRST;
        v_new_seq_id NUMBER := l_id_map(v_old_seq_id);
        v_old_parent VARCHAR2(100);
        v_new_parent NUMBER;
      BEGIN
        SELECT c003
        INTO v_old_parent
        FROM apex_collections
        WHERE collection_name = l_collection_name AND seq_id = v_old_seq_id;

        IF v_old_parent IS NOT NULL THEN
          v_new_parent := l_id_map(TO_NUMBER(v_old_parent));
          APEX_COLLECTION.UPDATE_MEMBER_ATTRIBUTE(
            p_collection_name => l_collection_name,
            p_seq             => v_new_seq_id,
            p_attr_number     => 4, -- C003
            p_attr_value      => v_new_parent
          );
        END IF;
      END;
    END LOOP;
  END IF;

  -- ‚úÖ JSON
  APEX_JSON.OPEN_OBJECT;
  APEX_JSON.WRITE('status', 'ok');
  APEX_JSON.WRITE('newId', v_new_id);
  APEX_JSON.CLOSE_OBJECT;

EXCEPTION
  WHEN OTHERS THEN
    APEX_JSON.OPEN_OBJECT;
    APEX_JSON.WRITE('status', 'error');
    APEX_JSON.WRITE('message', SQLERRM);
    APEX_JSON.CLOSE_OBJECT;
END;
```

### ‚úÖ –ü–æ—è—Å–Ω–µ–Ω–Ω—è:

* –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è `l_collection_name` –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ `P5_SWITCH`.
* –î–∞–Ω—ñ —á–∏—Ç–∞—é—Ç—å—Å—è —á–µ—Ä–µ–∑ `CURSOR` –∑ `apex_collections`.
* –°–ø–æ—á–∞—Ç–∫—É —Å—Ç–≤–æ—Ä—é—é—Ç—å—Å—è –Ω–æ–≤—ñ –∑–∞–ø–∏—Å–∏ –≤ –∫–æ–ª–µ–∫—Ü—ñ—ó.
* –ü–æ—Ç—ñ–º –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –¥—Ä—É–≥–∞ —Ñ–∞–∑–∞ ‚Äî –æ–Ω–æ–≤–ª–µ–Ω–Ω—è `PARENT_ID` –∑ –º–∞–ø–∏ `l_id_map`.

–ú–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∫–æ–≤–æ:

* –î–æ–¥–∞—Ç–∏ –ª–æ–≥—ñ–∫—É –æ—á–∏—â–µ–Ω–Ω—è —Ç–∏–º—á–∞—Å–æ–≤–∏—Ö –∞—Ç—Ä–∏–±—É—Ç—ñ–≤ (—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ).
* –ü—ñ—Å–ª—è –¥—É–±–ª—é–≤–∞–Ω–Ω—è ‚Äî –≤—ñ–¥–æ–±—Ä–∞–∑–∏—Ç–∏ –∑–∞–ø–∏—Å —É —Ñ–æ—Ä–º—ñ.

–ì–æ—Ç–æ–≤–∏–π –¥–æ–ø–æ–º–æ–≥—Ç–∏ –∑ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è–º —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —É –º–æ–¥–∞–ª—å–Ω–æ–º—É –≤—ñ–∫–Ω—ñ –ø—ñ—Å–ª—è –¥—É–±–ª—é–≤–∞–Ω–Ω—è, —è–∫—â–æ —Ç—Ä–µ–±–∞.
