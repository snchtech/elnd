–ü—Ä–æ–±–ª–µ–º–∞ –≤–∏–Ω–∏–∫–∞—î —á–µ—Ä–µ–∑ —Ç–µ, —â–æ Oracle —Å–æ—Ä—Ç—É—î `s.SUBTASK_ORDER` **—è–∫ —Ä—è–¥–æ–∫**, –∞ –Ω–µ —è–∫ —á–∏—Å–ª–æ–≤–æ-—ñ—î—Ä–∞—Ä—Ö—ñ—á–Ω—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É (`1`, `1.1`, `2`, `2.1`).

---

## ‚ùå –ü–æ—Ç–æ—á–Ω–µ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è (—Ä—è–¥–∫–æ–≤–µ):

```
1
1.1
2.1
2
```

## ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–µ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è (—ñ—î—Ä–∞—Ä—Ö—ñ—á–Ω–µ/–ª–æ–≥—ñ—á–Ω–µ):

```
1
1.1
2
2.1
```

---

## üõ† –†—ñ—à–µ–Ω–Ω—è: –°–æ—Ä—Ç—É–≤–∞—Ç–∏ –ø–æ `TO_NUMBER(SUBSTR(...))` —ñ `LEVEL`

### –í–ê–†–Ü–ê–ù–¢ 1: –Ø–∫—â–æ `SUBTASK_ORDER` ‚Äî —ñ—î—Ä–∞—Ä—Ö—ñ—è —Ç–∏–ø—É `1`, `1.1`, `2.1`, `3.1.1` —ñ —Ç.–¥.

–†–æ–∑–¥—ñ–ª–∏ `SUBTASK_ORDER` –Ω–∞ —á–∞—Å—Ç–∏–Ω–∏ —ñ —Å–æ—Ä—Ç—É–π –ø–æ –∫–æ–∂–Ω—ñ–π —á–∞—Å—Ç–∏–Ω—ñ —è–∫ —á–∏—Å–ª—É.

```sql
SELECT LISTAGG('<li>' || s.SUBTASK_CONTENT || '</li>', '') 
       WITHIN GROUP (ORDER BY
         TO_NUMBER(REGEXP_SUBSTR(s.SUBTASK_ORDER, '^\d+')),                      -- –ø–µ—Ä—à–∏–π —Ä—ñ–≤–µ–Ω—å
         TO_NUMBER(REGEXP_SUBSTR(s.SUBTASK_ORDER, '\.(\d+)', 1, 1)),             -- –¥—Ä—É–≥–∏–π —Ä—ñ–≤–µ–Ω—å
         TO_NUMBER(REGEXP_SUBSTR(s.SUBTASK_ORDER, '\.(\d+)', 1, 2))              -- —Ç—Ä–µ—Ç—ñ–π —Ä—ñ–≤–µ–Ω—å (—è–∫—â–æ —î)
       )
FROM TASK_SUBTASKS s
WHERE s.TASK_ID = t.ID
```

---

### üîç –Ø–∫ –ø—Ä–∞—Ü—é—î REGEXP\_SUBSTR:

* `^\d+` ‚Äî –∑–Ω–∞—Ö–æ–¥–∏—Ç—å **–ø–µ—Ä—à—É —á–∞—Å—Ç–∏–Ω—É** (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, `2` —ñ–∑ `2.1.3`)
* `\.(\d+)` –∑ `1,1` ‚Äî **–¥—Ä—É–≥–∞ —á–∞—Å—Ç–∏–Ω–∞**
* `\.(\d+)` –∑ `1,2` ‚Äî **—Ç—Ä–µ—Ç—è —á–∞—Å—Ç–∏–Ω–∞**

---

## ‚úÖ –ü—ñ–¥—Å—É–º–∫–æ–≤–∞ –≤–µ—Ä—Å—ñ—è —Ç–≤–æ–≥–æ `CASE` –∑ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è–º:

```sql
CASE 
  WHEN t.TYPE_ID = 0 THEN t.TASK_CONTENT
  ELSE (
    SELECT LISTAGG('<li>' || s.SUBTASK_CONTENT || '</li>', '') 
    WITHIN GROUP (
      ORDER BY
        TO_NUMBER(REGEXP_SUBSTR(s.SUBTASK_ORDER, '^\d+')),
        TO_NUMBER(REGEXP_SUBSTR(s.SUBTASK_ORDER, '\.(\d+)', 1, 1)),
        TO_NUMBER(REGEXP_SUBSTR(s.SUBTASK_ORDER, '\.(\d+)', 1, 2))
    )
    FROM TASK_SUBTASKS s
    WHERE s.TASK_ID = t.ID
  )
END AS TASK_DESCRIPTION_HTML
```

---

## üìù –ü—Ä–∏–º—ñ—Ç–∫–∏:

* –Ø–∫—â–æ —É —Ç–µ–±–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –≥–ª–∏–±–∏–Ω–∞ ‚Äî 2 —Ä—ñ–≤–Ω—ñ (`1`, `1.1`, `2`, `2.1`) ‚Äî –¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø–µ—Ä—à–∏—Ö –¥–≤–æ—Ö `REGEXP_SUBSTR`.
* –Ø–∫—â–æ `SUBTASK_ORDER` –Ω–µ –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –º–∞—î —Ñ–æ—Ä–º–∞—Ç `X.Y` ‚Äî –¥–æ–¥–∞–π `NVL(..., 0)` –∞–±–æ `CASE` –¥–ª—è –æ–±—Ä–æ–±–∫–∏ `NULL`.

---

üîî –Ø–∫—â–æ —Ö–æ—á–µ—à –ø–æ–≤–Ω—ñ—Å—Ç—é –ø–µ—Ä–µ–±—É–¥—É–≤–∞—Ç–∏ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è —ñ—î—Ä–∞—Ä—Ö—ñ—ó –∑ –≥–ª–∏–±—à–∏–º–∏ —Ä—ñ–≤–Ω—è–º–∏ (`1.1.1.2` —Ç–æ—â–æ), —Å–∫–∞–∂–∏ ‚Äî –∑–∞–ø—Ä–æ–ø–æ–Ω—É—é –±—ñ–ª—å—à –¥–∏–Ω–∞–º—ñ—á–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç.



–©–æ–± —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ **–ø—Ä–∞–≤–∏–ª—å–Ω–µ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –∑–∞ —ñ—î—Ä–∞—Ä—Ö—ñ—á–Ω–∏–º–∏ SUBTASK\_ORDER**, —è–∫—ñ –º–∞—é—Ç—å **–¥–æ–≤—ñ–ª—å–Ω—É –≥–ª–∏–±–∏–Ω—É** (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: `1`, `1.1`, `1.1.1.2`, `2.3.10`), –ø–æ—Ç—Ä—ñ–±–Ω–æ:

---

## ‚úÖ –ú–µ—Ç–∞:

* –ü–µ—Ä–µ—Ç–≤–æ—Ä–∏—Ç–∏ —ñ—î—Ä–∞—Ä—Ö—ñ—á–Ω–∏–π —Ä—è–¥–æ–∫ (`SUBTASK_ORDER`) –Ω–∞ **–º–∞—Å–∏–≤ —á–∏—Å–µ–ª**
* –°–æ—Ä—Ç—É–≤–∞—Ç–∏ –∑–∞ **–∫–æ–∂–Ω–æ—é —á–∞—Å—Ç–∏–Ω–æ—é –æ–∫—Ä–µ–º–æ**
* **–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤—Ä–∞—Ö–æ–≤—É–≤–∞—Ç–∏ –≥–ª–∏–±–∏–Ω—É** (–¥–æ N —Ä—ñ–≤–Ω—ñ–≤)

---

## üõ† –†—ñ—à–µ–Ω–Ω—è: –ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ `REGEXP_SUBSTR` –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ä—ñ–≤–Ω—è –¥–æ N (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 5)

> Oracle SQL –Ω–µ –º–∞—î "–º–∞—Å–∏–≤—É —á–∏—Å–µ–ª –¥–ª—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è", —Ç–æ–º—É —Å–∏–º—É–ª—é—î–º–æ —á–µ—Ä–µ–∑ –æ–∫—Ä–µ–º—ñ `TO_NUMBER(...)` —á–∞—Å—Ç–∏–Ω–∏.

---

### üîß –û–Ω–æ–≤–ª–µ–Ω–∏–π `ORDER BY` –¥–ª—è `LISTAGG`:

```sql
SELECT LISTAGG('<li>' || s.SUBTASK_CONTENT || '</li>', '') 
       WITHIN GROUP (ORDER BY
         TO_NUMBER(REGEXP_SUBSTR(s.SUBTASK_ORDER, '(^|\.)\d+', 1, 1)),
         TO_NUMBER(REGEXP_SUBSTR(s.SUBTASK_ORDER, '(^|\.)\d+', 1, 2)),
         TO_NUMBER(REGEXP_SUBSTR(s.SUBTASK_ORDER, '(^|\.)\d+', 1, 3)),
         TO_NUMBER(REGEXP_SUBSTR(s.SUBTASK_ORDER, '(^|\.)\d+', 1, 4)),
         TO_NUMBER(REGEXP_SUBSTR(s.SUBTASK_ORDER, '(^|\.)\d+', 1, 5))
       )
FROM TASK_SUBTASKS s
WHERE s.TASK_ID = t.ID
```

---

### üîç –Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î:

* `REGEXP_SUBSTR(s.SUBTASK_ORDER, '(^|\.)\d+', 1, N)`
  –∑–Ω–∞—Ö–æ–¥–∏—Ç—å **N-—Ç—É —á–∏—Å–ª–æ–≤—É —á–∞—Å—Ç–∏–Ω—É** –∑ —ñ—î—Ä–∞—Ä—Ö—ñ—á–Ω–æ–≥–æ —Ä—è–¥–∫–∞
* `TO_NUMBER(...)` ‚Äî –∑–∞–±–µ–∑–ø–µ—á—É—î **–ø—Ä–∞–≤–∏–ª—å–Ω–µ —á–∏—Å–ª–æ–≤–µ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è**

---

### üìå –ü—Ä–∏–∫–ª–∞–¥ SUBTASK\_ORDER —Å–æ—Ä—Ç—É—î—Ç—å—Å—è —Ç–∞–∫:

| SUBTASK\_ORDER | –ß–∞—Å—Ç–∏–Ω–∏    | –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è |
| -------------- | ---------- | ---------- |
| `1`            | 1          | 1          |
| `1.1`          | 1, 1       | 1.1        |
| `1.1.1`        | 1, 1, 1    | 1.1.1      |
| `1.1.1.2`      | 1, 1, 1, 2 | 1.1.1.2    |
| `2`            | 2          | 2          |
| `2.3.10`       | 2, 3, 10   | 2.3.10     |

---

### üõë –Ø–∫—â–æ SUBTASK\_ORDER –Ω–µ –∑–∞–≤–∂–¥–∏ –≤–∞–ª—ñ–¥–Ω–∏–π

> –î–æ–¥–∞–π –æ–±–≥–æ—Ä—Ç–∫—É `NVL(..., 0)` —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –ø–æ–º–∏–ª–∫–∏ `TO_NUMBER(null)`:

```sql
NVL(TO_NUMBER(REGEXP_SUBSTR(...)), 0)
```

---

## ‚úÖ –ü–æ–≤–Ω–∏–π `CASE` —ñ–∑ –¥–∏–Ω–∞–º—ñ—á–Ω–∏–º —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è–º:

```sql
CASE 
  WHEN t.TYPE_ID = 0 THEN t.TASK_CONTENT
  ELSE (
    SELECT LISTAGG('<li>' || s.SUBTASK_CONTENT || '</li>', '') 
    WITHIN GROUP (
      ORDER BY
        NVL(TO_NUMBER(REGEXP_SUBSTR(s.SUBTASK_ORDER, '(^|\.)\d+', 1, 1)), 0),
        NVL(TO_NUMBER(REGEXP_SUBSTR(s.SUBTASK_ORDER, '(^|\.)\d+', 1, 2)), 0),
        NVL(TO_NUMBER(REGEXP_SUBSTR(s.SUBTASK_ORDER, '(^|\.)\d+', 1, 3)), 0),
        NVL(TO_NUMBER(REGEXP_SUBSTR(s.SUBTASK_ORDER, '(^|\.)\d+', 1, 4)), 0),
        NVL(TO_NUMBER(REGEXP_SUBSTR(s.SUBTASK_ORDER, '(^|\.)\d+', 1, 5)), 0)
    )
    FROM TASK_SUBTASKS s
    WHERE s.TASK_ID = t.ID
  )
END AS TASK_DESCRIPTION_HTML
```

---

‚úÖ –ü—Ä–∞—Ü—é—î –Ω–∞–≤—ñ—Ç—å –¥–ª—è —Å–∫–ª–∞–¥–Ω–∏—Ö —ñ—î—Ä–∞—Ä—Ö—ñ–π –¥–æ `5 —Ä—ñ–≤–Ω—ñ–≤`. –ú–æ–∂–µ—à –¥–æ–¥–∞—Ç–∏ –±—ñ–ª—å—à–µ `REGEXP_SUBSTR(..., N)` –ø—Ä–∏ –ø–æ—Ç—Ä–µ–±—ñ.

üîî –Ø–∫—â–æ —Ö–æ—á–µ—à –∑—Ä–æ–±–∏—Ç–∏ —Ü–µ —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü—ñ—é –∞–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –≤ —ñ–Ω—à–∏—Ö –º—ñ—Å—Ü—è—Ö ‚Äî –º–æ–∂—É –æ—Ñ–æ—Ä–º–∏—Ç–∏ —Ü–µ —è–∫ **SQL view** –∞–±–æ **PL/SQL function**.
