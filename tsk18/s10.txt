–¢–∏ —Ö–æ—á–µ—à –¥–∏–Ω–∞–º—ñ—á–Ω–æ —Ä–æ–∑—Ä–∞—Ö–æ–≤—É–≤–∞—Ç–∏ `NEXT_RUN_DATE` —É –¥–≤–æ—Ö —Å—Ü–µ–Ω–∞—Ä—ñ—è—Ö:

1. üìå –ü—Ä–∏ **—Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ —à–∞–±–ª–æ–Ω—É** ‚Äî –≤—Å—Ç–∞–Ω–æ–≤–ª—é–≤–∞—Ç–∏ –ø–æ—á–∞—Ç–∫–æ–≤—É –¥–∞—Ç—É –∑–∞–ø—É—Å–∫—É.
2. üîÅ –ü—Ä–∏ **job —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–≤–¥–∞–Ω—å** ‚Äî **–æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏ `NEXT_RUN_DATE`** –ø—ñ—Å–ª—è –∫–æ–∂–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫—É, –æ–±—á–∏—Å–ª—é—é—á–∏ –Ω–∞—Å—Ç—É–ø–Ω—É –Ω–∞–π–±–ª–∏–∂—á—É –¥–∞—Ç—É –Ω–∞ –æ—Å–Ω–æ–≤—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ—Å—Ç—ñ.

–†–æ–∑–≥–ª—è–Ω–µ–º–æ –æ–±–∏–¥–≤–∞ –≤–∞—Ä—ñ–∞–Ω—Ç–∏. –§–æ—Ä–º–∞—Ç –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —ñ –≤–∏–≤–æ–¥—É: `DD.MM.YYYY HH24:MI`.

---

## üìÖ –ü–æ—è—Å–Ω–µ–Ω–Ω—è –ª–æ–≥—ñ–∫–∏

### üî∑ **PERIOD\_MODE = 1 (—á–µ—Ä–µ–∑ N –¥–Ω—ñ–≤)**

* `PERIOD_INTERVAL` ‚Äî —ñ–Ω—Ç–µ—Ä–≤–∞–ª —É –¥–Ω—è—Ö (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 2 –∞–±–æ 30).
* `PERIOD_TIME` ‚Äî —á–∞—Å –∑–∞–ø—É—Å–∫—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, `10:00`, `18:00`).
* üëâ `NEXT_RUN_DATE = SYSDATE + n –¥–Ω—ñ–≤` –¥–æ –Ω–∞–π–±–ª–∏–∂—á–æ—ó –¥–∞—Ç–∏ –∑ —á–∞—Å–æ–º `PERIOD_TIME`.

### üî∑ **PERIOD\_MODE = 2 (–ø–æ –¥–Ω—è—Ö —Ç–∏–∂–Ω—è)**

* `WEEKLY_DAY` ‚Äî –Ω–æ–º–µ—Ä –¥–Ω—è —Ç–∏–∂–Ω—è (1=–ü–ù, 2=–í–¢, ..., 7=–ù–î).
* `WEEKLY_TIMES` ‚Äî —Å–ø–∏—Å–æ–∫ —á–∞—Å—É —É —Ñ–æ—Ä–º–∞—Ç—ñ `10:00,18:00,...`.
* üëâ –í–∏–±–∏—Ä–∞—î–º–æ **–Ω–∞–π–±–ª–∏–∂—á–∏–π –¥–µ–Ω—å —ñ —á–∞—Å**, —è–∫—ñ –±—ñ–ª—å—à—ñ –∑–∞ –ø–æ—Ç–æ—á–Ω–∏–π –º–æ–º–µ–Ω—Ç (`SYSDATE`).

---

## ‚úÖ –ö–û–î –î–õ–Ø –°–¢–í–û–†–ï–ù–ù–Ø (PL/SQL —Ñ—Ä–∞–≥–º–µ–Ω—Ç)

```plsql
DECLARE
  v_next_run_date DATE;
  v_now DATE := SYSDATE;
BEGIN
  -- PERIOD_MODE 1: —á–µ—Ä–µ–∑ —ñ–Ω—Ç–µ—Ä–≤–∞–ª —É –¥–Ω—è—Ö
  IF :P_PERIOD_MODE = 1 THEN
    v_next_run_date := TRUNC(v_now) + :P_PERIOD_INTERVAL + TO_NUMBER(TO_CHAR(:P_PERIOD_TIME, 'SSSSS')) / 86400;

  -- PERIOD_MODE 2: –ø–æ –¥–Ω—è—Ö —Ç–∏–∂–Ω—è —ñ —á–∞—Å–∞—Ö
  ELSIF :P_PERIOD_MODE = 2 THEN
    DECLARE
      v_min_date DATE := NULL;
      v_day_target NUMBER := :P_WEEKLY_DAY; -- 1=Monday
      v_now_day NUMBER := TO_CHAR(v_now, 'D'); -- –ø–æ—Ç–æ—á–Ω–∏–π –¥–µ–Ω—å —Ç–∏–∂–Ω—è
      v_days_ahead NUMBER;
      v_time_str VARCHAR2(10);
      v_time_date DATE;
    BEGIN
      FOR time_item IN (
        SELECT REGEXP_SUBSTR(:P_WEEKLY_TIMES, '[^,]+', 1, LEVEL) AS time_part
        FROM dual
        CONNECT BY LEVEL <= REGEXP_COUNT(:P_WEEKLY_TIMES, ',') + 1
      )
      LOOP
        v_days_ahead := (v_day_target + 7 - TO_CHAR(v_now, 'D')) MOD 7;
        IF v_days_ahead = 0 THEN
          -- –ø–æ—Ç–æ—á–Ω–∏–π –¥–µ–Ω—å, –ø–µ—Ä–µ–≤—ñ—Ä–∏–º–æ —á–∏ —á–∞—Å –≤–∂–µ –º–∏–Ω—É–≤
          v_time_date := TRUNC(v_now) + TO_NUMBER(TO_CHAR(TO_DATE(time_item.time_part, 'HH24:MI'), 'SSSSS')) / 86400;
          IF v_time_date <= v_now THEN
            v_days_ahead := 7;
          END IF;
        END IF;

        v_time_date := TRUNC(v_now) + v_days_ahead + TO_NUMBER(TO_CHAR(TO_DATE(time_item.time_part, 'HH24:MI'), 'SSSSS')) / 86400;

        IF v_min_date IS NULL OR v_time_date < v_min_date THEN
          v_min_date := v_time_date;
        END IF;
      END LOOP;

      v_next_run_date := v_min_date;
    END;
  END IF;

  -- –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤ TASK_TEMPLATES (—Ç—ñ–ª—å–∫–∏ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ —à–∞–±–ª–æ–Ω—É)
  UPDATE TASK_TEMPLATES
  SET NEXT_RUN_DATE = v_next_run_date
  WHERE ID = :P_TEMPLATE_ID;
END;
```

---

## üîÅ –ö–û–î –î–õ–Ø JOB (–æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—ñ—Å–ª—è –∑–∞–ø—É—Å–∫—É):

```plsql
DECLARE
  v_next_run_date DATE;
  v_now DATE := SYSDATE;
BEGIN
  FOR rec IN (
    SELECT ID, PERIOD_MODE, PERIOD_INTERVAL, PERIOD_TIME, WEEKLY_DAY, WEEKLY_TIMES
    FROM TASK_TEMPLATES
    WHERE STATUS_ID = 1 -- –∞–∫—Ç–∏–≤–Ω—ñ —à–∞–±–ª–æ–Ω–∏
  ) LOOP
    -- ===== LOGIKA =====
    IF rec.PERIOD_MODE = 1 THEN
      v_next_run_date := TRUNC(v_now) + rec.PERIOD_INTERVAL + TO_NUMBER(TO_CHAR(rec.PERIOD_TIME, 'SSSSS')) / 86400;

    ELSIF rec.PERIOD_MODE = 2 THEN
      DECLARE
        v_min_date DATE := NULL;
        v_days_ahead NUMBER;
        v_time_date DATE;
      BEGIN
        FOR time_item IN (
          SELECT REGEXP_SUBSTR(rec.WEEKLY_TIMES, '[^,]+', 1, LEVEL) AS time_part
          FROM dual
          CONNECT BY LEVEL <= REGEXP_COUNT(rec.WEEKLY_TIMES, ',') + 1
        )
        LOOP
          v_days_ahead := (rec.WEEKLY_DAY + 7 - TO_CHAR(v_now, 'D')) MOD 7;
          IF v_days_ahead = 0 THEN
            v_time_date := TRUNC(v_now) + TO_NUMBER(TO_CHAR(TO_DATE(time_item.time_part, 'HH24:MI'), 'SSSSS')) / 86400;
            IF v_time_date <= v_now THEN
              v_days_ahead := 7;
            END IF;
          END IF;

          v_time_date := TRUNC(v_now) + v_days_ahead + TO_NUMBER(TO_CHAR(TO_DATE(time_item.time_part, 'HH24:MI'), 'SSSSS')) / 86400;

          IF v_min_date IS NULL OR v_time_date < v_min_date THEN
            v_min_date := v_time_date;
          END IF;
        END LOOP;

        v_next_run_date := v_min_date;
      END;
    END IF;

    -- –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤ —à–∞–±–ª–æ–Ω—ñ
    UPDATE TASK_TEMPLATES
    SET NEXT_RUN_DATE = v_next_run_date
    WHERE ID = rec.ID;
  END LOOP;
END;
```

---

## üñ® –§–æ—Ä–º–∞—Ç —É –∑–≤—ñ—Ç—ñ

–£ SELECT-–∑–∞–ø–∏—Ç—ñ –∑–≤—ñ—Ç—É, –¥–µ –≤–∏–≤–æ–¥–∏—à –∫–æ–ª–æ–Ω–∫—É:

```sql
TO_CHAR(tt.NEXT_RUN_DATE, 'DD.MM.YYYY HH24:MI') AS NEXT_RUN_DATE
```

---

## üß™ –•–æ—á–µ—à –ø—Ä–æ—Ç–µ—Å—Ç—É–≤–∞—Ç–∏?

–ú–æ–∂—É –¥–∞—Ç–∏ –æ–∫—Ä–µ–º—ñ –ø—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–ª–∏–∫—É —Ñ—É–Ω–∫—Ü—ñ—ó —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É `NEXT_RUN_DATE` –∞–±–æ –≤–∏–Ω–µ—Å—Ç–∏ –ª–æ–≥—ñ–∫—É –≤ **PL/SQL-—Ñ—É–Ω–∫—Ü—ñ—é** –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è (`GET_NEXT_RUN_DATE(...)`).

–ù–∞–ø–∏—à–∏, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ —Ç–∞–∫–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è.
