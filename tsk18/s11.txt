–û–∫! –°—Ç–≤–æ—Ä–∏–º–æ –±–∞–≥–∞—Ç–æ—Ä–∞–∑–æ–≤—É **PL/SQL-—Ñ—É–Ω–∫—Ü—ñ—é `GET_NEXT_RUN_DATE`**, —è–∫–∞:

* –ø—Ä–∏–π–º–∞—î –ø–∞—Ä–∞–º–µ—Ç—Ä–∏: `PERIOD_MODE`, `PERIOD_INTERVAL`, `PERIOD_TIME`, `WEEKLY_DAY`, `WEEKLY_TIMES`
* –ø–æ–≤–µ—Ä—Ç–∞—î `DATE` ‚Äî –Ω–∞–π–±–ª–∏–∂—á—É –¥–∞—Ç—É –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫—É
* –ø—ñ–¥—Ç—Ä–∏–º—É—î –æ–±–∏–¥–≤–∞ —Ä–µ–∂–∏–º–∏ (`PERIOD_MODE = 1` —ñ `2`)
* –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤–∏–∑–Ω–∞—á–∞—î –Ω–∞–π–±–ª–∏–∂—á–∏–π –º–æ–º–µ–Ω—Ç —É –º–∞–π–±—É—Ç–Ω—å–æ–º—É

---

## ‚úÖ 1. **–§—É–Ω–∫—Ü—ñ—è —É —Å—Ö–µ–º—ñ (Oracle)**

```sql
CREATE OR REPLACE FUNCTION GET_NEXT_RUN_DATE (
    p_period_mode     IN NUMBER,
    p_period_interval IN NUMBER DEFAULT NULL,
    p_period_time     IN DATE DEFAULT NULL,
    p_weekly_day      IN NUMBER DEFAULT NULL,
    p_weekly_times    IN VARCHAR2 DEFAULT NULL
) RETURN DATE IS
    v_now           DATE := SYSDATE;
    v_next_run     DATE;
    v_temp_time    DATE;
    v_min_datetime DATE;
    v_days_ahead   NUMBER;
BEGIN
    IF p_period_mode = 1 THEN
        -- –ß–µ—Ä–µ–∑ N –¥–Ω—ñ–≤
        IF p_period_interval IS NOT NULL AND p_period_time IS NOT NULL THEN
            v_next_run := TRUNC(v_now) + p_period_interval + TO_NUMBER(TO_CHAR(p_period_time, 'SSSSS')) / 86400;
        END IF;

    ELSIF p_period_mode = 2 THEN
        -- –ü–æ –¥–Ω—è—Ö —Ç–∏–∂–Ω—è —Ç–∞ —á–∞—Å–∞—Ö (WEEKLY_DAY + WEEKLY_TIMES)
        FOR time_row IN (
            SELECT REGEXP_SUBSTR(p_weekly_times, '[^,]+', 1, LEVEL) AS time_part
            FROM dual
            CONNECT BY LEVEL <= REGEXP_COUNT(p_weekly_times, ',') + 1
        )
        LOOP
            v_days_ahead := MOD((p_weekly_day + 7 - TO_CHAR(v_now, 'D')), 7);
            IF v_days_ahead = 0 THEN
                v_temp_time := TRUNC(v_now) + TO_NUMBER(TO_CHAR(TO_DATE(time_row.time_part, 'HH24:MI'), 'SSSSS')) / 86400;
                IF v_temp_time <= v_now THEN
                    v_days_ahead := 7;
                END IF;
            END IF;

            v_temp_time := TRUNC(v_now) + v_days_ahead + TO_NUMBER(TO_CHAR(TO_DATE(time_row.time_part, 'HH24:MI'), 'SSSSS')) / 86400;

            IF v_min_datetime IS NULL OR v_temp_time < v_min_datetime THEN
                v_min_datetime := v_temp_time;
            END IF;
        END LOOP;

        v_next_run := v_min_datetime;
    END IF;

    RETURN v_next_run;
END GET_NEXT_RUN_DATE;
/
```

---

## üß™ 2. **–ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ SQL-–∑–∞–ø–∏—Ç—ñ**

```sql
SELECT
  GET_NEXT_RUN_DATE(
    PERIOD_MODE,
    PERIOD_INTERVAL,
    PERIOD_TIME,
    WEEKLY_DAY,
    WEEKLY_TIMES
  ) AS NEXT_RUN_DATE
FROM TASK_TEMPLATES;
```

---

## üîÑ 3. **–ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–ª–∏–∫—É –≤ APEX –∞–±–æ job**

```plsql
UPDATE TASK_TEMPLATES
SET NEXT_RUN_DATE = GET_NEXT_RUN_DATE(
    PERIOD_MODE,
    PERIOD_INTERVAL,
    PERIOD_TIME,
    WEEKLY_DAY,
    WEEKLY_TIMES
)
WHERE ID = :P_TEMPLATE_ID;
```

---

## üìù –ü—Ä–∏–º—ñ—Ç–∫–∏

* –§—É–Ω–∫—Ü—ñ—è –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î `TO_CHAR(..., 'SSSSS') / 86400`, —â–æ–± –¥–æ–¥–∞—Ç–∏ —á–∞—Å –¥–æ –¥–∞—Ç–∏.
* –Ø–∫—â–æ —Ç–æ–±—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ **–≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —É –≤–∏–≥–ª—è–¥—ñ —Ä—è–¥–∫–∞** (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, `'12.06.2025 10:00'`), –º–æ–∂–µ—à –æ–±–≥–æ—Ä–Ω—É—Ç–∏ —É `TO_CHAR(...)`:

  ```sql
  TO_CHAR(GET_NEXT_RUN_DATE(...), 'DD.MM.YYYY HH24:MI')
  ```

---

üîß –Ø–∫—â–æ —Ö–æ—á–µ—à ‚Äî –º–æ–∂—É —â–µ –≤–∏–Ω–µ—Å—Ç–∏ —Ü—é —Ñ—É–Ω–∫—Ü—ñ—é –≤ `PACKAGE` –∑ –ª–æ–≥—ñ–∫–æ—é —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–¥–∞—á –∞–±–æ –¥–æ–¥–∞—Ç–∏ –æ–±—Ä–æ–±–∫—É –º–Ω–æ–∂–∏–Ω–Ω–∏—Ö –¥–Ω—ñ–≤ (`WEEKLY_DAY` —è–∫ —Å–ø–∏—Å–æ–∫). –ù–∞–ø–∏—à–∏, —è–∫—â–æ —Ç—Ä–µ–±–∞.
