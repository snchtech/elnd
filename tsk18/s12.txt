–ß—É–¥–æ–≤–æ, –¥–∞–≤–∞–π –¥–æ–æ–ø—Ä–∞—Ü—é—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é `GET_NEXT_RUN_DATE`, —â–æ–± –≤–æ–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞–ª–∞ **–º–Ω–æ–∂–∏–Ω–Ω–∏–π —Å–ø–∏—Å–æ–∫ –¥–Ω—ñ–≤ —Ç–∏–∂–Ω—è (`WEEKLY_DAY`)**, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥:

```sql
'2,4,6' -- –≤—ñ–≤—Ç–æ—Ä–æ–∫, —á–µ—Ç–≤–µ—Ä, —Å—É–±–æ—Ç–∞
```

---

## ‚úÖ –û–ù–û–í–õ–ï–ù–ê –§–£–ù–ö–¶–Ü–Ø `GET_NEXT_RUN_DATE`

```sql
CREATE OR REPLACE FUNCTION GET_NEXT_RUN_DATE (
    p_period_mode     IN NUMBER,
    p_period_interval IN NUMBER DEFAULT NULL,
    p_period_time     IN DATE DEFAULT NULL,
    p_weekly_days     IN VARCHAR2 DEFAULT NULL, -- —Å–ø–∏—Å–æ–∫ –¥–Ω—ñ–≤ —Ç–∏–∂–Ω—è —á–µ—Ä–µ–∑ –∫–æ–º—É
    p_weekly_times    IN VARCHAR2 DEFAULT NULL  -- —Å–ø–∏—Å–æ–∫ —á–∞—Å—ñ–≤ —á–µ—Ä–µ–∑ –∫–æ–º—É
) RETURN DATE IS
    v_now           DATE := SYSDATE;
    v_next_run     DATE;
    v_temp_date    DATE;
    v_min_datetime DATE := NULL;
    v_day_num      NUMBER;
    v_time_val     VARCHAR2(10);
    v_days_ahead   NUMBER;
BEGIN
    IF p_period_mode = 1 THEN
        -- –ß–µ—Ä–µ–∑ N –¥–Ω—ñ–≤
        IF p_period_interval IS NOT NULL AND p_period_time IS NOT NULL THEN
            v_next_run := TRUNC(v_now) + p_period_interval + TO_NUMBER(TO_CHAR(p_period_time, 'SSSSS')) / 86400;
        END IF;

    ELSIF p_period_mode = 2 THEN
        -- –ü–æ –∫—ñ–ª—å–∫–æ—Ö –¥–Ω—è—Ö —Ç–∏–∂–Ω—è —Ç–∞ —á–∞—Å–∞—Ö
        FOR day_row IN (
            SELECT TO_NUMBER(REGEXP_SUBSTR(p_weekly_days, '[^,]+', 1, LEVEL)) AS day_val
            FROM dual
            CONNECT BY LEVEL <= REGEXP_COUNT(p_weekly_days, ',') + 1
        ) LOOP
            FOR time_row IN (
                SELECT REGEXP_SUBSTR(p_weekly_times, '[^,]+', 1, LEVEL) AS time_val
                FROM dual
                CONNECT BY LEVEL <= REGEXP_COUNT(p_weekly_times, ',') + 1
            ) LOOP
                -- —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –Ω–∞–π–±–ª–∏–∂—á–æ—ó –¥–∞—Ç–∏ –¥–ª—è –∫–æ–∂–Ω–æ—ó –∫–æ–º–±—ñ–Ω–∞—Ü—ñ—ó –¥–µ–Ω—å + —á–∞—Å
                v_days_ahead := MOD((day_row.day_val + 7 - TO_CHAR(v_now, 'D')), 7);
                v_temp_date := TRUNC(v_now) + v_days_ahead + TO_NUMBER(TO_CHAR(TO_DATE(time_row.time_val, 'HH24:MI'), 'SSSSS')) / 86400;

                -- —è–∫—â–æ –ø–æ—Ç–æ—á–Ω–∏–π –¥–µ–Ω—å —ñ —á–∞—Å —É –º–∏–Ω—É–ª–æ–º—É ‚Äì –ø–µ—Ä–µ—Å—É–≤–∞—î–º–æ –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–∏–π —Ç–∏–∂–¥–µ–Ω—å
                IF v_days_ahead = 0 AND v_temp_date <= v_now THEN
                    v_temp_date := v_temp_date + 7;
                END IF;

                IF v_min_datetime IS NULL OR v_temp_date < v_min_datetime THEN
                    v_min_datetime := v_temp_date;
                END IF;
            END LOOP;
        END LOOP;

        v_next_run := v_min_datetime;
    END IF;

    RETURN v_next_run;
END GET_NEXT_RUN_DATE;
/
```

---

## üîÅ –ü–†–ò–ö–õ–ê–î –í–ò–ö–õ–ò–ö–£

### üîπ –£ SQL-–∑–∞–ø–∏—Ç—ñ:

```sql
SELECT
  TO_CHAR(
    GET_NEXT_RUN_DATE(
      PERIOD_MODE,
      PERIOD_INTERVAL,
      PERIOD_TIME,
      WEEKLY_DAY,      -- —Ç–µ–ø–µ—Ä: —Å–ø–∏—Å–æ–∫ –¥–Ω—ñ–≤, –Ω–∞–ø—Ä. '2,4,6'
      WEEKLY_TIMES     -- –Ω–∞–ø—Ä. '10:00,18:00'
    ),
    'DD.MM.YYYY HH24:MI'
  ) AS NEXT_RUN_DATE
FROM TASK_TEMPLATES;
```

### üîπ –£ APEX / JOB:

```plsql
UPDATE TASK_TEMPLATES
SET NEXT_RUN_DATE = GET_NEXT_RUN_DATE(
    PERIOD_MODE,
    PERIOD_INTERVAL,
    PERIOD_TIME,
    WEEKLY_DAY,
    WEEKLY_TIMES
)
WHERE ID = :P_TEMPLATE_ID;
```

---

## üìù –ü—Ä–∏–º—ñ—Ç–∫–∏

* –í—Ö—ñ–¥–Ω—ñ `WEEKLY_DAY` —ñ `WEEKLY_TIMES` —Ç–µ–ø–µ—Ä ‚Äî **—Ä—è–¥–∫–∏ –∑ –ø–µ—Ä–µ–ª—ñ–∫–æ–º —á–µ—Ä–µ–∑ –∫–æ–º—É** (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: `'2,4'`, `'08:00,14:00'`).
* –§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–≤—ñ—Ä—è—î –≤—Å—ñ **–∫–æ–º–±—ñ–Ω–∞—Ü—ñ—ó –¥–µ–Ω—å + —á–∞—Å**, –æ–±–∏—Ä–∞—î **–Ω–∞–π–±–ª–∏–∂—á—É**, —è–∫–∞ –±—ñ–ª—å—à–∞ –∑–∞ `SYSDATE`.
* –î–µ–Ω—å —Ç–∏–∂–Ω—è ‚Äî —è–∫ —É `TO_CHAR(..., 'D')`, –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ `NLS_TERRITORY`, –∞–ª–µ –∑–∞–∑–≤–∏—á–∞–π:

  * `1` = –Ω–µ–¥—ñ–ª—è, `2` = –ø–æ–Ω–µ–¥—ñ–ª–æ–∫, ..., `7` = —Å—É–±–æ—Ç–∞ (**–ø–µ—Ä–µ–≤—ñ—Ä —É —Å–≤–æ—ó–π —Å–∏—Å—Ç–µ–º—ñ!**)
  * –Ø–∫—â–æ —Ö–æ—á–µ—à 1=–ü–ù ‚Üí –∫—Ä–∞—â–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π `TO_CHAR(..., 'D', 'NLS_TERRITORY=Ukraine')`

---

üîî –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ ‚Äî –º–æ–∂—É –∑—Ä–æ–±–∏—Ç–∏ –æ–∫—Ä–µ–º—É –≤–µ—Ä—Å—ñ—é –∑ –ª–æ–∫–∞–ª—ñ–∑–æ–≤–∞–Ω–æ—é –ø—Ä–∏–≤‚Äô—è–∑–∫–æ—é –¥–Ω—ñ–≤ –∞–±–æ –≤–∏–Ω–µ—Å—Ç–∏ —Ü–µ –≤ `PACKAGE`.
