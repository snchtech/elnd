–û—Å—å –æ–Ω–æ–≤–ª–µ–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç PL/SQL –∫–æ–¥—É –¥–ª—è –¥—É–±–ª—é–≤–∞–Ω–Ω—è –∑–∞–≤–¥–∞–Ω—å/—à–∞–±–ª–æ–Ω—ñ–≤ —ñ–∑ –ø—ñ–¥–∑–∞–≤–¥–∞–Ω–Ω—è–º–∏/–ø—ñ–¥—à–∞–±–ª–æ–Ω–∞–º–∏ **–Ω–∞ –æ—Å–Ω–æ–≤—ñ APEX\_COLLECTIONS**, –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º —Ç–≤–æ—î—ó —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –∫–æ–ª–µ–∫—Ü—ñ–π:

---

### üîÅ **1. –õ–æ–≥—ñ–∫–∞ –¥—É–±–ª—é–≤–∞–Ω–Ω—è –≤ APEX\_COLLECTIONS (–æ–Ω–æ–≤–ª–µ–Ω–∞)**

```plsql
DECLARE
  v_task_mode         NUMBER := APEX_APPLICATION.G_X01; -- 0 = TASK, 1 = TEMPLATE
  v_old_id            NUMBER := APEX_APPLICATION.G_X02;
  v_new_id            NUMBER;
  v_new_sub_id        NUMBER;

  -- –ú–∞–ø–∞ –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –Ω–æ–≤–∏—Ö ID
  TYPE t_map IS TABLE OF NUMBER INDEX BY NUMBER;
  l_id_map t_map;

BEGIN
  IF v_task_mode = 0 THEN
    -- ==== TASK MODE ====

    -- –û—Ç—Ä–∏–º—É—î–º–æ –Ω–æ–≤–∏–π ID –∑–∞–≤–¥–∞–Ω–Ω—è
    SELECT SEQ_TASKTRACKER_TASKS.NEXTVAL INTO v_new_id FROM DUAL;

    -- –î–æ–¥–∞—î–º–æ –≤ TASKS (–º–æ–∂–Ω–∞ —á–µ—Ä–µ–∑ —ñ–Ω—à–∏–π –ø—Ä–æ—Ü–µ—Å)

    -- –û–±—Ö–æ–¥–∏–º–æ –≤—Å—ñ –∑–∞–ø–∏—Å–∏ –∫–æ–ª–µ–∫—Ü—ñ—ó TASK_SUBTASKS_COLLECTION
    FOR r IN (
      SELECT *
      FROM APEX_COLLECTIONS
      WHERE COLLECTION_NAME = 'TASK_SUBTASKS_COLLECTION'
        AND c001 = v_old_id
        AND c008 != 'DELETE'
    )
    LOOP
      -- –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π ID
      SELECT SEQ_TSKTRACK_SUBTSK.NEXTVAL INTO v_new_sub_id FROM DUAL;

      -- –î–æ–¥–∞—î–º–æ –¥–æ –Ω–æ–≤–æ—ó –∫–æ–ª–µ–∫—Ü—ñ—ó
      APEX_COLLECTION.ADD_MEMBER(
        p_collection_name => 'TASK_SUBTASKS_COLLECTION',
        p_c001 => v_new_id,
        p_c002 => r.c002, -- subtask_content
        p_d001 => r.d001, -- planning_date_end
        p_c003 => NULL,   -- —Ç–∏–º—á–∞—Å–æ–≤–æ NULL
        p_c004 => r.c004, -- subtask_order
        p_c005 => r.c005, -- status_id
        p_d002 => SYSDATE,
        p_d003 => NULL,
        p_c006 => r.c006, -- creator
        p_c007 => r.c007, -- updator
        p_c008 => 'NEW',
        p_c009 => NULL,
        p_n001 => v_task_mode,
        p_n002 => r.n002  -- execution_term_days
      );

      -- –ó–∞–ø–∞–º'—è—Ç–æ–≤—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å —Å—Ç–∞—Ä–∏–π->–Ω–æ–≤–∏–π
      l_id_map(r.seq_id) := v_new_sub_id;
    END LOOP;

    -- –û–Ω–æ–≤–ª—é—î–º–æ PARENT_ID –¥–ª—è –Ω–æ–≤–∏—Ö –∑–∞–ø–∏—Å—ñ–≤ —É –∫–æ–ª–µ–∫—Ü—ñ—ó
    FOR i IN 1..APEX_COLLECTION.COLLECTION_MEMBER_COUNT('TASK_SUBTASKS_COLLECTION') LOOP
      IF APEX_COLLECTION.GET_MEMBER_ATTRIBUTE('TASK_SUBTASKS_COLLECTION', i, 'c003') IS NOT NULL THEN
        DECLARE
          v_old_parent_seq NUMBER := APEX_COLLECTION.GET_MEMBER_ATTRIBUTE('TASK_SUBTASKS_COLLECTION', i, 'c003');
          v_new_parent_id  NUMBER := l_id_map(v_old_parent_seq);
        BEGIN
          APEX_COLLECTION.UPDATE_MEMBER_ATTRIBUTE('TASK_SUBTASKS_COLLECTION', i, 3, v_new_parent_id);
        EXCEPTION WHEN OTHERS THEN NULL;
        END;
      END IF;
    END LOOP;

    -- JSON response
    APEX_JSON.OPEN_OBJECT;
    APEX_JSON.WRITE('status', 'ok');
    APEX_JSON.WRITE('newId', v_new_id);
    APEX_JSON.CLOSE_OBJECT;

  ELSE
    -- ==== TEMPLATE MODE ====

    SELECT SEQ_TASKTRACKER_TASK_TEMPLATES.NEXTVAL INTO v_new_id FROM DUAL;

    -- –í—Å—Ç–∞–≤–∏—Ç–∏ TEMPLATE (—á–µ—Ä–µ–∑ —ñ–Ω—à–∏–π INSERT/PROCESS)

    FOR r IN (
      SELECT *
      FROM APEX_COLLECTIONS
      WHERE COLLECTION_NAME = 'TASK_TEMPLATE_SUBTASKS_COLLECTION'
        AND c001 = v_old_id
        AND c008 != 'DELETE'
    )
    LOOP
      SELECT SEQ_TSKTRACK_SUBTSK_TEMPLATES.NEXTVAL INTO v_new_sub_id FROM DUAL;

      APEX_COLLECTION.ADD_MEMBER(
        p_collection_name => 'TASK_TEMPLATE_SUBTASKS_COLLECTION',
        p_c001 => v_new_id,
        p_c002 => r.c002,
        p_d001 => r.d001,
        p_c003 => NULL, -- —Ç–∏–º—á–∞—Å–æ–≤–æ NULL
        p_c004 => r.c004,
        p_c005 => r.c005,
        p_d002 => SYSDATE,
        p_d003 => NULL,
        p_c006 => r.c006,
        p_c007 => r.c007,
        p_c008 => 'NEW',
        p_c009 => NULL,
        p_n001 => v_task_mode,
        p_n002 => r.n002
      );

      l_id_map(r.seq_id) := v_new_sub_id;
    END LOOP;

    -- –û–Ω–æ–≤–ª–µ–Ω–Ω—è PARENT_ID
    FOR i IN 1..APEX_COLLECTION.COLLECTION_MEMBER_COUNT('TASK_TEMPLATE_SUBTASKS_COLLECTION') LOOP
      IF APEX_COLLECTION.GET_MEMBER_ATTRIBUTE('TASK_TEMPLATE_SUBTASKS_COLLECTION', i, 'c003') IS NOT NULL THEN
        DECLARE
          v_old_parent_seq NUMBER := APEX_COLLECTION.GET_MEMBER_ATTRIBUTE('TASK_TEMPLATE_SUBTASKS_COLLECTION', i, 'c003');
          v_new_parent_id  NUMBER := l_id_map(v_old_parent_seq);
        BEGIN
          APEX_COLLECTION.UPDATE_MEMBER_ATTRIBUTE('TASK_TEMPLATE_SUBTASKS_COLLECTION', i, 3, v_new_parent_id);
        EXCEPTION WHEN OTHERS THEN NULL;
        END;
      END IF;
    END LOOP;

    APEX_JSON.OPEN_OBJECT;
    APEX_JSON.WRITE('status', 'ok');
    APEX_JSON.WRITE('newId', v_new_id);
    APEX_JSON.CLOSE_OBJECT;

  END IF;

EXCEPTION
  WHEN OTHERS THEN
    APEX_JSON.OPEN_OBJECT;
    APEX_JSON.WRITE('status', 'error');
    APEX_JSON.WRITE('message', SQLERRM);
    APEX_JSON.CLOSE_OBJECT;
END;
```

---

### üîß –ö–æ–º–µ–Ω—Ç–∞—Ä—ñ:

* `c001` ‚Äî –∑–±–µ—Ä—ñ–≥–∞—î –Ω–æ–≤–∏–π `task_id` –∞–±–æ `template_id`.
* –î–ª—è PARENT\_ID: –º–∏ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ `seq_id` (–≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ–π –ø–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —á–ª–µ–Ω–∞ –∫–æ–ª–µ–∫—Ü—ñ—ó) —è–∫ —Ç–∏–º—á–∞—Å–æ–≤–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä, —â–æ–± –ø—ñ–∑–Ω—ñ—à–µ –æ–Ω–æ–≤–∏—Ç–∏ –∑–≤‚Äô—è–∑–∫–∏.
* –ù–µ –∑–∞–±—É–≤–∞–π –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –≤ –ë–î –æ–∫—Ä–µ–º–æ –æ–±—Ä–æ–±–∏—Ç–∏ `NEW` –∑–∞–ø–∏—Å–∏ (`c008 = 'NEW'`) –∑ –∫–æ–ª–µ–∫—Ü—ñ–π.

–•–æ—á–µ—à ‚Äî –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ –Ω–∞–ø–∏—Å–∞—Ç–∏ –æ–∫—Ä–µ–º–∏–π –ø—Ä–æ—Ü–µ—Å –¥–ª—è **–ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–Ω—è –Ω–æ–≤–∏—Ö –∑–∞–ø–∏—Å—ñ–≤ –∑ –∫–æ–ª–µ–∫—Ü—ñ–π —É —Ç–∞–±–ª–∏—Ü—ñ**.
