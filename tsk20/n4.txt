–û—Å—å –æ–Ω–æ–≤–ª–µ–Ω–∞ –≤–µ—Ä—Å—ñ—è —Ñ—É–Ω–∫—Ü—ñ—ó `GET_NEXT_RUN_DATE`, —è–∫–∞:

* –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î **—Ç–∞–±–ª–∏—Ü—é `TASK_TEMPLATE_WEEKDAYS`** –∑–∞–º—ñ—Å—Ç—å `p_weekly_day` —É —Ñ–æ—Ä–º–∞—Ç—ñ `'1:3:6'`;
* –≤—Ä–∞—Ö–æ–≤—É—î **`p_period_start`** —É —â–æ—Ç–∏–∂–Ω–µ–≤–æ–º—É —Ä–µ–∂–∏–º—ñ;
* –≤–∏–º–∞–≥–∞—î –Ω–∞ –≤—Ö—ñ–¥ **`p_template_id`** –∑–∞–º—ñ—Å—Ç—å `p_weekly_day`;
* –ø—Ä–∞—Ü—é—î –∑ –æ–±–æ–º–∞ —Ä–µ–∂–∏–º–∞–º–∏ (`INTERVAL`, `WEEKLY_TIME_SCHEDULE`).

---

### ‚úÖ **–û–Ω–æ–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è:**

```sql
FUNCTION GET_NEXT_RUN_DATE (
  p_template_id     IN NUMBER,
  p_period_mode     IN NUMBER,
  p_period_interval IN NUMBER DEFAULT NULL,
  p_period_time     IN DATE DEFAULT NULL,
  p_period_start    IN DATE DEFAULT NULL,
  p_weekly_times    IN DATE DEFAULT NULL
) RETURN DATE IS

  v_now           DATE := SYSDATE;
  v_next_run      DATE := NULL;
  v_temp_time     DATE;
  v_best_time     DATE := NULL;
  v_day           NUMBER;
  v_days_ahead    NUMBER;
  v_base_date     DATE;

BEGIN
  IF p_period_mode = 1 THEN
    -- –Ü–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω–∏–π —Ä–µ–∂–∏–º
    IF p_period_interval IS NOT NULL AND p_period_time IS NOT NULL THEN
      v_base_date := NVL(p_period_start, v_now);
      v_next_run := TRUNC(v_base_date) + p_period_interval
                    + TO_NUMBER(TO_CHAR(p_period_time, 'SSSSS')) / 86400;
    END IF;

  ELSIF p_period_mode = 2 THEN
    -- –©–æ—Ç–∏–∂–Ω–µ–≤–∏–π —Ä–µ–∂–∏–º
    IF p_weekly_times IS NOT NULL THEN
      v_base_date := NVL(p_period_start, v_now);

      FOR r IN (
        SELECT WEEKDAY
        FROM TASK_TEMPLATE_WEEKDAYS
        WHERE TEMPLATE_ID = p_template_id
      ) LOOP
        v_day := r.WEEKDAY;
        v_days_ahead := MOD((v_day + 7 - TO_CHAR(v_base_date, 'D')), 7);

        -- –Ø–∫—â–æ –¥–µ–Ω—å –≤–∂–µ —Å—å–æ–≥–æ–¥–Ω—ñ, –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∞—Å
        IF v_days_ahead = 0 THEN
          v_temp_time := TRUNC(v_base_date) + TO_NUMBER(TO_CHAR(p_weekly_times, 'SSSSS')) / 86400;
          IF v_temp_time <= v_base_date THEN
            v_days_ahead := 7;
          END IF;
        END IF;

        v_temp_time := TRUNC(v_base_date) + v_days_ahead + TO_NUMBER(TO_CHAR(p_weekly_times, 'SSSSS')) / 86400;

        IF v_best_time IS NULL OR v_temp_time < v_best_time THEN
          v_best_time := v_temp_time;
        END IF;
      END LOOP;

      v_next_run := v_best_time;
    END IF;

  END IF;

  RETURN v_next_run;
END GET_NEXT_RUN_DATE;
```

---

### üìå –ü—Ä–∏–º—ñ—Ç–∫–∏:

* `TEMPLATE_ID` —Ç–µ–ø–µ—Ä –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ –ø–µ—Ä–µ–¥–∞—î—Ç—å—Å—è —á–µ—Ä–µ–∑ `p_template_id`.
* –î–∞–Ω—ñ –ø—Ä–æ –¥–Ω—ñ —Ç–∏–∂–Ω—è (`1‚Äì7`) –±–µ—Ä—É—Ç—å—Å—è –∑ —Ç–∞–±–ª–∏—Ü—ñ `TASK_TEMPLATE_WEEKDAYS`.
* –Ø–∫—â–æ `p_period_start` –∑–∞–¥–∞–Ω–æ ‚Äî –≤—ñ–Ω —î –≤—ñ–¥–ø—Ä–∞–≤–Ω–æ—é —Ç–æ—á–∫–æ—é –≤ –æ–±–æ—Ö —Ä–µ–∂–∏–º–∞—Ö. –Ø–∫—â–æ –Ω—ñ ‚Äî –±–µ—Ä–µ—Ç—å—Å—è `SYSDATE`.
* `TO_CHAR(date, 'SSSSS') / 86400` ‚Äî –∫–æ–Ω–≤–µ—Ä—Ç—É—î —á–∞—Å —É –¥—Ä–æ–±–æ–≤—É —á–∞—Å—Ç–∏–Ω—É –¥–Ω—è.

---

### ‚úÖ –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–ª–∏–∫—É:

```sql
GET_NEXT_RUN_DATE(
  p_template_id     => :P6_ID,
  p_period_mode     => :P6_PERIOD_MODE,
  p_period_interval => :P6_PERIOD_INTERVAL,
  p_period_time     => :P6_PERIOD_TIME,
  p_period_start    => :P6_PERIOD_START,
  p_weekly_times    => :P6_WEEKLY_TIMES
)
```

–Ø–∫—â–æ —Ç—Ä–µ–±–∞, –º–æ–∂—É —Ç–∞–∫–æ–∂ –∞–¥–∞–ø—Ç—É–≤–∞—Ç–∏ —Ü–µ–π –∫–æ–¥ –¥–æ `VIEW`, —â–æ–± –≤—ñ–¥–æ–±—Ä–∞–∂–∞—Ç–∏ `NEXT_RUN_DATE` —É –∑–≤—ñ—Ç—ñ —à–∞–±–ª–æ–Ω—ñ–≤.
