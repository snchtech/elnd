–©–æ–± –≤–∏–≤–µ—Å—Ç–∏ **–∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–ø–∏—Å—ñ–≤ —É –≤–∏–≥–ª—è–¥—ñ –∫–æ–ª—å–æ—Ä–æ–≤–∏—Ö –∫—Ä—É–≥—ñ–≤ –±—ñ–ª—è –∫–Ω–æ–ø–æ–∫ –≤–∫–ª–∞–¥–æ–∫** (PLANNED, SHIFT, PROBLEM), –ø—Ä–æ–ø–æ–Ω—É—é –Ω–∞—Å—Ç—É–ø–Ω–µ —Ä—ñ—à–µ–Ω–Ω—è:

---

## üîß 1. **–°—Ç–≤–æ—Ä–∏—Ç–∏ –¥–∏–Ω–∞–º—ñ—á–Ω–∏–π `PL/SQL Dynamic Content` —Ä–µ–≥—ñ–æ–Ω** –∑ HTML

–£ –Ω—å–æ–º—É –±—É–¥–µ–º–æ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ –æ–∫—Ä–µ–º—ñ `SELECT COUNT(...)` –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ä–µ–∂–∏–º—É, –∫—Ä—ñ–º `ARCHIVE`.

```plsql
DECLARE
  v_planned_cnt   NUMBER;
  v_shift_cnt     NUMBER;
  v_problem_cnt   NUMBER;
BEGIN
  -- –ó–∞–ø–ª–∞–Ω–æ–≤–∞–Ω—ñ
  SELECT COUNT(*) INTO v_planned_cnt
  FROM TASKS t
  WHERE t.STATUS_ID <> 14; -- –∞–±–æ —ñ–Ω—à—ñ —Ñ—ñ–ª—å—Ç—Ä–∏ –¥–ª—è planned

  -- –ù–∞ –∑–º—ñ–Ω—É
  SELECT COUNT(*) INTO v_shift_cnt
  FROM TASKS t
  WHERE
    (t.PLANNING_DATE_START < :PXX_SHIFT_END AND 
     (t.ACTUAL_DATE_END IS NULL OR t.ACTUAL_DATE_END > :PXX_SHIFT_START))
    OR (t.PLANNING_DATE_END BETWEEN :PXX_SHIFT_START AND :PXX_SHIFT_END);

  -- –ü—Ä–æ–±–ª–µ–º–Ω—ñ
  SELECT COUNT(*) INTO v_problem_cnt
  FROM TASKS t
  WHERE
    (t.PLANNING_DATE_END < SYSDATE AND t.ACTUAL_DATE_END IS NULL)
    OR EXISTS (
      SELECT 1
      FROM DICT_APP_CONFIRM_LIST d
      WHERE d.PAGE_LIST_ID = t.PAGE_LIST_ID
        AND NOT EXISTS (
          SELECT 1
          FROM SIGNATURERIGHTS r
          WHERE r.TASK_ID = t.ID AND r.STAGES_ID = d.STAGE
        )
    );

  -- –í–∏–≤—ñ–¥ HTML
  HTP.P('
  <div class="t-TabsRegion">
    <button type="button" class="t-Button" onclick="setTab(''PLANNED'')">
      –ó–∞–ø–ª–∞–Ω–æ–≤–∞–Ω—ñ <span class="circle-badge planned">' || v_planned_cnt || '</span>
    </button>
    <button type="button" class="t-Button" onclick="setTab(''SHIFT'')">
      –ù–∞ –∑–º—ñ–Ω—É <span class="circle-badge shift">' || v_shift_cnt || '</span>
    </button>
    <button type="button" class="t-Button" onclick="setTab(''PROBLEM'')">
      –ü—Ä–æ–±–ª–µ–º–Ω—ñ <span class="circle-badge problem">' || v_problem_cnt || '</span>
    </button>
    <button type="button" class="t-Button" onclick="setTab(''ARCHIVE'')">–ê—Ä—Ö—ñ–≤</button>
  </div>');
END;
```

---

## üé® 2. **CSS –¥–ª—è —Å—Ç–∏–ª—ñ–∑–∞—Ü—ñ—ó –∑–Ω–∞—á–∫—ñ–≤-–∫—ñ–ª**

–î–æ–¥–∞–π –¥–æ CSS —Å—Ç–æ—Ä—ñ–Ω–∫–∏ (—Ä–æ–∑–¥—ñ–ª *Inline CSS* –∞–±–æ Universal Theme CSS):

```css
.circle-badge {
  display: inline-block;
  min-width: 20px;
  padding: 2px 6px;
  margin-left: 6px;
  font-size: 12px;
  font-weight: bold;
  color: #fff;
  background-color: #888;
  border-radius: 999px;
  text-align: center;
}

.circle-badge.planned { background-color: #2185d0; }  /* —Å–∏–Ω—ñ–π */
.circle-badge.shift { background-color: #21ba45; }    /* –∑–µ–ª–µ–Ω–∏–π */
.circle-badge.problem { background-color: #db2828; }  /* —á–µ—Ä–≤–æ–Ω–∏–π */
```

---

## üìå 3. **–û–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ: –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–Ω–∞—á–µ–Ω—å –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è**

–ú–æ–∂–Ω–∞ –æ–∫—Ä–µ–º–æ –∑—Ä–æ–±–∏—Ç–∏ `AJAX Callback` –∞–±–æ `DA` (Dynamic Action), —è–∫–∏–π –±—É–¥–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ –ø—ñ–¥–≤–∞–Ω—Ç–∞–∂—É–≤–∞—Ç–∏ –ª–∏—à–µ —Ü–µ–π –±–ª–æ–∫ —ñ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏ –ª—ñ—á–∏–ª—å–Ω–∏–∫–∏ –ø—Ä–∏ –∑–º—ñ–Ω—ñ –¥–∞–Ω–∏—Ö.

---

## ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç

–ö–Ω–æ–ø–∫–∏ –≤–∏–≥–ª—è–¥–∞—Ç–∏–º—É—Ç—å –æ—Å—å —Ç–∞–∫:

```
[ –ó–∞–ø–ª–∞–Ω–æ–≤–∞–Ω—ñ üîµ 15 ]   [ –ù–∞ –∑–º—ñ–Ω—É üü¢ 8 ]   [ –ü—Ä–æ–±–ª–µ–º–Ω—ñ üî¥ 3 ]   [ –ê—Ä—Ö—ñ–≤ ]
```

–ì–æ—Ç–æ–≤–∏–π –¥–æ–ø–æ–º–æ–≥—Ç–∏ –≤—Å—Ç–∞–≤–∏—Ç–∏ —Ü–µ –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–µ –º—ñ—Å—Ü–µ –∞–±–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –¥–∏–Ω–∞–º—ñ—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è ‚Äî –ø—Ä–æ—Å—Ç–æ —Å–∫–∞–∂–∏.
