üîë **–ß—É–¥–æ–≤–æ! –î–∞–≤–∞–π –∑—Ä–æ–±–∏–º–æ –ø–æ–≤–Ω–æ—Ü—ñ–Ω–Ω–µ –π –±–µ–∑–ø–µ—á–Ω–µ —Ä—ñ—à–µ–Ω–Ω—è –∑ –æ–∫—Ä–µ–º–æ—é —Ç–∞–±–ª–∏—Ü–µ—é –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —à–∏—Ñ—Ä—É –∑–∞–≤–¥–∞–Ω–Ω—è –ø–æ —Ä–æ–∫–∞—Ö.**

---

## ‚úÖ **1Ô∏è‚É£ –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∞–±–ª–∏—Ü—é –¥–ª—è –æ–±–ª—ñ–∫—É –Ω–æ–º–µ—Ä—ñ–≤ –∑–∞–≤–¥–∞–Ω—å –ø–æ —Ä–æ–∫–∞—Ö**

```sql
CREATE TABLE TASK_CODE_SEQ (
  YEAR NUMBER PRIMARY KEY,
  LAST_SEQ NUMBER DEFAULT 0
);
```

üëâ –¶—è —Ç–∞–±–ª–∏—Ü—è –∑–±–µ—Ä—ñ–≥–∞—Ç–∏–º–µ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ä–æ–∫—É –æ—Å—Ç–∞–Ω–Ω—ñ–π –Ω–æ–º–µ—Ä –∑–∞–≤–¥–∞–Ω–Ω—è.

---

## ‚úÖ **2Ô∏è‚É£ –î–æ–¥–∞—î–º–æ –∫–æ–ª–æ–Ω–∫—É –≤ TASKS**

```sql
ALTER TABLE TASKS ADD (TASK_CODE VARCHAR2(50));
```

---

## ‚úÖ **3Ô∏è‚É£ –°—Ç–≤–æ—Ä—é—î–º–æ —Ç—Ä–∏–≥–µ—Ä**

```sql
CREATE OR REPLACE TRIGGER TRG_TASKS_GENERATE_CODE
BEFORE INSERT ON TASKS
FOR EACH ROW
DECLARE
  v_year NUMBER;
  v_seq NUMBER;
BEGIN
  -- –í–∏–∑–Ω–∞—á–∞—î–º–æ —Ä—ñ–∫ (SYSDATE –∞–±–æ PLANNING_DATE_START)
  v_year := EXTRACT(YEAR FROM NVL(:NEW.PLANNING_DATE_START, SYSDATE));

  -- –ë–ª–æ–∫—É—î–º–æ —Ä—è–¥–æ–∫ (–∞–±–æ –≤—Å—Ç–∞–≤–ª—è—î–º–æ –Ω–æ–≤–∏–π) –¥–ª—è —Ä–æ–∫—É –π –æ–Ω–æ–≤–ª—é—î–º–æ LAST_SEQ
  LOOP
    BEGIN
      UPDATE TASK_CODE_SEQ
      SET LAST_SEQ = LAST_SEQ + 1
      WHERE YEAR = v_year
      RETURNING LAST_SEQ INTO v_seq;
      
      IF SQL%ROWCOUNT = 0 THEN
        -- –ó–∞–ø–∏—Å—É —â–µ –Ω–µ–º–∞—î, –≤—Å—Ç–∞–≤–ª—è—î–º–æ
        INSERT INTO TASK_CODE_SEQ (YEAR, LAST_SEQ)
        VALUES (v_year, 1);
        v_seq := 1;
      END IF;

      EXIT;
    EXCEPTION
      WHEN DUP_VAL_ON_INDEX THEN
        -- –Ü–Ω—à–∏–π —Å–µ—Å—ñ—è –≤—Å—Ç–∞–≤–∏–ª–∞ –æ–¥–Ω–æ—á–∞—Å–Ω–æ ‚Äî –ø—Ä–æ–±—É—î–º–æ —â–µ —Ä–∞–∑
        NULL;
    END;
  END LOOP;

  -- –§–æ—Ä–º—É—î–º–æ TASK_CODE
  :NEW.TASK_CODE := v_year || '-‚Ññ' || v_seq || '-' || :NEW.DEPARTMENT_ID;
END;
/
```

---

## ‚ö° **–©–æ —Ä–æ–±–∏—Ç—å —Ü–µ–π —Ç—Ä–∏–≥–µ—Ä**

‚úÖ –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –Ω–æ–≤–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è:

* –±–µ—Ä–µ —Ä—ñ–∫
* –∑–Ω–∞—Ö–æ–¥–∏—Ç—å –∞–±–æ —Å—Ç–≤–æ—Ä—é—î —Ä—è–¥–æ–∫ —É `TASK_CODE_SEQ`
* —ñ–Ω–∫—Ä–µ–º–µ–Ω—Ç—É—î –Ω–æ–º–µ—Ä
* —Ñ–æ—Ä–º—É—î —à–∏—Ñ—Ä: `2025-‚Ññ3-27`

‚úÖ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è `LOOP` —â–æ–± –æ–±—ñ–π—Ç–∏ race condition (—è–∫—â–æ –¥–≤—ñ —Å–µ—Å—ñ—ó –æ–¥–Ω–æ—á–∞—Å–Ω–æ —Å—Ç–≤–æ—Ä—é—é—Ç—å –∑–∞–≤–¥–∞–Ω–Ω—è –∑ –Ω–æ–≤–∏–º —Ä–æ–∫–æ–º).

---

## ‚úÖ **4Ô∏è‚É£ –Ø–∫ –¥–æ–¥–∞—Ç–∏ –≤ IR**

–£ SQL Interactive Report:

```sql
SELECT
  TASK_CODE AS "–®–∏—Ñ—Ä –∑–∞–≤–¥–∞–Ω–Ω—è",
  -- —ñ–Ω—à—ñ –ø–æ–ª—è
FROM TASKS
```

üëâ –í—Å–µ! –¢–µ–ø–µ—Ä TASK\_CODE –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è –≤ –∑–≤—ñ—Ç—ñ.

---

## üí° **–ü–µ—Ä–µ–≤–∞–≥–∏ —Ü—å–æ–≥–æ –ø—ñ–¥—Ö–æ–¥—É**

‚úÖ –ù–µ–º–∞ race condition ‚Äî —Ç–∞–±–ª–∏—Ü—è TASK\_CODE\_SEQ —Ç—Ä–∏–º–∞—î –∞–∫—Ç—É–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω.
‚úÖ –ß–∏—Å—Ç–∏–π —ñ –≥–Ω—É—á–∫–∏–π –∫–æ–¥.
‚úÖ –õ–µ–≥–∫–æ —Å—É–ø—Ä–æ–≤–æ–¥–∂—É–≤–∞—Ç–∏.

---

## üöÄ **–•–æ—á–µ—à?**

–Ø –º–æ–∂—É:

* –ø—ñ–¥–≥–æ—Ç—É–≤–∞—Ç–∏ DDL –¥–ª—è –≤—Å—ñ—Ö —Ç–∞–±–ª–∏—Ü—å
* –ø—Ä–∏–∫–ª–∞–¥ —Ç–µ—Å—Ç–æ–≤–∏—Ö –≤—Å—Ç–∞–≤–æ–∫
* SQL –∑–∞–ø–∏—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É

üí¨ –ù–∞–ø–∏—à–∏ ‚Äî —ñ —è –ø—ñ–¥–≥–æ—Ç—É—é! üöÄ
