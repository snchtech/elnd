Ось покроковий план реалізації функціоналу ознайомлення з завданнями у APEX з урахуванням ролі `shift_personal`:

---

### **1. Таблиця `TASK_VIEWED`**

```sql
CREATE TABLE TASK_VIEWED (
    ID            NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    USER_ID       NUMBER NOT NULL,
    TASK_ID       NUMBER NOT NULL,
    DATE_VIEWED   DATE NOT NULL
);
```

---

### **2. Додавання кнопки "Ознайомлений"**

#### В області "Картка завдання"

* Створіть динамічну кнопку з `Static ID`: `btn_task_viewed`.
* Видимість за умовою:

```plsql
-- Server-side condition (PL/SQL Expression)
:P0_HAS_SHIFT_ROLE = 'N' AND NOT EXISTS (
  SELECT 1 FROM TASK_VIEWED
  WHERE TASK_ID = :P6_TASK_ID AND USER_ID = :P0_USER_ID
)
OR
(:P0_HAS_SHIFT_ROLE = 'Y' AND NOT EXISTS (
  SELECT 1 FROM TASK_VIEWED
  WHERE TASK_ID = :P6_TASK_ID AND USER_ID = :P0_USER_ID
    AND DATE_VIEWED BETWEEN :P6_SHIFT_START_DATE AND :P6_SHIFT_END_DATE
))
```

---

### **3. Процес запису**

#### Створіть процес `Process Task Viewed`

* Тип: `PL/SQL`
* Запускається при натисканні кнопки `btn_task_viewed`

```plsql
BEGIN
  INSERT INTO TASK_VIEWED (USER_ID, TASK_ID, DATE_VIEWED)
  VALUES (:P0_USER_ID, :P6_TASK_ID, SYSDATE);
END;
```

* Після завершення: `Submit Page` або `Redirect to current page`.

---

### **4. Визначення ролі на рівні сторінки**

У `Before Header`:

```plsql
:P0_HAS_SHIFT_ROLE := CASE
  WHEN APEX_ACL.HAS_ROLE(:APP_ID, 'shift_personal') = 'Y' THEN 'Y'
  ELSE 'N'
END;
```

---

### **5. Виведення тексту "Ознайомлений користувачем"**

#### У регіоні, де виводиться деталі завдання:

```plsql
SELECT
  'Ознайомлений ' || u.username || ', ' ||
  TO_CHAR(tv.DATE_VIEWED, 'DD.MM.YYYY HH24:MI') AS VIEWED_INFO
FROM TASK_VIEWED tv
JOIN USERS u ON u.ID = tv.USER_ID
WHERE tv.TASK_ID = :P6_TASK_ID
  AND (
    (:P0_HAS_SHIFT_ROLE = 'Y' AND tv.USER_ID = :P0_USER_ID AND tv.DATE_VIEWED BETWEEN :P6_SHIFT_START_DATE AND :P6_SHIFT_END_DATE)
    OR (:P0_HAS_SHIFT_ROLE = 'N' AND tv.USER_ID = :P0_USER_ID)
  )
```

---

### **6. Опціонально: View для спрощення логіки**

```sql
CREATE OR REPLACE VIEW TASK_VIEWED_CURRENT AS
SELECT 
  tv.TASK_ID, tv.USER_ID, tv.DATE_VIEWED,
  CASE
    WHEN APEX_ACL.HAS_ROLE(:APP_ID, 'shift_personal') = 'Y'
         AND tv.DATE_VIEWED BETWEEN :P6_SHIFT_START_DATE AND :P6_SHIFT_END_DATE
    THEN 'Y'
    WHEN APEX_ACL.HAS_ROLE(:APP_ID, 'shift_personal') = 'N'
    THEN 'Y'
    ELSE 'N'
  END AS IS_VALID_VIEW
FROM TASK_VIEWED tv;
```

---

Цей функціонал забезпечить:

* **Один запис** для звичайних користувачів.
* **Багаторазові записи** для `shift_personal`, обмежені змінами.
* **Гнучке відображення кнопки і повідомлення.**

Готовий допомогти з реалізацією JS/динамічних дій, якщо потрібно.
