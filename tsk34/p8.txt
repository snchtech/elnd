–û–∫–µ–π! –ü–µ—Ä–µ–ø–∏—à–µ–º–æ —Ç–≤–æ—é –ª–æ–≥—ñ–∫—É —Ç–∞–∫, —â–æ–± **–ø–æ–±—É–¥–æ–≤–∞ –¥–µ—Ä–µ–≤–∞ –ø—ñ–¥–∑–∞–≤–¥–∞–Ω—å (–∞–±–æ –ø—ñ–¥—à–∞–±–ª–æ–Ω—ñ–≤)**, –≤–∫–ª—é—á–Ω–æ –∑ `level`, `full_number`, `path_b`, `display_content` —Ç–∞ `drag_handle`, –≤–∏–∫–æ–Ω—É–≤–∞–ª–∞—Å—å **—É PL/SQL –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –∫–æ–ª–µ–∫—Ü—ñ—ó**, –∞ –Ω–µ –≤ SQL —á–µ—Ä–µ–∑ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–∏–π `WITH`.

---

## üîß **–ó–∞–≥–∞–ª—å–Ω–∞ —ñ–¥–µ—è**

* –°–ø–æ—á–∞—Ç–∫—É —á–∏—Ç–∞—î–º–æ –≤—Å—ñ –ø—ñ–¥–∑–∞–≤–¥–∞–Ω–Ω—è –≤ PL/SQL-—Ç–∞–±–ª–∏—Ü—é.
* –î–∞–ª—ñ –±—É–¥—É—î–º–æ —ñ—î—Ä–∞—Ä—Ö—ñ—é –≤ –ø–∞–º‚Äô—è—Ç—ñ.
* –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –ø—ñ–¥–∑–∞–≤–¥–∞–Ω–Ω—è –æ–±—á–∏—Å–ª—é—î–º–æ:

  * `LEVEL`
  * `FULL_NUMBER` (1, 1.1, 1.1.1 —Ç–æ—â–æ)
  * `PATH_B` (–¥–ª—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è)
  * `DISPLAY_CONTENT`
  * `DRAG_HANDLE`
* –ü–æ—Ç—ñ–º –¥–æ–¥–∞—î–º–æ –≤ `APEX_COLLECTION`.

---

## ‚úÖ **–ö–æ–¥ PL/SQL (–ø—Ä–∏–∫–ª–∞–¥ –¥–ª—è TASK\_SUBTASKS\_COLLECTION)**

```plsql
DECLARE
  TYPE t_subtask IS RECORD (
    id             NUMBER,
    task_id        NUMBER,
    parent_id      NUMBER,
    content        VARCHAR2(4000),
    order_num      NUMBER,
    date_end       DATE
  );

  TYPE t_subtask_table IS TABLE OF t_subtask INDEX BY BINARY_INTEGER;
  v_subtasks t_subtask_table;

  TYPE t_index_map IS TABLE OF PLS_INTEGER INDEX BY NUMBER; -- key: ID ‚Üí index in v_subtasks
  v_index_by_id t_index_map;

  v_level          NUMBER;
  v_full_number    VARCHAR2(1000);
  v_path_b         VARCHAR2(1000);
  v_display_text   VARCHAR2(4000);
  v_drag_handle    VARCHAR2(100);
  v_counter        NUMBER := 0;

  -- Recursively process subtasks
  PROCEDURE process_subtasks(p_parent_id IN NUMBER, p_level IN NUMBER, p_path IN VARCHAR2, p_prefix IN VARCHAR2) IS
  BEGIN
    FOR i IN 1 .. v_subtasks.COUNT LOOP
      IF v_subtasks(i).parent_id = p_parent_id THEN
        v_counter := v_counter + 1;
        v_level := p_level;
        v_full_number := p_prefix || TO_CHAR(v_counter);
        v_path_b := p_path || LPAD(v_counter, 5, '0');

        -- –í–∏–∑–Ω–∞—á–∞—î–º–æ drag handle
        v_drag_handle := CASE WHEN v_subtasks(i).parent_id IS NULL THEN '<span class="drag-handle">‚ò∞</span>' ELSE NULL END;

        v_display_text := LPAD(' ', (v_level - 1) * 4, ' ') || v_full_number || '. ' || v_subtasks(i).content;

        -- –î–æ–¥–∞—î–º–æ –¥–æ –∫–æ–ª–µ–∫—Ü—ñ—ó
        APEX_COLLECTION.ADD_MEMBER(
          p_collection_name => 'TASK_SUBTASKS_COLLECTION',
          p_c001 => v_subtasks(i).task_id,
          p_c002 => v_subtasks(i).content,
          p_d001 => v_subtasks(i).date_end,
          p_c003 => v_subtasks(i).parent_id,
          p_c004 => v_subtasks(i).order_num,
          p_c005 => NULL,
          p_c006 => :P0_CUR_USER_TABNO,
          p_c007 => NULL,
          p_c009 => v_subtasks(i).id,
          p_n001 => 0, -- TASK_MODE
          p_c008 => v_path_b,
          p_c010 => v_full_number,
          p_c011 => v_display_text,
          p_c012 => v_drag_handle
        );

        -- –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ä–æ–±–ª—è—î–º–æ –¥–æ—á—ñ—Ä–Ω—ñ
        process_subtasks(v_subtasks(i).id, p_level + 1, v_path_b || '.', v_full_number || '.');
      END IF;
    END LOOP;
  END;
BEGIN
  -- –û—á–∏—Å—Ç–∫–∞
  IF APEX_COLLECTION.COLLECTION_EXISTS('TASK_SUBTASKS_COLLECTION') THEN
    APEX_COLLECTION.DELETE_COLLECTION('TASK_SUBTASKS_COLLECTION');
  END IF;

  APEX_COLLECTION.CREATE_COLLECTION('TASK_SUBTASKS_COLLECTION');

  -- –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ —Ç–∞–±–ª–∏—Ü—ñ
  SELECT 
    ID,
    TASK_ID,
    PARENT_ID,
    SUBTASK_CONTENT,
    SUBTASK_ORDER,
    PLANNING_DATE_END
  BULK COLLECT INTO v_subtasks
  FROM TASK_SUBTASKS@TO_TASKTRACKER10
  WHERE TASK_ID = :P6_TASK_ID;

  -- –ü–æ–±—É–¥–æ–≤–∞ —ñ–Ω–¥–µ–∫—Å—É ID ‚Üí –ø–æ—Ä—è–¥–∫–æ–≤–∏–π —ñ–Ω–¥–µ–∫—Å
  FOR i IN 1 .. v_subtasks.COUNT LOOP
    v_index_by_id(v_subtasks(i).id) := i;
  END LOOP;

  -- –°—Ç–∞—Ä—Ç –∑ –∫–æ—Ä–µ–Ω–µ–≤–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
  v_counter := 0;
  process_subtasks(NULL, 1, '', '');
END;
```

---

## üí° –ü–æ—è—Å–Ω–µ–Ω–Ω—è –∫–ª—é—á–æ–≤–∏—Ö –ø–æ–ª—ñ–≤

| –ü–æ–ª–µ (–∫–æ–ª–µ–∫—Ü—ñ—è) | –ó–Ω–∞—á–µ–Ω–Ω—è                        |
| --------------- | ------------------------------- |
| `C001`          | TASK\_ID                        |
| `C002`          | SUBTASK\_CONTENT                |
| `D001`          | PLANNING\_DATE\_END             |
| `C003`          | PARENT\_ID                      |
| `C004`          | SUBTASK\_ORDER                  |
| `C009`          | ID –ø—ñ–¥–∑–∞–≤–¥–∞–Ω–Ω—è                  |
| `C008`          | PATH\_B (LPAD –¥–ª—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è)   |
| `C010`          | FULL\_NUMBER (1, 1.1, 1.2.1...) |
| `C011`          | DISPLAY\_CONTENT                |
| `C012`          | DRAG\_HANDLE                    |

---

## ‚úÖ –ü–µ—Ä–µ–≤–∞–≥–∏ —Ç–∞–∫–æ–≥–æ –ø—ñ–¥—Ö–æ–¥—É

* ‚ùå **–ñ–æ–¥–Ω–æ—ó —Ä–µ–∫—É—Ä—Å—ñ—ó –≤ SQL** ‚Äî —É—Å–µ –≤ –ø–∞–º‚Äô—è—Ç—ñ.
* ‚ö° **–°—Ç–æ—Ä—ñ–Ω–∫–∞ –≤–∞–Ω—Ç–∞–∂–∏—Ç—å—Å—è —à–≤–∏–¥—à–µ**.
* üíØ **–ü–æ–≤–Ω–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å** –Ω–∞–¥ —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è–º –¥–µ—Ä–µ–≤–∞, –Ω—É–º–µ—Ä–∞—Ü—ñ—î—é, drag-handles —Ç–æ—â–æ.
* üì¶ –î–∞–Ω—ñ –ª–µ–≥–∫–æ –∞–¥–∞–ø—Ç—É–≤–∞—Ç–∏ –¥–ª—è APEX IG –∑ –ø—ñ–¥—Å–≤—ñ—á—É–≤–∞–Ω–Ω—è–º –∞–±–æ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è–º.

---

## üîú –•–æ—á–µ—à ‚Äî –º–æ–∂—É –∞–¥–∞–ø—Ç—É–≤–∞—Ç–∏ —Ç–∞–∫–∏–π –∂–µ –∫–æ–¥ –¥–ª—è –ø—ñ–¥—à–∞–±–ª–æ–Ω—ñ–≤.

–°–∫–∞–∂–∏ ‚Äî —ñ —è –∑—Ä–æ–±–ª—é –≤–µ—Ä—Å—ñ—é –¥–ª—è `TASK_TEMPLATE_SUBTASKS_COLLECTION`.
