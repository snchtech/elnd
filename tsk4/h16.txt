–†–æ–∑–±–µ—Ä–µ–º–æ –¥–µ—Ç–∞–ª—å–Ω–æ –¥–≤–∞ –∫–ª—é—á–æ–≤—ñ –º–æ–º–µ–Ω—Ç–∏:

---

## ‚úÖ 1. **Dynamic Action** –¥–ª—è –ø–µ—Ä–µ–º–∏–∫–∞—á–∞ —Ä–µ–∂–∏–º—ñ–≤ (STANDARD / PERIODIC)

### üß© –ü—Ä–∏–ø—É—Å—Ç–∏–º–æ, –ø–µ—Ä–µ–º–∏–∫–∞—á –º–∞—î item: `PXX_TASK_MODE`  
(–∑–Ω–∞—á–µ–Ω–Ω—è `'STANDARD'` –∞–±–æ `'PERIODIC'`)

---

### üîπ –°—Ç–≤–æ—Ä—é—î–º–æ DA:  
**Name:** `DA_Change_Task_Mode`  
**When:** `Change`  
**Item:** `PXX_TASK_MODE`

---

### üõ† True Action (–∫–æ–ª–∏ –≤–∏–±—Ä–∞–Ω–æ `'PERIODIC'`):

| –î—ñ—è             | –ï–ª–µ–º–µ–Ω—Ç–∏                                                       |
|------------------|----------------------------------------------------------------|
| **Hide**         | `PXX_DATE_START`, `PXX_PLANNING_DATE_END`                     |
| **Show**         | `PXX_PERIOD_MODE`, `PXX_PERIOD_INTERVAL`, `PXX_PERIOD_TIME`, `PXX_HOURLY_TIMES`, `PXX_HOURLY_OFFSET_MIN` |
| **Set Required (False)** | `PXX_DATE_START`, `PXX_PLANNING_DATE_END`             |
| **Set Required (True)**  | –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ –≤–∏–±—Ä–∞–Ω–æ–≥–æ `PXX_PERIOD_MODE` (–¥–∏–≤. –Ω–∏–∂—á–µ) |

---

### üõ† Dynamic Action –Ω–∞ `PXX_PERIOD_MODE`

(–∑–Ω–∞—á–µ–Ω–Ω—è: `'DAYS'` –∞–±–æ `'HOURS'`)

#### –Ø–∫—â–æ `'DAYS'`:
- Show: `PXX_PERIOD_INTERVAL`, `PXX_PERIOD_TIME`
- Hide: `PXX_HOURLY_TIMES`, `PXX_HOURLY_OFFSET_MIN`
- Set Required: `PXX_PERIOD_INTERVAL`, `PXX_PERIOD_TIME`
- Set Required False: `PXX_HOURLY_TIMES`, `PXX_HOURLY_OFFSET_MIN`

#### –Ø–∫—â–æ `'HOURS'`:
- –ó–≤–æ—Ä–æ—Ç–Ω–∞ –ª–æ–≥—ñ–∫–∞

---

### üõ† False Action (—Ç–æ–±—Ç–æ `'STANDARD'`):

| –î—ñ—è             | –ï–ª–µ–º–µ–Ω—Ç–∏                                                |
|------------------|---------------------------------------------------------|
| **Show**         | `PXX_DATE_START`, `PXX_PLANNING_DATE_END`              |
| **Hide**         | –í—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ—Å—Ç—ñ                             |
| **Set Required** | `PXX_DATE_START`, `PXX_PLANNING_DATE_END` ‚Üí True       |
| **Set Required** | –ü–æ–ª—è –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ—Å—Ç—ñ ‚Üí False                             |

---

## ‚úÖ 2. **PL/SQL –≥—ñ–ª–∫–∏ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è**

–°—Ç–≤–æ—Ä—é—î–º–æ **–¥–≤–∞ –æ–∫—Ä–µ–º—ñ –ø—Ä–æ—Ü–µ—Å–∏** —Ç–∏–ø—É `PL/SQL Code` –∑—ñ `Server-side Condition`.

---

### üîπ –ü—Ä–æ—Ü–µ—Å 1: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–≤–∏—á–∞–π–Ω–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è

| –ü–∞—Ä–∞–º–µ—Ç—Ä               | –ó–Ω–∞—á–µ–Ω–Ω—è                           |
|------------------------|------------------------------------|
| **Process Name**       | `PRC_INSERT_STANDARD_TASK`         |
| **Condition**          | `PXX_TASK_MODE = 'STANDARD'`       |

```plsql
DECLARE
  v_task_id TASKS.ID%TYPE;
BEGIN
  INSERT INTO TASKS (
    DATE_CREATE,
    TASK_CONTENT,
    CREATOR_ID,
    PLANNING_DATE_START,
    PLANNING_DATE_END,
    STATUS_ID,
    DEPARTMENT_ID,
    UNIT_ID,
    TYPE_ID
  ) VALUES (
    SYSDATE,
    :PXX_TASK_CONTENT,
    :APP_USER_ID,
    :PXX_DATE_START,
    :PXX_PLANNING_DATE_END,
    1,
    :PXX_DEPARTMENT_ID,
    :PXX_UNIT_ID,
    :PXX_TYPE_ID
  )
  RETURNING ID INTO v_task_id;

  -- –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—ñ–¥–∑–∞–≤–¥–∞–Ω—å
  UPDATE TASK_SUBTASKS
  SET TASK_ID = v_task_id, DRAFT_ID = NULL
  WHERE DRAFT_ID = :PXX_DRAFT_ID;

  :PXX_CREATED_TASK_ID := v_task_id;
END;
```

---

### üîπ –ü—Ä–æ—Ü–µ—Å 2: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω—É

| –ü–∞—Ä–∞–º–µ—Ç—Ä               | –ó–Ω–∞—á–µ–Ω–Ω—è                            |
|------------------------|-------------------------------------|
| **Process Name**       | `PRC_INSERT_PERIODIC_TEMPLATE`      |
| **Condition**          | `PXX_TASK_MODE = 'PERIODIC'`        |

```plsql
DECLARE
  v_template_id TASK_TEMPLATES.ID%TYPE;
BEGIN
  INSERT INTO TASK_TEMPLATES (
    DATE_CREATE,
    TASK_CONTENT,
    CREATOR_ID,
    STATUS_ID,
    DEPARTMENT_ID,
    UNIT_ID,
    TYPE_ID,
    PAGE_LIST_ID,
    PERIOD_MODE,
    PERIOD_INTERVAL,
    PERIOD_TIME,
    HOURLY_TIMES,
    HOURLY_OFFSET_MIN,
    NEXT_RUN_DATE
  ) VALUES (
    SYSDATE,
    :PXX_TASK_CONTENT,
    :APP_USER_ID,
    1,
    :PXX_DEPARTMENT_ID,
    :PXX_UNIT_ID,
    :PXX_TYPE_ID,
    :PXX_PAGE_LIST_ID,
    :PXX_PERIOD_MODE,
    :PXX_PERIOD_INTERVAL,
    :PXX_PERIOD_TIME,
    :PXX_HOURLY_TIMES,
    :PXX_HOURLY_OFFSET_MIN,
    :PXX_NEXT_RUN_DATE
  )
  RETURNING ID INTO v_template_id;

  -- –æ–Ω–æ–≤–ª—é—î–º–æ —à–∞–±–ª–æ–Ω–Ω—ñ –ø—ñ–¥–∑–∞–≤–¥–∞–Ω–Ω—è
  UPDATE TASK_TEMPLATE_SUBTASKS
  SET TEMPLATE_ID = v_template_id,
      DRAFT_ID = NULL
  WHERE DRAFT_ID = :PXX_DRAFT_ID;

  :PXX_CREATED_TEMPLATE_ID := v_template_id;
END;
```

---

üîß –û–±–∏–¥–≤–∞ –ø—Ä–æ—Ü–µ—Å–∏ –º–æ–∂–Ω–∞ –æ–±–≥–æ—Ä–Ω—É—Ç–∏ —É `Validation Group`, —â–æ–± –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –æ–∫—Ä–µ–º—ñ required –ø–æ–ª—è –ª–∏—à–µ –¥–ª—è —Å–≤–æ–≥–æ —Ä–µ–∂–∏–º—É.

---

–•–æ—á–µ—à ‚Äî –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ dynamic validation –Ω–∞ –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤—ñ—Å—Ç—å –ø–æ–ª—ñ–≤ –∞–±–æ –∑—Ä–æ–±–∏—Ç–∏ –ª–æ–≥—ñ–∫—É –∞–≤—Ç–æ–∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è `next_run_date`.

–ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –∫–∞—Ä—Ç–∫–∏ —à–∞–±–ª–æ–Ω—É/–∑–∞–≤–¥–∞–Ω–Ω—è –ø—ñ—Å–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è?