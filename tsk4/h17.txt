–ß—É–¥–æ–≤–æ! –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –æ–±—á–∏—Å–ª–µ–Ω–Ω—è `NEXT_RUN_DATE` –º–æ–∂–Ω–∞ —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –¥–∏–Ω–∞–º—ñ—á–Ω–æ –≤ APEX **–Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤–∏–±—Ä–∞–Ω–æ–≥–æ —Ä–µ–∂–∏–º—É –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ—Å—Ç—ñ** (`–ø–æ –¥–Ω—è—Ö` —á–∏ `–ø–æ –≥–æ–¥–∏–Ω–∞—Ö`).

---

## üß† –õ–æ–≥—ñ–∫–∞

| –ü–∞—Ä–∞–º–µ—Ç—Ä               | –û–ø–∏—Å                                                    |
|------------------------|----------------------------------------------------------|
| `PERIOD_MODE`          | `'DAYS'` –∞–±–æ `'HOURS'`                                   |
| `PERIOD_INTERVAL`      | –ö–æ–∂–Ω—ñ N –¥–Ω—ñ–≤                                             |
| `PERIOD_TIME`          | –ß–∞—Å (—Ç–∏–ø—É `DATE`, –∞–ª–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –ª–∏—à–µ `HH24:MI`)   |
| `HOURLY_TIMES`         | –ù–∞–ø—Ä–∏–∫–ª–∞–¥: `'07:00,15:00,23:00'`                         |
| `HOURLY_OFFSET_MIN`    | –°–∫—ñ–ª—å–∫–∏ —Ö–≤–∏–ª–∏–Ω –¥–æ —á–∞—Å—É –∑–∞–ø—É—Å–∫—É                           |

---

## ‚úÖ –Ø–∫ —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –∞–≤—Ç–æ–∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è `NEXT_RUN_DATE` –≤ APEX

---

### üîπ 1. –°—Ç–≤–æ—Ä–∏ `Dynamic Action`:

- **Name:** `DA_Calculate_Next_Run_Date`
- **Event:** Change
- **Triggered by:**  
  - `PXX_PERIOD_MODE`,  
  - `PXX_PERIOD_INTERVAL`,  
  - `PXX_PERIOD_TIME`,  
  - `PXX_HOURLY_TIMES`,  
  - `PXX_HOURLY_OFFSET_MIN`

---

### üîπ 2. –î–æ–¥–∞–π **True Action ‚Üí Execute PL/SQL Code**

#### üì¶ PL/SQL Code:

```plsql
DECLARE
  v_next_date DATE;
  v_time_only DATE;
  v_first_time VARCHAR2(5);
BEGIN
  IF :PXX_PERIOD_MODE = 'DAYS' THEN
    -- –±–µ—Ä–µ–º–æ —Å—å–æ–≥–æ–¥–Ω—ñ + —ñ–Ω—Ç–µ—Ä–≤–∞–ª, –¥–æ–¥–∞—î–º–æ —á–∞—Å
    v_time_only := TO_DATE(TO_CHAR(:PXX_PERIOD_TIME, 'HH24:MI'), 'HH24:MI');
    v_next_date := TRUNC(SYSDATE) + :PXX_PERIOD_INTERVAL + 
                   (v_time_only - TRUNC(v_time_only));

  ELSIF :PXX_PERIOD_MODE = 'HOURS' THEN
    -- —Ä–æ–∑–±–∏—Ä–∞—î–º–æ –ø–µ—Ä—à–∏–π —á–∞—Å —ñ–∑ —Å–ø–∏—Å–∫—É (–ø—Ä–∏–ø—É—Å–∫–∞—î–º–æ —Ñ–æ—Ä–º–∞—Ç '07:00,15:00,...')
    v_first_time := REGEXP_SUBSTR(:PXX_HOURLY_TIMES, '[^,]+', 1, 1);
    IF v_first_time IS NOT NULL THEN
      v_time_only := TO_DATE(v_first_time, 'HH24:MI');
      v_next_date := TRUNC(SYSDATE) + (v_time_only - TRUNC(v_time_only)) 
                     - NUMTODSINTERVAL(:PXX_HOURLY_OFFSET_MIN, 'MINUTE');
    ELSE
      v_next_date := NULL;
    END IF;

  ELSE
    v_next_date := NULL;
  END IF;

  :PXX_NEXT_RUN_DATE := v_next_date;
END;
```

---

### üîπ 3. –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è

| –ü–æ–ª–µ               | –ó–Ω–∞—á–µ–Ω–Ω—è                                |
|--------------------|------------------------------------------|
| **Items to Submit**| `PXX_PERIOD_MODE`, `PXX_PERIOD_INTERVAL`, `PXX_PERIOD_TIME`, `PXX_HOURLY_TIMES`, `PXX_HOURLY_OFFSET_MIN` |
| **Items to Return**| `PXX_NEXT_RUN_DATE`                      |

---

## ‚úÖ –ü—Ä–∏–∫–ª–∞–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É

- –Ø–∫—â–æ:
  - `PERIOD_MODE = 'DAYS'`
  - `PERIOD_INTERVAL = 3`
  - `PERIOD_TIME = 12:00`

‚û°Ô∏è `NEXT_RUN_DATE = —Å—å–æ–≥–æ–¥–Ω—ñ + 3 –¥–Ω—ñ + 12:00`

- –Ø–∫—â–æ:
  - `PERIOD_MODE = 'HOURS'`
  - `HOURLY_TIMES = 07:00,15:00,23:00`
  - `HOURLY_OFFSET_MIN = 15`

‚û°Ô∏è `NEXT_RUN_DATE = —Å—å–æ–≥–æ–¥–Ω—ñ –æ 06:45`

---

üîß –•–æ—á–µ—à ‚Äî –º–æ–∂—É —â–µ –∑—Ä–æ–±–∏—Ç–∏ JavaScript preview –Ω–∞ —Ñ–æ—Ä–º—ñ —Ç–∏–ø—É:
```
–ù–∞—Å—Ç—É–ø–Ω–∏–π –∑–∞–ø—É—Å–∫: 03.04.2025 12:00
```

–ì–æ—Ç–æ–≤–æ? –•–æ—á–µ—à –¥–æ–¥–∞—Ç–∏ –≤–∞–ª—ñ–¥–∞—Ü—ñ—é, —â–æ `NEXT_RUN_DATE` –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ –º–∞—î –±—É—Ç–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–µ—Ä–µ–¥ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è–º —à–∞–±–ª–æ–Ω—É?