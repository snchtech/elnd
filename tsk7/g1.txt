grid IG
RETURN q'[
SELECT 
  ID,
  TASK_ID,
  SUBTASK_ORDER,
  SUBTASK_CONTENT,
  PLANNING_DATE_END,
  PARENT_ID,
  REGEXP_COUNT(SUBTASK_ORDER, '\.') AS SUBTASK_LEVEL,
  RPAD(' ', REGEXP_COUNT(SUBTASK_ORDER, '\.') * 4, ' ') || SUBTASK_CONTENT AS DISPLAY_CONTENT
FROM (
  SELECT 
    ID,
    TASK_ID,
    SUBTASK_ORDER,
    SUBTASK_CONTENT,
    PLANNING_DATE_END,
    PARENT_ID,
    -- –§–æ—Ä–º—É—î–º–æ —Å–æ—Ä—Ç—É–≤–∞–ª—å–Ω–∏–π –∫–ª—é—á: 3 —Ä—ñ–≤–Ω—ñ –ø–æ 3 —Ü–∏—Ñ—Ä–∏
    LPAD(REGEXP_SUBSTR(SUBTASK_ORDER, '^[^.]+'), 3, '0') ||
    LPAD(REGEXP_SUBSTR(SUBTASK_ORDER, '[^.]+', 1, 2), 3, '0') ||
    LPAD(REGEXP_SUBSTR(SUBTASK_ORDER, '[^.]+', 1, 3), 3, '0') AS SORT_KEY
  FROM TASK_SUBTASKS
  WHERE TASK_ID = :P5_TASK_ID
)
ORDER BY SORT_KEY
]';

---------------------------------------

// –î–æ–¥–∞—î–º–æ –º–µ–Ω—é –≤ DOM –ª–∏—à–µ 1 —Ä–∞–∑
if (!document.getElementById("custom-ig-menu")) {
  const menu = document.createElement("ul");
  menu.id = "custom-ig-menu";
  menu.style = "position:absolute; display:none; background:white; border:1px solid #ccc; z-index:10000; list-style:none; padding:4px 0; margin:0;";
  menu.innerHTML = `
    <li id="menu-add-sub-subtask" style="padding:6px 12px; cursor:pointer;">‚ûï –î–æ–¥–∞—Ç–∏ –ø—ñ–¥–∑–∞–≤–¥–∞–Ω–Ω—è</li>
    <li id="menu-edit-subtask" style="padding:6px 12px; cursor:pointer;">‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –ø—ñ–¥–∑–∞–≤–¥–∞–Ω–Ω—è</li>
    <li id="menu-duplicate-subtask" style="padding:6px 12px; cursor:pointer;">üìÑ –î—É–±–ª—é–≤–∞—Ç–∏ –ø—ñ–¥–∑–∞–≤–¥–∞–Ω–Ω—è</li>
    <li id="menu-delete-subtask" style="padding:6px 12px; cursor:pointer;">üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ –ø—ñ–¥–∑–∞–≤–¥–∞–Ω–Ω—è</li>
  `;
  document.body.appendChild(menu);
}

--------------------------------------------

apex.jQuery(document).on("click", ".a-Button--actions", function (e) {
  e.preventDefault();
  e.stopImmediatePropagation();

  const $btn = apex.jQuery(this);
  const $row = $btn.closest("tr");
  const rowId = $row.data("id");

  const ig$ = apex.region("TASK_SUBTASKS_IG").widget();
  const gridView = ig$.interactiveGrid("getViews", "grid");
  const model = gridView.model;
  const record = model.getRecord(rowId);

  if (!record) return;
  const id = model.getValue(record, "ID");

  // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ ID –≤ DOM
  document.getElementById("menu-add-sub-subtask").dataset.id = id;
  document.getElementById("menu-edit-subtask").dataset.id = id;
  document.getElementById("menu-duplicate-subtask").dataset.id = id;
  document.getElementById("menu-delete-subtask").dataset.id = id;

  // –ü–æ–∫–∞–∑—É—î–º–æ –∫–∞—Å—Ç–æ–º–Ω–µ –º–µ–Ω—é
  const menu = document.getElementById("custom-ig-menu");
  menu.style.left = `${e.pageX}px`;
  menu.style.top = `${e.pageY}px`;
  menu.style.display = "block";
});

document.addEventListener("click", function (event) {
  const menu = document.getElementById("custom-ig-menu");
  if (!menu.contains(event.target)) {
    menu.style.display = "none";
  }
});

setTimeout( function() {
document.getElementById("menu-delete-subtask").addEventListener("click", function () {
  const id = this.dataset.id;
  if (!id) return;

  if (confirm("–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ –ø—ñ–¥–∑–∞–≤–¥–∞–Ω–Ω—è?")) {
    $s("P5_DELETE_SUBTASK_ID", id);
    apex.server.process("DELETE_SUBTASK", {
  x01: id
}, {
  dataType: "json", // üîÅ —á—ñ—Ç–∫–æ –≤–∫–∞–∑–∞—Ç–∏, —â–æ –æ—á—ñ–∫—É—î–º–æ JSON
  success: function (pData) {
    console.log("‚úÖ –°–µ—Ä–≤–µ—Ä –ø–æ–≤–µ—Ä–Ω—É–≤:", pData);
    if (pData.status === "ok") {
      apex.region("TASK_SUBTASKS_IG").refresh();
    } else {
      alert("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ: " + (pData.message || "–Ω–µ–≤—ñ–¥–æ–º–æ"));
    }
    document.getElementById("custom-ig-menu").style.display = "none";
  },
  error: function () {
    alert("üí• –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∫–æ–Ω–∞—Ç–∏ –∑–∞–ø–∏—Ç –¥–æ —Å–µ—Ä–≤–µ—Ä–∞");
  }
});
  }
});

document.getElementById("menu-edit-subtask").addEventListener("click", function () {
  const id = this.dataset.id;
  if (!id) return;

  apex.server.process("GET_SUBTASK_EDIT_URL", {
  x01: id
}, {
  dataType: "json",
  success: function(pData) {
      
    apex.navigation.redirect(pData.url);
  },
  error: function() {
    alert("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó URL");
  }
});

  document.getElementById("custom-ig-menu").style.display = "none";
});

document.getElementById("menu-add-sub-subtask").addEventListener("click", function () {
  const id = this.dataset.id;
  if (!id) return;

  apex.server.process("GET_ADD_SUBTASK_DIALOG_URL", {
    x01: id
  }, {
    dataType: "json",
    success: function (pData) {
        console.log(pData.url);
      apex.navigation.redirect(pData.url);

      document.getElementById("custom-ig-menu").style.display = "none";
    },
    error: function () {
      alert("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—ñ URL");
    }
  });
});


}, 500);

------------------------------------------------------------------
PL
UPDATE_AFTER_DIALOG_CLOSE

apex.jQuery(window).on("apexafterclosedialog", function(event, data) {
    apex.region("TASK_SUBTASKS_IG").refresh();
});

-------------------------------------------------------------

ADD_CONTENT_SPACE
apex.jQuery(function () {
  apex.jQuery("#TASK_SUBTASKS_IG").on("apexafterrefresh", function () {
    const ig$ = apex.region("TASK_SUBTASKS_IG").widget();
    const gridView = ig$.interactiveGrid("getViews", "grid");
    const model = gridView.model;

    model.forEach(function (record) {
      const level = model.getValue(record, "SUBTASK_LEVEL");
      const content = model.getValue(record, "SUBTASK_CONTENT");
      const html = `<span class="level-${level}">${content}</span>`;
      model.setValue(record, "SUBTASK_CONTENT", html, true);
    });
  });
});


-------------------------------------------------------------

REFRESH_IG_AFTER_DIALOG_CLOSE

region Grid

----------------------------------------------------

PROCESSING AJAX
---------------------------------------

DELETE_SUBTASK
BEGIN
  DELETE FROM TASK_SUBTASKS
  WHERE ID = APEX_APPLICATION.G_X01;

  -- üîÅ –û–±–æ–≤'—è–∑–∫–æ–≤–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
  APEX_JSON.OPEN_OBJECT;
  APEX_JSON.WRITE('status', 'ok');
  APEX_JSON.CLOSE_OBJECT;

EXCEPTION
  WHEN OTHERS THEN
    APEX_JSON.OPEN_OBJECT;
    APEX_JSON.WRITE('status', 'error');
    APEX_JSON.WRITE('message', SQLERRM);
    APEX_JSON.CLOSE_OBJECT;
END;

-- BEGIN
--   DELETE FROM TASK_SUBTASKS
--   WHERE ID = APEX_APPLICATION.G_X01;
-- EXCEPTION
--   WHEN OTHERS THEN
--     -- –¥–ª—è –≤—ñ–¥–ª–∞–¥–∫–∏ (—Ç–∏–º—á–∞—Å–æ–≤–æ)
--     raise_application_error(-20001, '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ: ' || SQLERRM);
-- END;

-------------------------------------------------

GET_SUBTASK_EDIT_URL

DECLARE
  l_url VARCHAR2(4000);
BEGIN
  l_url := apex_page.get_url (
    p_page        => 6, -- –Ω–æ–º–µ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è
    p_clear_cache => '6',
    p_items       => 'P6_ID',
    p_values      => APEX_APPLICATION.G_X01,
    p_request     => 'DIALOG' -- –≤–∞–∂–ª–∏–≤–æ!
  );

  APEX_JSON.OPEN_OBJECT;
  APEX_JSON.WRITE('url', l_url);
  APEX_JSON.CLOSE_OBJECT;
END;
-----------------------------------------

GET_PARENT_INFO_FOR_SUBTASK - disabled

DECLARE
  v_name TASK_SUBTASKS.SUBTASK_CONTENT%TYPE;
  v_task_id TASK_SUBTASKS.TASK_ID%TYPE;
BEGIN
  SELECT SUBTASK_CONTENT, TASK_ID
  INTO v_name, v_task_id
  FROM TASK_SUBTASKS
  WHERE ID = APEX_APPLICATION.G_X01;

  APEX_JSON.OPEN_OBJECT;
  APEX_JSON.WRITE('parent_name', v_name);
  APEX_JSON.WRITE('task_id', v_task_id);
  APEX_JSON.CLOSE_OBJECT;
END;

-------------------------------------

GET_ADD_SUBTASK_DIALOG_URL

DECLARE
  l_url VARCHAR2(4000);
  l_parent_name TASK_SUBTASKS.SUBTASK_CONTENT%TYPE;
  l_task_id     TASK_SUBTASKS.TASK_ID%TYPE;
BEGIN
  -- –û—Ç—Ä–∏–º—É—î–º–æ –Ω–∞–∑–≤—É –ø—ñ–¥–∑–∞–≤–¥–∞–Ω–Ω—è —Ç–∞ TASK_ID
  SELECT SUBTASK_CONTENT, TASK_ID
  INTO l_parent_name, l_task_id
  FROM TASK_SUBTASKS
  WHERE ID = APEX_APPLICATION.G_X01;

  -- –ì–µ–Ω–µ—Ä—É—î–º–æ URL –¥–ª—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è (–±–µ–∑ P6_ID!)
  l_url := apex_page.get_url (
    p_page        => 6,
    p_clear_cache => '6',
    p_items       => 'P6_PARENT_ID,P6_PARENT_NAME,P6_TASK_ID',
    p_values      => APEX_APPLICATION.G_X01 || ',' || l_parent_name || ',' || l_task_id,
    p_request     => 'DIALOG'
  );

  -- –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ URL
  APEX_JSON.OPEN_OBJECT;
  APEX_JSON.WRITE('url', l_url);
  APEX_JSON.CLOSE_OBJECT;
END;


-----------------------------------
