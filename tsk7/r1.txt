Before header

INIT_TASK_ID_IF_NEW

BEGIN
null;
    --:P5_TASK_ID := TASKS_SEQ.NEXTVAL;
END;

server_side - item is null P5_TASK_ID

for test

:P5_TASK_ID := 4;

-------------------


button

ADD_SUBTASK

redirect to page

P6_TASK_ID - &P5_TASK_ID.

----------------------------------

Grid –ø—ñ–¥–∑–∞–≤–¥–∞–Ω—å

select * from TASK_SUBTASKS WHERE TASK_ID = :P5_TASK_ID

static id - TASK_SUBTASKS_IG

Attributes
edit enable
checkbox unchecked

-----------------------------

P5_TASK_ID
hidden

P5_DELETE_SUBTASK_ID
hidden


----------------------------------

DA
------------------------------

Add custom menu row disabled - page load

javascript expression
(function () {
  apex.jQuery(document).on("click", ".a-Button--actions", function () {
    const $button = apex.jQuery(this);
    const $row = $button.closest("tr");
    const rowId = $row.data("id");

    const ig$ = apex.region("TASK_SUBTASKS_IG").widget();
    const gridView = ig$.interactiveGrid("getViews", "grid");
    const model = gridView.model;

    if (!rowId || !model) return;

    const record = model.getRecord(rowId);
    if (!record) return;

    const id = model.getValue(record, "ID");
    if (!id) return;

    setTimeout(function () {
      const menu$ = apex.jQuery("div.a-Menu-content:visible");
      const ul = menu$.find("ul");
      if (!ul.length || ul.find(".custom-delete-subtask").length) return;

     

      const li = $("<li>", {
  class: "custom-no-apex",
  style: "padding: 4px 12px; cursor: pointer; font-weight: 500;",
  text: "–í–∏–¥–∞–ª–∏—Ç–∏ –ø—ñ–¥–∑–∞–≤–¥–∞–Ω–Ω—è"
}).on("click", function (e) {
  e.preventDefault();
  e.stopImmediatePropagation();

  if (confirm("–í–∏–¥–∞–ª–∏—Ç–∏?")) {
    $s("P5_DELETE_SUBTASK_ID", id);
    apex.server.process("DELETE_SUBTASK", {
      x01: id
    }, {
      success: function () {
        apex.region("TASK_SUBTASKS_IG").refresh();
      }
    });
  }
});


      // üîó –ó–±–∏—Ä–∞—î–º–æ DOM
      labelContainer.append(iconSpan, button);
      div.append(labelContainer, '<span class="a-Menu-accelContainer"><span class="a-Menu-subMenuCol"></span></span>');
      li.append(div);
      ul.append(li);
    }, 50);
  });
})();

------------------------------------------

work for menu - page load
// –î–æ–¥–∞—î–º–æ –º–µ–Ω—é –≤ DOM –ª–∏—à–µ 1 —Ä–∞–∑
if (!document.getElementById("custom-ig-menu")) {
  const menu = document.createElement("ul");
  menu.id = "custom-ig-menu";
  menu.style = "position:absolute; display:none; background:white; border:1px solid #ccc; z-index:10000; list-style:none; padding:4px 0; margin:0;";
  menu.innerHTML = `
    <li id="menu-delete-subtask" style="padding:6px 12px; cursor:pointer;">üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ –ø—ñ–¥–∑–∞–≤–¥–∞–Ω–Ω—è</li>
  `;
  document.body.appendChild(menu);
}


------------------------

work for menu 2 - page load

apex.jQuery(document).on("click", ".a-Button--actions", function (e) {
  e.preventDefault();
  e.stopImmediatePropagation();

  const $btn = apex.jQuery(this);
  const $row = $btn.closest("tr");
  const rowId = $row.data("id");

  const ig$ = apex.region("TASK_SUBTASKS_IG").widget();
  const gridView = ig$.interactiveGrid("getViews", "grid");
  const model = gridView.model;
  const record = model.getRecord(rowId);

  if (!record) return;
  const id = model.getValue(record, "ID");

  // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ ID –≤ DOM
  document.getElementById("menu-delete-subtask").dataset.id = id;

  // –ü–æ–∫–∞–∑—É—î–º–æ –∫–∞—Å—Ç–æ–º–Ω–µ –º–µ–Ω—é
  const menu = document.getElementById("custom-ig-menu");
  menu.style.left = `${e.pageX}px`;
  menu.style.top = `${e.pageY}px`;
  menu.style.display = "block";
});

document.addEventListener("click", function (event) {
  const menu = document.getElementById("custom-ig-menu");
  if (!menu.contains(event.target)) {
    menu.style.display = "none";
  }
});

setTimeout( function() {
document.getElementById("menu-delete-subtask").addEventListener("click", function () {
  const id = this.dataset.id;
  if (!id) return;

  if (confirm("–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ –ø—ñ–¥–∑–∞–≤–¥–∞–Ω–Ω—è?")) {
    $s("P5_DELETE_SUBTASK_ID", id);
    apex.server.process("DELETE_SUBTASK", {
  x01: id
}, {
  dataType: "json", // üîÅ —á—ñ—Ç–∫–æ –≤–∫–∞–∑–∞—Ç–∏, —â–æ –æ—á—ñ–∫—É—î–º–æ JSON
  success: function (pData) {
    console.log("‚úÖ –°–µ—Ä–≤–µ—Ä –ø–æ–≤–µ—Ä–Ω—É–≤:", pData);
    if (pData.status === "ok") {
      apex.region("TASK_SUBTASKS_IG").refresh();
    } else {
      alert("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ: " + (pData.message || "–Ω–µ–≤—ñ–¥–æ–º–æ"));
    }
    document.getElementById("custom-ig-menu").style.display = "none";
  },
  error: function () {
    alert("üí• –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∫–æ–Ω–∞—Ç–∏ –∑–∞–ø–∏—Ç –¥–æ —Å–µ—Ä–≤–µ—Ä–∞");
  }
});
  }
});
}, 500);

---------------------------------------

REFRESH_IG_AFTER_DIALOG_CLOSE - Dialog Closed

Dialog Closed
Selection Type Button
Button - ADD_SUBTASK

refresh

region
Grid –ø—ñ–¥–∑–∞–≤–¥–∞–Ω—å

----------------------------------------------

Processing
Process
Grid –ø—ñ–¥–∑–∞–≤–¥–∞–Ω—å - Save Interactive Grid Data

Type - Interactive grid Automatic Row Processing
Editable Region - Grid –ø—ñ–¥–∑–∞–≤–¥–∞–Ω—å

prevent lost update on
return primary - on

---------------------------------------------------

Ajax callback

DELETE_SUBTASK

BEGIN
  DELETE FROM TASK_SUBTASKS
  WHERE ID = APEX_APPLICATION.G_X01;

  -- üîÅ –û–±–æ–≤'—è–∑–∫–æ–≤–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
  APEX_JSON.OPEN_OBJECT;
  APEX_JSON.WRITE('status', 'ok');
  APEX_JSON.CLOSE_OBJECT;

EXCEPTION
  WHEN OTHERS THEN
    APEX_JSON.OPEN_OBJECT;
    APEX_JSON.WRITE('status', 'error');
    APEX_JSON.WRITE('message', SQLERRM);
    APEX_JSON.CLOSE_OBJECT;
END;

-- BEGIN
--   DELETE FROM TASK_SUBTASKS
--   WHERE ID = APEX_APPLICATION.G_X01;
-- EXCEPTION
--   WHEN OTHERS THEN
--     -- –¥–ª—è –≤—ñ–¥–ª–∞–¥–∫–∏ (—Ç–∏–º—á–∞—Å–æ–≤–æ)
--     raise_application_error(-20001, '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ: ' || SQLERRM);
-- END;
