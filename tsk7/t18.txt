–ß—É–¥–æ–≤–æ! –û—Å—å –ø–æ–≤–Ω–∏–π —à–∞–±–ª–æ–Ω –¥–ª—è –æ–±—Ä–æ–±–∫–∏ —ñ **–∑–≤–∏—á–∞–π–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å, —ñ —à–∞–±–ª–æ–Ω—ñ–≤** –Ω–∞ –æ–¥–Ω–æ–º—É –ø—Ä–æ—Ü–µ—Å–Ω–æ–º—É —Ä—ñ–≤–Ω—ñ –≤ Oracle APEX.  
–¢–∏ –æ—Ç—Ä–∏–º–∞—î—à —É–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–µ —Ä—ñ—à–µ–Ω–Ω—è –¥–ª—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏, –¥–µ —Å—Ç–≤–æ—Ä—é—é—Ç—å—Å—è —ñ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —è–∫ TASKS/TASK_SUBTASKS, —Ç–∞–∫ —ñ TASK_TEMPLATES/TASK_TEMPLATE_SUBTASKS.

---

## ‚úÖ 1. –°—Ç–≤–æ—Ä—é—î–º–æ —É–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω—ñ –ø—Ä–æ—Ü–µ—Å–∏

### üü¢ 1. –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≥–æ–ª–æ–≤–Ω–æ–≥–æ ID —É –ø—ñ–¥–∑–∞–≤–¥–∞–Ω–Ω—è—Ö

**–ù–∞–∑–≤–∞**: `Update Main ID in Subtasks`  
**Type**: PL/SQL  
**After Submit**  
**Condition (PL/SQL Expression):**
```plsql
:REQUEST IN ('CREATE_TASK', 'UPDATE_TASK')
```

**PL/SQL Code:**
```plsql
IF :P50_IS_TEMPLATE = 'N' THEN
  UPDATE TASK_SUBTASKS
  SET TASK_ID = :P50_TASK_ID
  WHERE DRAFT_ID = :P50_DRAFT_ID
    AND TASK_ID IS NULL;
ELSE
  UPDATE TASK_TEMPLATE_SUBTASKS
  SET TEMPLATE_ID = :P50_TASK_ID
  WHERE DRAFT_ID = :P50_DRAFT_ID
    AND TEMPLATE_ID IS NULL;
END IF;
```

---

### üü¢ 2. –û–Ω–æ–≤–ª–µ–Ω–Ω—è PARENT_ID —É –ø—ñ–¥–∑–∞–≤–¥–∞–Ω–Ω—è—Ö

**–ù–∞–∑–≤–∞**: `Update PARENT_ID in Subtasks`  
**Type**: PL/SQL  
**After Submit**  
**Condition (PL/SQL Expression):**
```plsql
:REQUEST IN ('CREATE_TASK', 'UPDATE_TASK')
```

**PL/SQL Code:**
```plsql
IF :P50_IS_TEMPLATE = 'N' THEN
  MERGE INTO TASK_SUBTASKS t
  USING (
    SELECT
      child.ID AS CHILD_ID,
      parent.ID AS TRUE_PARENT_ID
    FROM TASK_SUBTASKS child
    JOIN TASK_SUBTASKS parent
      ON child.PARENT_TEMP_ID = parent.TEMP_ROW_ID
     AND child.DRAFT_ID = parent.DRAFT_ID
    WHERE child.DRAFT_ID = :P50_DRAFT_ID
  ) mapping
  ON (t.ID = mapping.CHILD_ID)
  WHEN MATCHED THEN
    UPDATE SET t.PARENT_ID = mapping.TRUE_PARENT_ID;
ELSE
  MERGE INTO TASK_TEMPLATE_SUBTASKS t
  USING (
    SELECT
      child.ID AS CHILD_ID,
      parent.ID AS TRUE_PARENT_ID
    FROM TASK_TEMPLATE_SUBTASKS child
    JOIN TASK_TEMPLATE_SUBTASKS parent
      ON child.PARENT_TEMP_ID = parent.TEMP_ROW_ID
     AND child.DRAFT_ID = parent.DRAFT_ID
    WHERE child.DRAFT_ID = :P50_DRAFT_ID
  ) mapping
  ON (t.ID = mapping.CHILD_ID)
  WHEN MATCHED THEN
    UPDATE SET t.PARENT_ID = mapping.TRUE_PARENT_ID;
END IF;
```

---

### üü¢ 3. –û—á–∏—â–µ–Ω–Ω—è —Ç–∏–º—á–∞—Å–æ–≤–∏—Ö –ø–æ–ª—ñ–≤

**–ù–∞–∑–≤–∞**: `Clear TEMP fields in Subtasks`  
**Type**: PL/SQL  
**After Submit**  
**Condition (PL/SQL Expression):**
```plsql
:REQUEST IN ('CREATE_TASK', 'UPDATE_TASK')
```

**PL/SQL Code:**
```plsql
IF :P50_IS_TEMPLATE = 'N' THEN
  UPDATE TASK_SUBTASKS
  SET
    DRAFT_ID = NULL,
    TEMP_ROW_ID = NULL,
