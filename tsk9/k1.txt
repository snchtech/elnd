–ß—É–¥–æ–≤–µ —É—Ç–æ—á–Ω–µ–Ω–Ω—è! üî•  
–¢–∏ –∞–±—Å–æ–ª—é—Ç–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –º–∏—Å–ª–∏—à: **–æ–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞**, **–æ–¥–∏–Ω AJAX –≤–∏–∫–ª–∏–∫**, **–æ–¥–∏–Ω –ø—Ä–æ—Ü–µ—Å–∏–Ω–≥**, —è–∫–∏–π —É—Å–µ—Ä–µ–¥–∏–Ω—ñ –ø–µ—Ä–µ–≤—ñ—Ä—è—î `P5_SWITCH`  
—ñ –∑–∞–ø—É—Å–∫–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω—É –ª–æ–≥—ñ–∫—É –¥—É–±–ª—é–≤–∞–Ω–Ω—è TASK –∞–±–æ TEMPLATE.

---

# ‚úÖ –û—Å—å –æ–±'—î–¥–Ω–∞–Ω–∏–π, –ø–æ–≤–Ω—ñ—Å—Ç—é –≥–æ—Ç–æ–≤–∏–π PL/SQL –∫–æ–¥:

```plsql
DECLARE
  -- –ó–∞–≥–∞–ª—å–Ω—ñ –∑–º—ñ–Ω–Ω—ñ
  v_new_task_id TASKS.ID%TYPE;
  v_new_template_id TASK_TEMPLATES.ID%TYPE;

  -- –î–ª—è –º–∞–ø–∏ —Å—Ç–∞—Ä–∏–π ID ‚Üí –Ω–æ–≤–∏–π ID
  TYPE t_id_map IS TABLE OF NUMBER INDEX BY NUMBER;
  l_id_map t_id_map;

  -- –î–ª—è –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è –ø—ñ–¥–∑–∞–≤–¥–∞–Ω—å
  CURSOR c_task_subtasks IS
    SELECT ID, PARENT_ID, SUBTASK_CONTENT, STATUS_ID, PLANNING_DATE_END, SUBTASK_ORDER, TEMPLATE_SUBTASK_ID
    FROM TASK_SUBTASKS
    WHERE TASK_ID = :P5_TASK_ID;

  -- –î–ª—è –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è –ø—ñ–¥—à–∞–±–ª–æ–Ω—ñ–≤
  CURSOR c_template_subtasks IS
    SELECT ID, PARENT_ID, SUBTASK_CONTENT, STATUS_ID, SUBTASK_ORDER
    FROM TASK_TEMPLATE_SUBTASKS
    WHERE TEMPLATE_ID = :P5_TASK_ID;

  v_new_subtask_id NUMBER;
BEGIN
  IF :P5_SWITCH = 0 THEN
    -- ================ –ö–û–ü–Ü–Æ–Ñ–ú–û TASK ==================

    INSERT INTO TASKS (
      ID, DATE_CREATE, TASK_CONTENT, CREATOR_ID, PLANNING_DATE_START,
      PLANNING_DATE_END, STATUS_ID, DEPARTMENT_ID, UNIT_ID, TYPE_ID,
      PAGE_LIST_ID, IS_GENERATED, GENERATED_DATE, TEMPLATE_ID, NOTE
    )
    SELECT
      TASKS_SEQ.NEXTVAL,
      SYSDATE,
      TASK_CONTENT,
      CREATOR_ID,
      SYSDATE,
      PLANNING_DATE_END,
      STATUS_ID,
      DEPARTMENT_ID,
      UNIT_ID,
      TYPE_ID,
      PAGE_LIST_ID,
      IS_GENERATED,
      GENERATED_DATE,
      TEMPLATE_ID,
      NOTE
    FROM TASKS
    WHERE ID = :P5_TASK_ID
    RETURNING ID INTO v_new_task_id;

    -- –ö–æ–ø—ñ—é—î–º–æ –ø—ñ–¥–∑–∞–≤–¥–∞–Ω–Ω—è
    FOR r IN c_task_subtasks LOOP
      INSERT INTO TASK_SUBTASKS (
        ID, TASK_ID, SUBTASK_CONTENT, STATUS_ID,
        PLANNING_DATE_END, PARENT_ID, SUBTASK_ORDER, TEMPLATE_SUBTASK_ID
      ) VALUES (
        TASK_SUBTASKS_SEQ.NEXTVAL,
        v_new_task_id,
        r.SUBTASK_CONTENT,
        r.STATUS_ID,
        r.PLANNING_DATE_END,
        NULL, -- —Ç–∏–º—á–∞—Å–æ–≤–æ –±–µ–∑ parent_id
        r.SUBTASK_ORDER,
        r.TEMPLATE_SUBTASK_ID
      )
      RETURNING ID INTO v_new_subtask_id;
      
      l_id_map(r.ID) := v_new_subtask_id;
    END LOOP;

    -- –û–Ω–æ–≤–ª—é—î–º–æ PARENT_ID –¥–ª—è –Ω–æ–≤–∏—Ö –ø—ñ–¥–∑–∞–≤–¥–∞–Ω—å
    FOR old_id IN (
      SELECT DISTINCT ID, PARENT_ID
      FROM TASK_SUBTASKS
      WHERE TASK_ID = :P5_TASK_ID
        AND PARENT_ID IS NOT NULL
    ) LOOP
      UPDATE TASK_SUBTASKS
      SET PARENT_ID = l_id_map(old_id.PARENT_ID)
      WHERE TASK_ID = v_new_task_id
        AND ID = l_id_map(old_id.ID);
    END LOOP;

    -- –í–∏–≤–æ–¥–∏–º–æ –Ω–æ–≤–∏–π ID TASK
    APEX_JSON.OPEN_OBJECT;
    APEX_JSON.WRITE('status', 'ok');
    APEX_JSON.WRITE('newId', v_new_task_id);
    APEX_JSON.CLOSE_OBJECT;

  ELSE
    -- ================ –ö–û–ü–Ü–Æ–Ñ–ú–û TEMPLATE ==================

    INSERT INTO TASK_TEMPLATES (
      ID, DATE_CREATE, TASK_CONTENT, CREATOR_ID, STATUS_ID,
      DEPARTMENT_ID, UNIT_ID, TYPE_ID, PAGE_LIST_ID,
      PERIOD_MODE, PERIOD_INTERVAL, PERIOD_TIME,
      HOURLY_TIMES, NEXT_RUN_DATE, DATE_END
    )
    SELECT
      TASK_TEMPLATE_SEQ.NEXTVAL,
      SYSDATE,
      TASK_CONTENT,
      CREATOR_ID,
      STATUS_ID,
      DEPARTMENT_ID,
      UNIT_ID,
      TYPE_ID,
      PAGE_LIST_ID,
      PERIOD_MODE,
      PERIOD_INTERVAL,
      PERIOD_TIME,
      HOURLY_TIMES,
      NEXT_RUN_DATE,
      DATE_END
    FROM TASK_TEMPLATES
    WHERE ID = :P5_TASK_ID
    RETURNING ID INTO v_new_template_id;

    -- –ö–æ–ø—ñ—é—î–º–æ –ø—ñ–¥—à–∞–±–ª–æ–Ω–∏
    FOR r IN c_template_subtasks LOOP
      INSERT INTO TASK_TEMPLATE_SUBTASKS (
        ID, TEMPLATE_ID, SUBTASK_CONTENT, STATUS_ID,
        PARENT_ID, SUBTASK_ORDER
      ) VALUES (
        TASK_TEMPLATE_SUBTASKS_SEQ.NEXTVAL,
        v_new_template_id,
        r.SUBTASK_CONTENT,
        r.STATUS_ID,
        NULL, -- —Ç–∏–º—á–∞—Å–æ–≤–æ –±–µ–∑ parent_id
        r.SUBTASK_ORDER
      )
      RETURNING ID INTO v_new_subtask_id;
      
      l_id_map(r.ID) := v_new_subtask_id;
    END LOOP;

    -- –û–Ω–æ–≤–ª—é—î–º–æ PARENT_ID –¥–ª—è –Ω–æ–≤–∏—Ö –ø—ñ–¥—à–∞–±–ª–æ–Ω—ñ–≤
    FOR old_id IN (
      SELECT DISTINCT ID, PARENT_ID
      FROM TASK_TEMPLATE_SUBTASKS
      WHERE TEMPLATE_ID = :P5_TASK_ID
        AND PARENT_ID IS NOT NULL
    ) LOOP
      UPDATE TASK_TEMPLATE_SUBTASKS
      SET PARENT_ID = l_id_map(old_id.PARENT_ID)
      WHERE TEMPLATE_ID = v_new_template_id
        AND ID = l_id_map(old_id.ID);
    END LOOP;

    -- –í–∏–≤–æ–¥–∏–º–æ –Ω–æ–≤–∏–π ID TEMPLATE
    APEX_JSON.OPEN_OBJECT;
    APEX_JSON.WRITE('status', 'ok');
    APEX_JSON.WRITE('newId', v_new_template_id);
    APEX_JSON.CLOSE_OBJECT;
  END IF;

EXCEPTION
  WHEN OTHERS THEN
    APEX_JSON.OPEN_OBJECT;
    APEX_JSON.WRITE('status', 'error');
    APEX_JSON.WRITE('message', SQLERRM);
    APEX_JSON.CLOSE_OBJECT;
END;
```

---

# üìà –©–æ –º–∏ —Ç—É—Ç –º–∞—î–º–æ:

| P5_SWITCH | –©–æ –¥—É–±–ª—é—î–º–æ | –ö—É–¥–∏ –∑–∞–ø–∏—Å—É—î–º–æ |
|-----------|-------------|----------------|
| 0         | TASKS + TASK_SUBTASKS | –ù–æ–≤–∏–π TASK_ID |
| 1         | TASK_TEMPLATES + TASK_TEMPLATE_SUBTASKS | –ù–æ–≤–∏–π TEMPLATE_ID |

‚úÖ –ü–æ–≤–Ω—ñ—Å—Ç—é –≤—Ä–∞—Ö–æ–≤–∞–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–∫–ª–∞–¥–µ–Ω–∏—Ö `PARENT_ID`  
‚úÖ –û–¥–Ω–∞ —Ç–æ—á–∫–∞ –¥—É–±–ª—é–≤–∞–Ω–Ω—è  
‚úÖ –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ `newId` –¥–ª—è —Ä–µ–¥—ñ—Ä–µ–∫—Ç—É

---

# üõ† –í–∞–∂–ª–∏–≤–æ:

- `TASKS_SEQ`, `TASK_SUBTASKS_SEQ`, `TASK_TEMPLATE_SEQ`, `TASK_TEMPLATE_SUBTASKS_SEQ` ‚Äî –º–∞—é—Ç—å –±—É—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º–∏ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ—Å—Ç—è–º–∏ –≤ –ë–î.
- `P5_TASK_ID` ‚Äî –º–∞—î –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏—Å—å –≤ –ø—Ä–æ—Ü–µ—Å —á–µ—Ä–µ–∑ `pageItems` —É `apex.server.process`.
- `P5_SWITCH` ‚Äî —Ç–∞–∫–æ–∂ –º–∞—î –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏—Å—å.

---

# üöÄ –í—Å–µ –≥–æ—Ç–æ–≤–æ –¥–ª—è –ø–æ–≤–Ω–æ—Ü—ñ–Ω–Ω–æ–≥–æ –¥—É–±–ª—é–≤–∞–Ω–Ω—è –±—É–¥—å-—á–æ–≥–æ!

–•–æ—á–µ—à ‚Äî —â–µ –¥–æ–ø–æ–º–æ–∂—É –Ω–∞–ø–∏—Å–∞—Ç–∏ –ø—Ä–∏–∫–ª–∞–¥ –º–∞–ª–µ–Ω—å–∫–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (toast) "–£—Å–ø—ñ—à–Ω–æ –¥—É–±–ª—å–æ–≤–∞–Ω–æ" –∑–∞–º—ñ—Å—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ `alert`? üî• –¶–µ –≤–∏–≥–ª—è–¥–∞—î –Ω–∞–±–∞–≥–∞—Ç–æ –∫—Ä–∞—Å–∏–≤—ñ—à–µ!  
–°–∫–∞–∑–∞—Ç–∏ "—Ç–∞–∫"? ‚úÖ
