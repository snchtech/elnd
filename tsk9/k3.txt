–ß—É–¥–æ–≤–æ! üî•  
–¢–æ–¥—ñ —Ç—Ä–∏–º–∞—î–º–æ **–ø–æ–≤–Ω—ñ—Å—Ç—é –ø–µ—Ä–µ–ø–∏—Å–∞–Ω–∏–π —ñ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –∫–æ–¥ –¥—É–±–ª—é–≤–∞–Ω–Ω—è** –∑–∞–≤–¥–∞–Ω–Ω—è –∞–±–æ —à–∞–±–ª–æ–Ω—É **–±–µ–∑ –ø–æ–º–∏–ª–∫–∏ RETURNING**, –∑—ñ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è–º —ñ—î—Ä–∞—Ä—Ö—ñ—ó `PARENT_ID`.

---

# üìã –ì–æ—Ç–æ–≤–∏–π –æ–±'—î–¥–Ω–∞–Ω–∏–π –ø—Ä–æ—Ü–µ—Å –¥–ª—è `DUPLICATE_TASK_OR_TEMPLATE`:

```plsql
DECLARE
  -- –ó–∞–≥–∞–ª—å–Ω—ñ –∑–º—ñ–Ω–Ω—ñ
  v_new_task_id TASKS.ID%TYPE;
  v_new_template_id TASK_TEMPLATES.ID%TYPE;

  -- –ú–∞–ø–∞ —Å—Ç–∞—Ä–∏–π ID ‚Üí –Ω–æ–≤–∏–π ID
  TYPE t_id_map IS TABLE OF NUMBER INDEX BY NUMBER;
  l_id_map t_id_map;

  -- –ö—É—Ä—Å–æ—Ä–∏
  CURSOR c_task_subtasks IS
    SELECT ID, PARENT_ID, SUBTASK_CONTENT, STATUS_ID, PLANNING_DATE_END, SUBTASK_ORDER, TEMPLATE_SUBTASK_ID
    FROM TASK_SUBTASKS
    WHERE TASK_ID = :P5_TASK_ID;

  CURSOR c_template_subtasks IS
    SELECT ID, PARENT_ID, SUBTASK_CONTENT, STATUS_ID, SUBTASK_ORDER
    FROM TASK_TEMPLATE_SUBTASKS
    WHERE TEMPLATE_ID = :P5_TASK_ID;

  v_new_subtask_id NUMBER;
BEGIN
  IF :P5_SWITCH = 0 THEN
    -- === –î—É–±–ª—é–≤–∞–Ω–Ω—è TASK ===

    -- 1. –û—Ç—Ä–∏–º—É—î–º–æ –Ω–æ–≤–∏–π ID –∑–∞–∑–¥–∞–ª–µ–≥—ñ–¥—å
    SELECT TASKS_SEQ.NEXTVAL INTO v_new_task_id FROM DUAL;

    -- 2. –í—Å—Ç–∞–≤–ª—è—î–º–æ –Ω–æ–≤–∏–π TASK
    INSERT INTO TASKS (
      ID, DATE_CREATE, TASK_CONTENT, CREATOR_ID, PLANNING_DATE_START,
      PLANNING_DATE_END, STATUS_ID, DEPARTMENT_ID, UNIT_ID, TYPE_ID,
      PAGE_LIST_ID, IS_GENERATED, GENERATED_DATE, TEMPLATE_ID, NOTE
    )
    SELECT
      v_new_task_id,
      SYSDATE,
      TASK_CONTENT,
      CREATOR_ID,
      SYSDATE,
      PLANNING_DATE_END,
      STATUS_ID,
      DEPARTMENT_ID,
      UNIT_ID,
      TYPE_ID,
      PAGE_LIST_ID,
      IS_GENERATED,
      GENERATED_DATE,
      TEMPLATE_ID,
      NOTE
    FROM TASKS
    WHERE ID = :P5_TASK_ID;

    -- 3. –ö–æ–ø—ñ—é—î–º–æ –ø—ñ–¥–∑–∞–≤–¥–∞–Ω–Ω—è
    FOR r IN c_task_subtasks LOOP
      SELECT TASK_SUBTASKS_SEQ.NEXTVAL INTO v_new_subtask_id FROM DUAL;

      INSERT INTO TASK_SUBTASKS (
        ID, TASK_ID, SUBTASK_CONTENT, STATUS_ID,
        PLANNING_DATE_END, PARENT_ID, SUBTASK_ORDER, TEMPLATE_SUBTASK_ID
      ) VALUES (
        v_new_subtask_id,
        v_new_task_id,
        r.SUBTASK_CONTENT,
        r.STATUS_ID,
        r.PLANNING_DATE_END,
        NULL, -- —Ç–∏–º—á–∞—Å–æ–≤–æ –±–µ–∑ parent_id
        r.SUBTASK_ORDER,
        r.TEMPLATE_SUBTASK_ID
      );

      -- –ó–∞–ø–∞–º'—è—Ç–æ–≤—É—î–º–æ –º–∞–ø—É —Å—Ç–∞—Ä–∏–π ‚Üí –Ω–æ–≤–∏–π ID
      l_id_map(r.ID) := v_new_subtask_id;
    END LOOP;

    -- 4. –û–Ω–æ–≤–ª—é—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ PARENT_ID –¥–ª—è –ø—ñ–¥–∑–∞–≤–¥–∞–Ω—å
    FOR old_id IN (
      SELECT DISTINCT ID, PARENT_ID
      FROM TASK_SUBTASKS
      WHERE TASK_ID = :P5_TASK_ID
        AND PARENT_ID IS NOT NULL
    ) LOOP
      UPDATE TASK_SUBTASKS
      SET PARENT_ID = l_id_map(old_id.PARENT_ID)
      WHERE TASK_ID = v_new_task_id
        AND ID = l_id_map(old_id.ID);
    END LOOP;

    -- 5. –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ JSON –∑ –Ω–æ–≤–∏–º ID
    APEX_JSON.OPEN_OBJECT;
    APEX_JSON.WRITE('status', 'ok');
    APEX_JSON.WRITE('newId', v_new_task_id);
    APEX_JSON.CLOSE_OBJECT;

  ELSE
    -- === –î—É–±–ª—é–≤–∞–Ω–Ω—è TEMPLATE ===

    -- 1. –û—Ç—Ä–∏–º—É—î–º–æ –Ω–æ–≤–∏–π ID –∑–∞–∑–¥–∞–ª–µ–≥—ñ–¥—å
    SELECT TASK_TEMPLATE_SEQ.NEXTVAL INTO v_new_template_id FROM DUAL;

    -- 2. –í—Å—Ç–∞–≤–ª—è—î–º–æ –Ω–æ–≤–∏–π TEMPLATE
    INSERT INTO TASK_TEMPLATES (
      ID, DATE_CREATE, TASK_CONTENT, CREATOR_ID, STATUS_ID,
      DEPARTMENT_ID, UNIT_ID, TYPE_ID, PAGE_LIST_ID,
      PERIOD_MODE, PERIOD_INTERVAL, PERIOD_TIME,
      HOURLY_TIMES, NEXT_RUN_DATE, DATE_END
    )
    SELECT
      v_new_template_id,
      SYSDATE,
      TASK_CONTENT,
      CREATOR_ID,
      STATUS_ID,
      DEPARTMENT_ID,
      UNIT_ID,
      TYPE_ID,
      PAGE_LIST_ID,
      PERIOD_MODE,
      PERIOD_INTERVAL,
      PERIOD_TIME,
      HOURLY_TIMES,
      NEXT_RUN_DATE,
      DATE_END
    FROM TASK_TEMPLATES
    WHERE ID = :P5_TASK_ID;

    -- 3. –ö–æ–ø—ñ—é—î–º–æ –ø—ñ–¥—à–∞–±–ª–æ–Ω–∏
    FOR r IN c_template_subtasks LOOP
      SELECT TASK_TEMPLATE_SUBTASKS_SEQ.NEXTVAL INTO v_new_subtask_id FROM DUAL;

      INSERT INTO TASK_TEMPLATE_SUBTASKS (
        ID, TEMPLATE_ID, SUBTASK_CONTENT, STATUS_ID,
        PARENT_ID, SUBTASK_ORDER
      ) VALUES (
        v_new_subtask_id,
        v_new_template_id,
        r.SUBTASK_CONTENT,
        r.STATUS_ID,
        NULL,
        r.SUBTASK_ORDER
      );

      l_id_map(r.ID) := v_new_subtask_id;
    END LOOP;

    -- 4. –û–Ω–æ–≤–ª—é—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ PARENT_ID –¥–ª—è –ø—ñ–¥—à–∞–±–ª–æ–Ω—ñ–≤
    FOR old_id IN (
      SELECT DISTINCT ID, PARENT_ID
      FROM TASK_TEMPLATE_SUBTASKS
      WHERE TEMPLATE_ID = :P5_TASK_ID
        AND PARENT_ID IS NOT NULL
    ) LOOP
      UPDATE TASK_TEMPLATE_SUBTASKS
      SET PARENT_ID = l_id_map(old_id.PARENT_ID)
      WHERE TEMPLATE_ID = v_new_template_id
        AND ID = l_id_map(old_id.ID);
    END LOOP;

    -- 5. –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ JSON –∑ –Ω–æ–≤–∏–º ID
    APEX_JSON.OPEN_OBJECT;
    APEX_JSON.WRITE('status', 'ok');
    APEX_JSON.WRITE('newId', v_new_template_id);
    APEX_JSON.CLOSE_OBJECT;
  END IF;

EXCEPTION
  WHEN OTHERS THEN
    APEX_JSON.OPEN_OBJECT;
    APEX_JSON.WRITE('status', 'error');
    APEX_JSON.WRITE('message', SQLERRM);
    APEX_JSON.CLOSE_OBJECT;
END;
```

---

# üìà –©–æ —Ç—É—Ç –≤—Ä–∞—Ö–æ–≤–∞–Ω–æ:

- **–ù–µ–º–∞—î RETURNING** ‚Äî —Ç–µ–ø–µ—Ä `SELECT NEXTVAL INTO` –æ–∫—Ä–µ–º–æ –ø–µ—Ä–µ–¥ –≤—Å—Ç–∞–≤–∫–æ—é.
- **–ü—ñ–¥–∑–∞–≤–¥–∞–Ω–Ω—è** —ñ **–ø—ñ–¥—à–∞–±–ª–æ–Ω–∏** –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∫–æ–ø—ñ—é—é—Ç—å—Å—è.
- **PARENT_ID** –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î—Ç—å—Å—è –Ω–∞ –Ω–æ–≤—ñ ID —á–µ—Ä–µ–∑ –º–∞–ø—É.
- **–°—Ç–æ—Ä—ñ–Ω–∫–∞** –æ—Ç—Ä–∏–º—É—î `newId` –¥–ª—è —Ä–µ–¥–∏—Ä–µ–∫—Ç—É.

---

# üìã –ù–∞ —Å—Ç–æ—Ä–æ–Ω—ñ JavaScript (–∫–Ω–æ–ø–∫–∞ Duplicate):

```javascript
apex.server.process("DUPLICATE_TASK_OR_TEMPLATE", {
  pageItems: "#P5_TASK_ID, #P5_SWITCH"
}, {
  dataType: "json",
  success: function(pData) {
    if (pData.status === 'ok') {
      var url = apex.util.makeApplicationUrl({
        pageId: 5,
        clearCache: "5",
        itemNames: ["P5_TASK_ID", "P5_TASK_ACTION_MODE", "P5_SWITCH"],
        itemValues: [pData.newId, "2", $v("P5_SWITCH")]
      });
      apex.navigation.redirect(url);
    } else {
      apex.message.alert("–ü–æ–º–∏–ª–∫–∞ –¥—É–±–ª—é–≤–∞–Ω–Ω—è: " + pData.message);
    }
  },
  error: function() {
    apex.message.alert("–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –¥—É–±–ª—é–≤–∞–Ω–Ω—ñ.");
  }
});
```

---

# ‚úÖ –í—Å–µ —Ç–µ–ø–µ—Ä –ø–æ–≤–Ω—ñ—Å—Ç—é –ø—Ä–∞–≤–∏–ª—å–Ω–æ —ñ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏–º–µ —Å—Ç–∞–±—ñ–ª—å–Ω–æ –Ω–∞–≤—ñ—Ç—å –Ω–∞ –≤–µ–ª–∏–∫–∏—Ö –¥–∞–Ω–∏—Ö!

---

# üöÄ –•–æ—á–µ—à ‚Äî —â–µ –ø—ñ–¥–∫–∞–∂—É, —è–∫ –æ–ø—Ç–∏–º—ñ–∑—É–≤–∞—Ç–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è `PARENT_ID` —á–µ—Ä–µ–∑ –æ–¥–∏–Ω UPDATE –±–µ–∑ –∫—É—Ä—Å–æ—Ä–∞, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ —â–µ –ø—Ä–∏—à–≤–∏–¥—à–∏—Ç–∏? üî•  
–°–∫–∞–∑–∞—Ç–∏ "—Ç–∞–∫"? ‚úÖ
